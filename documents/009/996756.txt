#include<iostream>

using namespace std;
 
struct S{
	int m,d;
	int r[51];
};

int main(){
 
   int N,D;
   int p[51][51];
   bool f[51];
   int min;
   S pmd[51][51];
   S tmp;

   cin>>N>>D;

    for(int i=0;i<51;i++){
	   for(int j=0;j<51;j++){
		   p[i][j]=-1;
		   pmd[i][j].m=-1;
		   pmd[i][j].d=-1;
		   for(int k=0;k<51;k++){
			   pmd[i][j].r[k]=-1;
		   }
	   }
   }

   for(int i=0;i<N;i++){
	   for(int j=0;j<D;j++){
		   cin>>p[i][j];
	   }
   }
  
   for(int i=0;i<D;i++){
	   min=p[0][i];
	   for(int j=1;j<N;j++){
		   if(min>p[j][i]) min=p[j][i];
	   }
	   for(int j=0;j<N;j++){
		   if(min==p[j][i]){
		       if(i==0){
				   pmd[j][0].d=0;
				   pmd[j][0].m=p[j][0];
				   pmd[j][0].r[0]=j+1;
		       }
			   else{
				   for(int k=0;k<N;k++){
					   if(pmd[k][i-1].m!=-1){
						   tmp.d=pmd[k][i-1].d;
						   tmp.m=pmd[k][i-1].m;
						   tmp.m+=p[j][i];
						   if(k!=j) tmp.d++;
						   if(pmd[j][i].m==-1||pmd[j][i].d>tmp.d||pmd[j][i].d==tmp.d&&pmd[j][i].m>tmp.m){
							   pmd[j][i].d=tmp.d;
							   pmd[j][i].m=tmp.m;
							   for(int l=0;l<i;l++){
							     pmd[j][i].r[l]=pmd[k][i-1].r[l];
							   }
							   pmd[j][i].r[i]=j+1;
						   }
					   }
				   }
			   }
		   }
	   }
   }

   for(int i=0;i<51;i++){
	   if(pmd[i][D-1].m==-1) f[i]=false;
	   else f[i]=true;
   }

   min=1000000000;
   for(int i=0;i<51;i++){
	   if(f[i]==true&&min>pmd[i][D-1].m) min=pmd[i][D-1].m;
   }
   for(int i=0;i<51;i++){
	   if(min!=pmd[i][D-1].m) f[i]=false;
   }

   min=1000000000;
   for(int i=0;i<51;i++){
	   if(f[i]==true&&min>pmd[i][D-1].d) min=pmd[i][D-1].d;
   }
   for(int i=0;i<51;i++){
	   if(min!=pmd[i][D-1].d) f[i]=false;
   }

   for(int i=0;i<D;i++){
	   min=1000000000;
	   for(int j=0;j<51;j++){
		   if(f[j]==true&&min>pmd[j][D-1].r[i]) min=pmd[j][D-1].r[i];
	   }
	    for(int j=0;j<51;j++){
		   if(min!=pmd[j][D-1].r[i]) f[j]=false;
	   }
   }

   for(int i=0;i<51;i++){
	   if(f[i]==true){
		   cout<<pmd[i][D-1].m<<" "<<pmd[i][D-1].d<<endl;
		   for(int j=0;j<D;j++){
			   cout<<pmd[i][D-1].r[j]<<endl;
		   }
		   return 0;
	   }
   }

   return 0;
}