#include <iostream>
#include <vector>
using namespace std;

int libgirl();
int girl(int x, int y, int point);

int main(){
	int times;
	int i;
	cin >> times;
	for(i = 0; i < times; i++){
		cout << libgirl() << endl;
	}
}

int libgirl(){
	string shelve_input;
	int N, i;
	vector<vector<int>> shelve;
	int upper = 0;
	int downer = 0;
	int start = 1;
	int end = 1;
	int walk = 0;
	
	cin >> N;
	cin >> shelve_input;
	for(i = 0; i < 2*N; i++){
		shelve.push_back({0,0});
	}
	for(i = 0; i < 2*N; i++){
		if(shelve_input[i] == 'Y'){
			shelve[i][0] = 1;
			upper++;
		}else{
			shelve[i][0] = 0;
		}
	}
	for(i = 2*N; i < 4*N; i++){
		if(shelve_input[i] == 'Y'){
			shelve[i-2*N][1] = 1;
			downer++;
		}else{
			shelve[i-2*N][1] = 0;
		}
	}
	for(i = 0; i < 2*N; i++){
		if(shelve[i][0] == 1){
			start = 0;
			break;
		}else if(shelve[i][1] == 1){
			break;
		}
	}
	for(i = 2*N-1; i >= 0; i--){
		if(shelve[i][0] == 1){
			end = 0;
			break;
		}else if(shelve[i][1] == 1){
			break;
		}
	}
	for(i = 2; i < 2*N; i = i + 2){
		if(shelve[i][0] == 1 && shelve[i-1][0] == 1){
			upper--;
		}
		if(shelve[i][1] == 1 && shelve[i-1][1] == 1){
			downer--;
		}
	}
	walk = upper + downer + N + start + end;
	return walk;
}