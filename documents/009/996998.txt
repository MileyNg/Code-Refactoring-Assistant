#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>

using namespace std;

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))
#define F first
#define S second
#define INF 1 << 30

typedef pair<int, int> pi;
typedef pair<int, pi> pii;
typedef vector<int> vi;
typedef queue<int> qi;
typedef long long ll;

int res[64], N, c[64], used[64], endf;

int dfs(int n, int sum){
  if(n == N){
    memcpy(res, used, sizeof(used));
    endf = 1;
    return 1;
  }

  int res = 0;

  rep(i, 14){
    if(!c[i]) continue;
    if(sum - i == 0 ||  (sum-i)%i == 0){
      used[n] = i;
      c[i]--;
      res |= dfs(n+1, sum-i);
      if(endf) return res;
      c[i]++;
      used[n] = 0;
    }
  }

  return res;
}

int main(){
  while(scanf("%d", &N) && N){
    int in, sum = 0;
    endf = 0;
    memset(c, 0, sizeof(c));
    rep(i, N){
      scanf("%d", &in);
      sum += sum;
      c[in]++;
    }

    rep(i, 14){
      //      printf("%d\n", i);
      if(c[i] == 0) continue;
      if((sum-i)%i != 0) continue;
      c[i]--;
      used[0] = i;
      if(dfs(1, sum-i)){ rep(j, N) printf(j?" %d":"%d", res[j]); puts("");}
      if(endf) break;
      c[i]++;
    }

    if(!endf) puts("NO");
  }
  return 0;
}