#include<iostream>
#include<cmath>
const int limit=10;
int n,ans;
int num[limit],x[limit],y[limit],r[limit],v[limit];
bool visit[limit];
bool road[limit][limit];
using namespace std;

void dfs(int step)
{
	if(step-1>ans) ans=step-1;
	for(int i=1;i<=n;i++) 
	if ((!visit[i])&&(num[i]==0))
		for(int j=1;j<=n;j++) if ((v[i]==v[j])&&(i!=j)&&(!visit[j])&&(num[j]==0)) 
		{
			visit[i]=true; visit[j]=true;
			for(int k=1;k<=n;k++) 
			{
				if(road[i][k]) num[k]--;
				if(road[j][k]) num[k]--;
			}
			dfs(step+1);
			visit[i]=false; visit[j]=false;
			for(int k=1;k<=n;k++) 
			{
				if(road[i][k]) num[k]++;
				if(road[j][k]) num[k]++;
			}
		}
}
int main()
{
	//freopen("input.txt","r",stdin);
//	freopen("output.txt","w",stdout);
	cin>>n;
	while(n!=0)
	{
		ans=0;
		for(int i=1;i<=n;i++)
		{
			num[i]=0;
			for(int j=1;j<=n;j++) link[i][j]=false;
		}
		for(int i=1;i<=n;i++)
		{
			visit[i]=false;
		 	cin>>x[i]>>y[i]>>r[i]>>v[i];
		 	for(int j=1;j<i;j++) if((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j])<(r[i]+r[j])*(r[i]+r[j]))
		 	{
		 		road[j][i]=true;
		 		num[i]++;
		 	}
	    }
	    dfs(1);
	    cout<<ans*2<<endl;
	    cin>>n;
	}
	return 0;
}