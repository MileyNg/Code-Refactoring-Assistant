#include<iostream>
#include<algorithm>

using namespace std;
int x2,y2;
bool iti[20][20]={false,};
bool hantei(char ,int ,bool [21][21]);

int main(){
	int N;
	int M;
	char dist;
	int cnt=0;
	while(1){
		bool houseki[21][21]={false,};
		int x,y;
		cin>>N;
		if(N==0)
			exit(0);

		for(int i=0;i<N;i++){
			cin>>x>>y;
			houseki[x-1][y-1]=true;
		}
		x2=10;
		y2=10;
		
		cin>>M;
		for(int j=0;j<M;j++){
			int kyori;
			iti[x2-1][y2-1]=false;
			cin>>dist>>kyori;
			if(hantei(dist,kyori,houseki))
				cnt++;
		}
		if(cnt==N)
			cout<<"YES"<<endl;
		else
			cout<<"NO"<<endl;

		for(int i=0;i<20;i++)
			fill(iti[i],iti[i]+20,false);
	}
	return 0;
}

bool hantei(char dist,int kyori,bool houseki[][21]){
	
	switch (dist)
	{
	case 'N':
		for(int i=0;i<=kyori;i++)
			if(houseki[x2-1][y2-1+i]==true){
				y2+=kyori;
				houseki[x2-1][y2-1+i]=false;
				return true;
			}
		y2+=kyori;
		break;
	case 'E':
		for(int i=0;i<=kyori;i++)
			if(houseki[x2-1+i][y2-1]==true){
				x2+=kyori;
				houseki[x2-1+i][y2-1]=false;
				return true;
			}
		x2+=kyori;
		break;
	case 'S':
		for(int i=0;i<=kyori;i++)
			if(houseki[x2-1][y2-1-i]==true){
				y2-=kyori;
				houseki[x2-1][y2-1-i]=false;
				return true;
			}
		y2-=kyori;
		break;
	case 'W':
			for(int i=0;i<=kyori;i++)
			if(houseki[x2-1-i][y2-1]==true){
				x2-=kyori;
				houseki[x2-1-i][y2-1]=false;
				return true;
			}
		x2-=kyori;
		break;
	}
	iti[x2-1][y2-1]=true;
		return false;
}