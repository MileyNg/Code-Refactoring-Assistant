#include <bitset>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <vector>
#include <array>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <string>
#include <algorithm>
#include <numeric>
#include <utility>
#include <cstdlib>
#include <ctime>
#include <cstdint>
#include <cmath>

#define FOR(i,k,n)  for(int i = (k);i < (n);++i)
#define REP(i,n)    FOR(i,0,n)
#define EACH(i,x)   for(auto & i : x)
#define ALL(x)      begin(x),end(x)

using namespace std;

typedef vector<int> vecint;
const int INF=100000000;

void sh(vector<vecint>& t,vecint& bdp,int n){
  priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> q;
  q.push(make_pair(0,0));
  while(!q.empty()){
    auto p=q.top();q.pop();
    if(bdp[p.second] < p.first)continue;
    REP(i,n){
      bitset<16> bs(p.second);
      if(bs[i]==false){
        bitset<16> cbs(bs.to_ulong());
        cbs[i]=true;
        int v=cbs.to_ulong();
        int cst=t[i][0];
        REP(j,n){
          if(bs[j]){
            cst=min(cst,t[i][j+1]);
          }
        }
        if(bdp[v] > bdp[p.second] + cst){
          bdp[v]=bdp[p.second]+cst;
          q.push(make_pair(bdp[v],v));
        }
      }
    }
  }
}

int main()
{
  while(true){
    int n;cin>>n;
    if(!n)break;
    vector<vecint> t(n,vecint(n+1));
    REP(i,n)REP(j,n+1)cin>>t[i][j];
    vecint bdp(1<<n,INF);
    bdp[0]=0;
    sh(t,bdp,n);
    cout<<bdp[(1<<n)-1]<<endl;
  }
  return 0;
}