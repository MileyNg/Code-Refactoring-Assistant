#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define between(a,x,b) ((a)<=(x)&&(x)<=(b))
using namespace std;

int main(){
  char str[128], tmp[2];
  char cube[6][9] = { {"..rr...."},
		      {"..rr...."},
		      {"ggyybbww"},
		      {"ggyybbww"},
		      {"..oo...."},
		      {"..oo...."} };

  scanf("%s", str);
  rep(i, strlen(str)){
    switch(str[i]){
    case 'U':
      tmp[0] = cube[2][0]; tmp[1] = cube[2][1];
      REP(j, 2, 8) cube[2][j-2] = cube[2][j];
      cube[2][6] = tmp[0]; cube[2][7] = tmp[1];

      tmp[0] = cube[0][2]; cube[0][2] = cube[1][2]; cube[1][2] = cube[1][3];
      cube[1][3] = cube[0][3]; cube[0][3] = tmp[0];
      break;
    case 'F':
      tmp[0] = cube[2][1]; tmp[1] = cube[3][1];
      cube[2][1] = cube[4][2]; cube[3][1] = cube[4][3];
      cube[4][2] = cube[3][4]; cube[4][3] = cube[2][4];
      cube[3][4] = cube[1][3]; cube[2][4] = cube[1][2];
      cube[1][3] = tmp[0]; cube[1][2] = tmp[1];

      tmp[0] = cube[2][2]; cube[2][2] = cube[3][2];
      cube[3][2] = cube[3][3]; cube[3][3] = cube[2][3]; cube[2][3] = tmp[0];
      break;
    case 'R':
      tmp[0] = cube[0][3]; tmp[1] = cube[1][3];
      REP(j, 2, 6) cube[j-2][3] = cube[j][3];
      cube[4][3] = cube[3][6]; cube[5][3] = cube[2][6];
      cube[3][6] = tmp[0]; cube[2][6] = tmp[1];

      tmp[0] = cube[2][4]; cube[2][4] = cube[3][4]; cube[3][4] = cube[3][5];
      cube[3][5] = cube[2][5]; cube[2][5] = tmp[0];
      break;
    case 'D':
      tmp[0] = cube[3][6]; tmp[1] = cube[3][7];
      for(int j = 5; j >= 0; --j) cube[3][j+2] = cube[3][j];
      cube[3][0] = tmp[0]; cube[3][1] = tmp[1];

      tmp[0] = cube[4][2]; cube[4][2] = cube[5][2]; cube[5][2] = cube[5][3];
      cube[5][3] = cube[4][3]; cube[4][3] = tmp[0];
      break;
    case 'B':
      tmp[0] = cube[0][2]; tmp[1] = cube[0][3];
      cube[0][2] = cube[2][5]; cube[0][3] = cube[3][5];
      cube[2][5] = cube[5][3]; cube[3][5] = cube[5][2];
      cube[5][3] = cube[3][0]; cube[5][2] = cube[2][0];
      cube[3][0] = tmp[0]; cube[2][0] = tmp[1];

      tmp[0] = cube[2][6]; cube[2][6] = cube[3][6]; cube[3][6] = cube[3][7];
      cube[3][7] = cube[2][7]; cube[2][7] = tmp[0];
      break;
    case 'L':
      tmp[0] = cube[4][2]; tmp[1] = cube[5][2];
      for(int j = 3; j >= 0; j--) cube[j+2][2] = cube[j][2];
      cube[0][2] = cube[3][7]; cube[1][2] = cube[2][7];
      cube[3][7] = tmp[0]; cube[2][7] = tmp[1];

      tmp[0] = cube[2][0]; cube[2][0] = cube[3][0]; cube[3][0] = cube[3][1];
      cube[3][1] = cube[2][1]; cube[2][1] = tmp[0];
      break;
    }
  }

  rep(i, 6){
    rep(j, 8) printf("%c", cube[i][j]);
    puts("");
  }

  return 0;
}