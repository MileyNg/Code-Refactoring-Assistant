#include<iostream>
#include<vector>
#include<map>
#include<queue>
#include<algorithm>
#include<cstdlib>
 
using namespace std;
 
struct S{
  vector<int> v;
  int c,d,e;
  S(const vector<int> &pv,int pc):v(pv),c(pc){
    eval();
  }
  void eval(){
    d=0;
    for(int i=0;i<v.size()-1;i++){
      d+=abs(v[i]-v[i+1]);
    }
    e=c+(d+1)/2;
  }   
  void reverse(int a,int b){
    c++;
    std::reverse(begin(v)+a,begin(v)+b+1);
    eval();
  }
  bool operator<(const S &s)const{
    return e>s.e;
  }
};
 
int main(){
  int N;
  cin>>N;
  vector<int> v(N);
  for(auto &e:v){
    cin>>e;
  }
  S is(v,0);
  priority_queue<S> que;
  que.push(is);
  map<vector<int>,int> m;
  for(;;){
    S c=que.top();
    if(c.d==0)break;
    que.pop();
    if(m.count(c.v)&&m[c.v]<=c.c)continue;
    m[c.v]=c.c;
    for(int i=0;i<N;i++){
      for(int j=i+1;j<N;j++){
    S n=c;
    n.reverse(i,j);
    que.push(n);
      }
    }
  }
  cout<<que.top().c<<endl;
}