#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <queue>

using namespace std;
//typedef long long ll;

// `蛻晏ァ句喧?壺蔵莉、m=0?檎┯蜷惹スソ逕ィaddedge豺サ蜉?園譛芽セケ?域?逶エ謗・蛻晏ァ句喧m,u,v,w?峨?`
//         `竭。n陦ィ遉コ扈鍋せ荳ェ謨ー`
// `隹?畑?哮ruskal`
// `豕ィ諢擾シ壺蔵荳区?莉?蠑?ァ具シ帚贈譌?髄蝗セ?帚造<algorithm>`
const int MAXN=1010, MAXM=10010;
int u[MAXM],v[MAXM],w[MAXM];
bool used[MAXM];
int lens[MAXM], ll;

int m=0, n;

void addedge(int x, int y, int len)
{
    u[m]=x, v[m]=y, w[m]=len;
    m++;
}

int parent[MAXN], rank[MAXM];     // parent莉」陦ィ蟷カ譟・髮?シ罫ank譏ッ霎ケ逧?コ丞捷
int comp (const int i, const int j) {return w[i]<w[j];}

int find (int x)    // `蟶ヲ霍ッ蠕?視郛ゥ逧?衍謇セ蜃ス謨ー`
{
    return parent[x]==x ? x : parent[x] = find(parent[x]);
}

int Kruskal()
{
    memset(used,0,sizeof(used));
    int ans = 0;
    // 蛻晏ァ句喧蟷カ譟・髮?    for (int i=0;i<n;i++) parent[i]=i;
    for (int i=0;i<m;i++) rank[i]=i;
    // 謖臥?霎ケ逧?揀蛟シ螟ァ蟆乗賜蠎擾シ瑚ソ呎?蜈郁ソ幄。悟セェ邇ッ逧?ーア譏ッ譛?洒逧?セケ
    sort(rank, rank+m, comp);
    for (int i=0;i<m;i++)
    {
        int e=rank[i];
        int x=find(u[e]), y=find(v[e]); // 謇セ蜃コ蠖灘燕霎ケ逧?ク、荳ェ遶ッ轤ケ謇?惠髮?粋逧?シ門捷
        if (x!=y)   // 螯よ棡荳榊惠蜷御ク?寔蜷?蜷亥ケカ
        {
            ans += w[e];
            used[e]=true;
            parent[x] = y;
        }
    }
    return ans;
}

int main()
{
    freopen("fuck.in","r",stdin);

    int M;
    while (scanf("%d%d",&n,&M)!=EOF and not (n==0 and M==0))
    {

        m=0;
        while (M--)
        {
            int x,y,z;
            scanf("%d%d%d",&x,&y,&z);
            addedge(x-1,y-1,z);
        }

        //printf("kruskal=%d\n",Kruskal());
        Kruskal();

        ll=0;
        for (int i=0; i<m; i++) if (used[i]) lens[ll++]=w[i];


        //nth_element(lens,lens+n/2,lens+ll);
        //printf("%d\n",*(lens+n/2-1));

        sort(lens,lens+ll);

        //for (int i=0; i<ll; i++) printf("%d ",lens[i]);
        //printf("\n");
        printf("%d\n",lens[n/2-1]);

    }

    return 0;
}