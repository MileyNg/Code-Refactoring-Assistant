#include <iostream>
using namespace std;
int h, w, c, p[9][9], q[9][9];
int id = 7;

void change(int x, int y, int color){
	int first = p[x][y];
	p[x][y] = color * (-1);
	if (x < h - 1 && p[x + 1][y] == first)
		change(x + 1, y, color);
	if (x > 0 && p[x - 1][y] == first)
		change(x - 1, y, color);
	if (y < w - 1 && p[x][y + 1] == first)
		change(x, y + 1, color);
	if (y > 0 && p[x][y - 1] == first)
		change(x, y - 1, color);
}

void pabs(){
	for (int i = 0; i < h; i++){
		for (int j = 0; j < w; j++){
			p[i][j] = abs(p[i][j]);
		}
	}


}


int main()
{

	//長方形サイズ，目標色の入力
	while (cin >> h >> w >> c, (h || w || c)){

		//初期化
		for (int i = 0; i < 9; i++){
			for (int j = 0; j < 9; j++){
				p[i][j] = 0;
			}
		}
		//色の入力
		for (int i = 0; i < h; i++){
			for (int j = 0; j < w; j++)
				cin >> p[i][j];
		}

		//パネルをコピーしておく
		for (int a = 0; a < h; a++){
			for (int b = 0; b < w; b++){
				q[a][b] = p[a][b];
			}
		}

		//全パターン

		int max = 0;
		int counter;
		for (int i = 1; i < 7; i++){
			for (int j = 1; j < 7; j++){
				for (int k = 1; k < 7; k++){
					for (int l = 1; l < 7; l++){
						for (int m = 1; m < 7; m++){

							//パネルを初期状態に戻す
							for (int a = 0; a < h; a++){
								for (int b = 0; b < w; b++){
									p[a][b] = q[a][b];
								}
							}
							//5回色塗り
							change(0, 0, i);
							pabs();
							change(0, 0, j);
							pabs();
							change(0, 0, k);
							pabs();
							change(0, 0, l);
							pabs();
							change(0, 0, m);
							pabs();

							//集計
							for (int i = 0; i < h; i++){
								for (int j = 0; j < w; j++){
									if (p[i][j] == c){
										change(i, j, ++id);
										pabs();
										counter = 0;
										for (int a = 0; a < h; a++){
											for (int b = 0; b < w; b++){
												if (p[a][b] == id)
													counter++;
											}
										}
										if (counter > max)
											max = counter;
									}
								}
							}

						}
					}
				}
			}
		}

		//出力
		cout << max << endl;
	}
	return 0;
}