#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cassert>
#include <iostream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <numeric>
#include <complex>
#include <stack>
#include <queue>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <functional>
#include <iterator>

using namespace std;

#define dump(n) cout<<"# "<<#n<<'='<<(n)<<endl
#define repi(i,a,b) for(int i=int(a);i<int(b);i++)
#define peri(i,a,b) for(int i=int(b);i-->int(a);)
#define rep(i,n) repi(i,0,n)
#define per(i,n) peri(i,0,n)
#define iter(c) __typeof__((c).begin())
#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)
#define all(c) (c).begin(),(c).end()
#define mp make_pair

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<string> vs;
typedef pair<int,int> pii;

const int INFTY=1<<29;
const double EPS=1e-9;

template<typename T1,typename T2>
ostream& operator<<(ostream& os,const pair<T1,T2>& p){
	return os<<'('<<p.first<<','<<p.second<<')';
}
template<typename T>
ostream& operator<<(ostream& os,const vector<T>& a){
	os<<'[';
	rep(i,a.size()) os<<(i?" ":"")<<a[i];
	return os<<']';
}
template<typename T>
ostream& operator<<(ostream& os,const set<T>& a){
	os<<'{';
	foreach(i,a) os<<(i!=begin(a)?" ":"")<<*i;
	return os<<'}';
}

set<int> calc(const set<int>& a,const set<int>& b,char op)
{
	set<int> res;
	for(int x:a) for(int y:b){
		if(op=='*') res.insert(x*y);
		if(op=='+') res.insert(x+y);
		if(op=='-') res.insert(x-y);
		if(op=='/' && y) res.insert(x/y);
	}
	return res;
}

set<int> expr(const string& s,int l,int r)
{
	vector<set<int>> vals;
	string ops;
	for(int i=l;i<r;i++){
		if(s[i]=='('){
			int cnt=0,j=i++;
			for(;j<r;j++){
				if(s[j]=='(') cnt++;
				if(s[j]==')') cnt--;
				if(cnt==0) break;
			}
			vals.push_back(expr(s,i,j));
			i=j;
		}
		else if(strchr("*+-/",s[i]))
			ops.push_back(s[i]);
		else{
			int x=0;
			for(;i<r && isdigit(s[i]);i++)
				x=x*10+s[i]-'0';
			vals.push_back(set<int>({x}));
			i--;
		}
	}
	int n=vals.size();
	vector<vector<set<int>>> dp(n,vector<set<int>>(n));
	rep(i,n) dp[i][i]=vals[i];
	per(i,n) repi(j,i+1,n) repi(k,i,j){
		set<int> t=calc(dp[i][k],dp[k+1][j],ops[k]);
		dp[i][j].insert(all(t));
	}
	return dp[0][n-1];
}

int main()
{
	for(string s;getline(cin,s),s!="#";)
		cout<<expr(s,0,s.size()).size()<<endl;
}