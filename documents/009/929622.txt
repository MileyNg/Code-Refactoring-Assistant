#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define between(a,x,b) ((a)<=(x)&&(x)<(b))
using namespace std;
int t, h, w, n;
char town[32][32], cmd[128];

void shot(int y, int x){
   int dx[] = {0,0,-1,1}, dy[] = {-1,1,0,0}; // U D L R
  int d;
  switch(town[y][x]){
  case '^': d = 0; break;
  case 'v': d = 1; break;
  case '<': d = 2; break;
  case '>': d = 3; break;
  }
  //  printf("%d\n", d);
  while(true){
    if(between(0,y+dy[d], h) && between(0, x+dx[d], w)){
      y+=dy[d]; x+=dx[d];
      if(town[y][x] == '*'){
	town[y][x] = '.';
	break;
      }else if(town[y][x] == '#'){
	break;
      }
    }else break;
  }
  return;
}

int main(){
  scanf("%d", &t);
  bool f = false;
  while(t--){
    scanf("%d%d", &h, &w);
    rep(i, h) scanf("%s", town[i]);
 
    scanf("%d", &n);
    scanf("%s", cmd);
    int x, y;
    rep(i, h) rep(j, w) 
      if(town[i][j]=='^' || town[i][j]=='v' || town[i][j]=='<' || town[i][j]=='>')x=j,y=i;
    rep(i, n){
      //      printf("%d %d\n", y, x);
      switch(cmd[i]){
      case 'U':
	if(town[y-1][x] == '.'){ town[y][x] = '.'; town[--y][x] = '^';}
	else town[y][x] = '^';
	break;
      case 'D':
	if(town[y+1][x] == '.'){ town[y][x] = '.'; town[++y][x] = 'v';}
	else town[y][x] = 'v';
	break;
      case 'L':
	if(town[y][x-1] == '.'){ town[y][x] = '.'; town[y][--x] = '<';}
	else town[y][x] = '<';
	break;
      case 'R':
	if(town[y][x+1] == '.'){ town[y][x] = '.'; town[y][++x] = '>';}
	else town[y][x] = '>';
	break;
      case 'S':
	shot(y, x);
	break;
      }
    }      
    if(f) puts("");
    rep(i, h){
      rep(j, w) printf("%c", town[i][j]);
      puts("");
    }
    
    f = 1;
  }
  return 0;
}