#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include <queue>
using namespace std;

const int maxn = 1010;
const int inf = (1<<30);
int W,H,N;

char mp[maxn][maxn];
char str[maxn*maxn];
int dir[maxn*maxn];

int dx[4] = {-1,0,1,0};
int dy[4] = {0,1,0,-1};


int cost[maxn*maxn][4];
int dis[maxn][maxn];
bool vis[maxn][maxn];

struct node{
    int x, y;
    void init(int __x,int __y)
    {
        x = __x;y = __y;
    }
}Q[maxn*maxn*3];

int Sx,Sy;
int Gx,Gy;

int main()
{
    while (scanf("%d%d%d",&W,&H,&N)==3 && W)
    {
        scanf("%s",str);


        dir[0] = 0;
        for (int i=1;i<=N;i++)
        {
            if (str[i-1]=='L'){
                dir[i] = (dir[i-1] + 3) % 4;
            }else{
                dir[i] = (dir[i-1] + 1) % 4;
            }
        }


        for (int i=0;i<=W+1;i++)
        {
            for (int j=0;j<=H+1;j++)
            {
                mp[i][j] = '#';
            }
        }
        for (int i=1;i<=W;i++)
        {
            scanf("%s",str);
            for (int j=1;j<=H;j++)
            {
                mp[i][j] = str[j-1];
                if (mp[i][j]=='S')
                {
                    Sx = i;
                    Sy = j;
                    mp[i][j] = '.';
                }else if (mp[i][j]=='G'){
                    Gx = i;Gy = j;
                    mp[i][j] = '.';
                }
            }
        }
#ifdef debug
        for (int i=0;i<=W+1;i++)
        {
            for (int j=0;j<=H+1;j++)
            {
                printf("%c",mp[i][j]);
            }
            puts("");
        }
        printf("%d %d %d %d\n",Sx,Sy,Gx,Gy);
 #endif

        for (int i=N;i>=0;i--)
        {
            for (int j=0;j<4;j++)
            {
                if (dir[i]==j){
                    cost[i][j] = 0;
                }else{
                    if (i==N){
                        cost[i][j] = inf;
                    }else{
                        cost[i][j] = cost[i+1][j] + 1;
                    }
                }
                //if (debug)printf("%d %d %d\n",i,j,cost[i][j]);
            }
        }

        node now, cur;
        int ans = 0;
        int head = 0, tail = 0;
        memset(dis, -1, sizeof(dis));
        memset(vis, 0, sizeof(vis));
        now.init(Sx,Sy);
        dis[Sx][Sy] = 0;
        vis[Sx][Sy] = 1;
        Q[++tail] = now;

        while (head < tail)
        {
            cur = Q[++head];
            int dd = dis[cur.x][cur.y];
            vis[cur.x][cur.y] = 0;
            for (int k=0;k<4;k++)
            {
                int x = cur.x + dx[k];
                int y = cur.y + dy[k];
                if (mp[x][y]=='.' && cost[dd][k]<inf){
                    int tmp = dd + cost[dd][k];
                    if (dis[x][y]==-1 || tmp < dis[x][y]){
                        dis[x][y] = tmp;
                        if (!vis[x][y]){
                            now.init(x,y);
                            Q[++tail] = now;
                            vis[x][y] = 1;
                        }
                    }
                }
            }
        }
        ans = (dis[Gx][Gy] != -1);
        puts(ans?"Yes":"No");
    }
    return 0;
}