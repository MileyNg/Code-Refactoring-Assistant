#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <queue>
#include <map>
#define FI first
#define SE second
using namespace std;
const double EPS = 1e-8;
const int MAXN = 105;
const int INF = 1111111111;
char g[MAXN][MAXN];
int h,w;
int dir[][2] = {{0,1},{1,0},{0,-1},{-1,0}};
char dirc[] = {'E','S','W','N'};
long long l;
pair<int,int> st;
int way[MAXN][MAXN][4];
int main() {
    //freopen("F:\\code\\in.txt","r",stdin);

    while (scanf ("%d%d%lld",&h,&w,&l)&&(h+w+l)) {
        memset(way,0,sizeof(way));
        for (int i = 1; i <= h; ++i) {
            scanf ("%s",g[i]+1);
            for (int j = 1; j <= w; ++j) {
                if (g[i][j] >= 'A'&& g[i][j] <='Z') {
                    st.first = i;
                    st.second = j;
                }
            }
            g[i][0] = g[i][w+1] = '#';
            g[i][w+2] = '\0';
            //printf("%s\n",g[i]);
        }
        for (int i = 0; i <= w+1; ++i)
            g[h+1][i] = g[0][i] = '#';
        w+=2;
        h+=2;
        int dx,dy;
        for (int i = 0; i < h; ++i) {
            for (int j = 0; j < w; ++j) {
                if (g[i][j] == '#') continue;
                for (int k = 0; k < 4; ++k) {

                    dx = i + dir[k][0];
                    dy = j + dir[k][1];
                    int len = 0;
                    while (dx >= 0&& dx< h &&dy >=0 &&dy < w&&g[dx][dy]!='#') {
                        ++len;
                        dx += dir[k][0];
                        dy += dir[k][1];
                    }
                    way[i][j][k] = len;
                }
            }
        }
        int sdir;
        int sx = st.first;
        int sy = st.second;
        if (g[sx][sy] == 'E') sdir = 0;
        else if (g[sx][sy] == 'S') sdir = 1;
        else if (g[sx][sy] == 'W') sdir = 2;
        else if (g[sx][sy] == 'N') sdir = 3;
        int tmp ;
        int vis[MAXN][MAXN][4],len;
        bool flag = 0;
        len = 0;
        memset(vis,0,sizeof(vis));
        while(l>0) {
            l--;
            if (vis[sx][sy][sdir] == 1) {
                flag = 1;
            }
            if (vis[sx][sy][sdir] == 2) break;
            if (flag) ++len;

            vis[sx][sy][sdir] += 1;
            int tsx = sx + dir[sdir][0];
            int tsy = sy + dir[sdir][1];
            while (g[tsx][tsy] == '#') {

                sdir = (sdir+1)%4;
                tsx = sx + dir[sdir][0];
                tsy = sy + dir[sdir][1];
            }
            sx = tsx;
            sy = tsy;
        }
        if (len&&l)
            l=l%len+1;
         while(l>0) {
            l--;
            vis[sx][sy][sdir] += 1;
            int tsx = sx + dir[sdir][0];
            int tsy = sy + dir[sdir][1];
            while (g[tsx][tsy] == '#') {
                sdir = (sdir+1)%4;
                tsx = sx + dir[sdir][0];
                tsy = sy + dir[sdir][1];
            }
            sx = tsx;
            sy = tsy;
        }
        int tsx = sx + dir[sdir][0];
        int tsy = sy + dir[sdir][1];
        while (g[tsx][tsy] == '#') {
            sdir = (sdir+1)%4;
            tsx = sx + dir[sdir][0];
            tsy = sy + dir[sdir][1];
        }
        printf("%d %d %c\n",sx,sy,dirc[sdir]);

    }
    return 0;
}