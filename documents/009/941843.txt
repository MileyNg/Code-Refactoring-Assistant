#include<iostream>
#include<vector>
#include<map>
#include<algorithm>
#include<cassert>
using namespace std;
int INF = (1<<24);

vector<int> U;
map < int,bool > used;

map < char , vector<int> > t;

string str;
int pos;

bool input();

vector<int> calc(vector<int>,char ch,vector<int>);

vector<int> compute();
vector<int> get();

int main(){
  vector<int> ans;
  while(input()){
    pos=0;
    ans=compute();
    for(int i=0;i<(int)ans.size();i++){
      if(i)cout<<' ';
      cout<<ans[i];
    }
    if(ans.size()==0)cout<<"NULL";
    cout<<endl;
  }
  return 0;
}


bool input(){
  int n,a;
  char ch;
  U.clear();
  used.clear();
  t.clear();
  while(1){
    if(cin>>ch){
    }else{
      return false; 
    }
    cin>>n;
    if(ch=='R'&&n==0)break;
    for(int i=0;i<n;i++){
      cin>>a;

      if(used[a]==false){U.push_back(a);used[a]=true;}

      t[ch].push_back(a);
    }
    sort(t[ch].begin(),t[ch].end());
  }
  sort(U.begin(),U.end());
  cin>>str;
  str.push_back('=');
  return true;
}

vector<int> calc(vector<int> A,char ch,vector<int> B){

  int a=0,b=0,Asize=A.size(),Bsize=B.size(),nowA,nowB; 
  vector<int> res;

  if(ch=='u'){
    while(a<Asize||b<Bsize){
      nowA=(a<Asize?A[a]:INF);
      nowB=(b<Bsize?B[b]:INF);
      if(nowA==nowB){
	res.push_back(nowA);
	a++;b++;
      }else if(nowA<nowB){
	res.push_back(nowA);
	a++;
      }else{
	res.push_back(nowB);
	b++;
      }
    }

  }else if(ch=='i'){
    while(a<Asize||b<Bsize){
      nowA=(a<Asize?A[a]:INF);
      nowB=(b<Bsize?B[b]:INF);
      if(nowA==nowB){
	res.push_back(nowA);
	a++;b++;
      }else if(nowA<nowB){
	a++;
      }else{
	b++;
      }
    }

  }else if(ch=='d'){
    while(a<Asize||b<Bsize){
      nowA=(a<Asize?A[a]:INF);
      nowB=(b<Bsize?B[b]:INF);
      if(nowA==nowB){
	a++;b++;
      }else if(nowA<nowB){
	res.push_back(nowA);
	a++;
      }else{
	b++;
      }
    }
    
  }else if(ch=='s'){
    while(a<Asize||b<Bsize){
      nowA=(a<Asize?A[a]:INF);
      nowB=(b<Bsize?B[b]:INF);
      if(nowA==nowB){
	a++;b++;
      }else if(nowA<nowB){
	res.push_back(nowA);
	a++;
      }else{
	res.push_back(nowB);
	b++;
      }
    }
  }

  return res;
}


vector<int> compute(){

  vector<int> res,X;
  char ch;
  res=get();

  while(1){
    ch=str[pos++];
    if(ch=='='||ch==')')break;
    X=get();
    res=calc(res,ch,X);
  }

  return res;
}


vector<int> get(){
  if(str[pos]=='('){
    pos++;
    return compute();
  }else if(str[pos]=='c'){
    pos++;
    return calc(U,'d',get());
  }else{
    pos++;
    return t[str[pos-1]];
  }
}