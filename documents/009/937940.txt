#include <stdio.h>
#include <memory.h>

int count[100];
void solve(int depth, int card[][2], int n, int total, int goal[], int gn) {
	int i;
	if(depth == n) {
		for(i=0;i<gn;i++) {
			if(total == goal[i])
				count[i]++;
		}
		return;
	}
	
	for(i=0;i<=card[depth][1];i++) {
		solve(depth+1, card, n, total + card[depth][0] * i, goal, gn);
	}
}

int main(void) {
	int n, g;
	int i;
	int goal[100];
	int j[1001];
	int card[1001][2];
	while(1) {
		memset((char*)count, 0x00, sizeof(count));
		scanf("%d\n", &n);
		if(n==0) break;
		for(i=0;i<n;i++) {
			scanf("%d %d\n", &card[i][0], &card[i][1]);
		}
		scanf("%d\n", &g);
		for(i=0;i<g;i++) {
			scanf("%d\n", &goal[i]);
		}
		solve(0, card, n, 0, goal, g);	
		for(i=0;i<g;i++) {
			printf("%d\n", count[i]);
		}
	}
	return 0;
}