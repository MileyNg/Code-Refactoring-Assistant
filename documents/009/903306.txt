#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <sstream>
#include <functional>
#include <numeric>
#include <cmath>
#include <cstring>
#include <queue>
#include <stack>
#include <set>

using namespace std;

#define ALL(co) co.begin(), co.end()

typedef long long LL;
typedef pair<int, int> P;
typedef pair<int, P> IP;
typedef pair<P, P> PP;
typedef vector<int> Array;
typedef vector<int> LArray;

const int INF = 1 << 29;
const LL LINF = 1LL << 60;

int itiv;
inline int getInt() { return (cin >> itiv, itiv); }
void readAll(Array& vec, int n) { for (int i = 0; i < n; i++) cin >> vec[i]; }
inline bool between(int first, int last, int n) { return first <= n && n <= last; }
inline bool inRange(int begin, int end, int n) { return begin <= n && n < end; }
inline bool inRange(int size, int n) { return 0 <= n && n < size; }

int d, n;
int dx[] = { -1, 0, 1, 0 }, dy[] = { 0, -1, 0, 1 };
int dr[] = { 0, -1, 0, 1 }, dc[] = { -1, 0, 1, 0 };

// day, cloth
int dp[201][201];
int main(void)
{
	while(cin >> d >> n && n)
	{
		Array t(d), a(n), b(n), c(n);
		readAll(t, d);
		for (int i = 0; i < n; i++)
			cin >> a[i] >> b[i] >> c[i];
		memset(dp, 0, sizeof(dp));

		int ans = 0;
		for (int i = 1; i < d; i++)//日にち
		{
			for (int j = 0; j < n; j++)//今日着る
			{
				if(!between(a[j], b[j], t[i])) continue;

				for (int k = 0; k < n; k++)//昨日着た
				{
					if(!between(a[k], b[k], t[i-1])) continue;

					dp[i][j] = max(dp[i][j], dp[i - 1][k] + abs(c[j] - c[k]));
					ans = max(ans, dp[i][j]);
				}
			}
		}
		cout << ans << endl;
	}
	return 0;
}