#include <algorithm>
#include <iostream>
#include <cstdio>
#include <map>
#include <numeric>
#include <set>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
using namespace std;

#define ISEQ(c) (c).begin(), (c).end()
typedef long long ll;

int main() {
  while (true) {
    int n;
    cin >> n;
    if (!n) break;
    vector<string> s(n);
    string res = "";
    for (int i = 0; i < n; i++) {
      cin >> s[i];
      res += s[i];
    }
    sort(ISEQ(s));

    do {
      string t = s[0];
      for (int i = 1; i < n; i++) {
	bool flag = false;
	for (int j = 0; j < t.size(); j++) {
	  if (t.substr(j, min(t.size()-j, s[i].size())) == s[i].substr(0, min(t.size()-j, s[i].size()))) {
	    if (s[i].size() > t.size()-j) {
	      t += s[i].substr(t.size()-j, s[i].size()-t.size()+j);
	    }
	    flag = true;
	    break;
	  }
	}
	if (!flag) t += s[i];
      }
      if (t.size() < res.size())
	res = t;
      else if (t.size() == res.size() and t < res)
	res = t;
    } while (next_permutation(ISEQ(s)));
    cout << res << endl;
  }
}