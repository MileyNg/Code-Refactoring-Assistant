#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define rep(i,n) for(int i=0;i<n;++i)
#define rep1(i,n) for(int i=1;i<=n;++i)
#define ALL(c) (c).begin(),(c).end()
typedef pair<char,int> P;
P c[9];
bool able(vector<int> num){
	rep(i,7){
		if(num[i]){
			num[i]--;
			if(num[i+1]==0 || num[i+2]==0) return false;
			num[i+1]--;
			num[i+2]--;
			i--;
		}
	}
	if(num[7]==0 && num[8]==0) return true;
	else return false;
}
bool ans(char ch){
		vector<int> num(9);
		vector<int> three;
		rep(i,9) if(c[i].first==ch) num[c[i].second]++;
		rep(i,9) if(num[i]>=3) three.push_back(i);
		if(three.size()==3) return true;
		if(three.size()==2){
			vector<int> cop=num;
			if(able(num)) return true;
			num[three[0]]-=3;
			if(able(num)) return true;
			num=cop;
			num[three[1]]-=3;
			if(able(num)) return true;
			num[three[0]]-=3;
			if(able(num)) return true;
			return false;
		}
		if(three.size()==1){
			if(able(num)) return true;
			num[three[0]]-=3;
			if(able(num)) return true;
			return false;
		}
		if(three.size()==0){
			if(able(num)) return true;
			return false;
		}
}
int main(){
	int t;
	cin >> t;
	rep(k,t){
		rep(i,9) cin >> c[i].second;
		rep(i,9) cin >> c[i].first;
		rep(i,9) c[i].second--;
		sort(c,c+9);
		if(ans('R')&&ans('G')&&ans('B')) cout << 1 << endl;
		else cout << 0 << endl;
	}
	return 0;
}