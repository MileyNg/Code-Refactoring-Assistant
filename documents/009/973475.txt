#include<bits/stdc++.h>

#define REP(i,s,n) for(int i=s;i<n;i++)
#define rep(i,n) REP(i,0,n)

using namespace std;

const int MOD = 100000;
int dp[2][(1<<20)][2],H,W;
char G[20][20];
/*
dp[(x,y) & 1][column][Is the left is J?] := the number % 10^5
 */

inline void compute(int other){

  dp[0][0][0] = 1;

  rep(y,H)rep(x,W) {
    int phase = ( x + y * W ) & 1;
    rep(i,(1<<W))rep(k,2) dp[!phase][i][k] = 0;
    rep(bitmask,(1<<W)){     

      int nbitmask = bitmask & (~(1<<x));

      if( G[y][x] == 'O' ) goto O;
      if( G[y][x] == 'I' ) goto I;

      // put J
      if( x != W-1 ) ( dp[!phase][nbitmask][1] += ( dp[phase][bitmask][0] + dp[phase][bitmask][1] ) ) %= MOD;
      else           ( dp[!phase][nbitmask][0] += ( dp[phase][bitmask][0] + dp[phase][bitmask][1] ) ) %= MOD;
      if( G[y][x] == 'J' ) goto Skip;

    O:;
      // put O
      // となりがJでない
      ( dp[!phase][nbitmask][0] += dp[phase][bitmask][0] ) %= MOD;

      // となりがJ
      if( x-1 >= 0 ) {
        nbitmask |= (1<<(x-1));
        ( dp[!phase][nbitmask][0] += dp[phase][bitmask][1] ) %= MOD;
        nbitmask &= (~(1<<(x-1)));
      }
      if( G[y][x] == 'O' ) goto Skip;

    I:;
      // put I
      if( !( ( bitmask>>x ) & 1 ) ) {
        nbitmask = nbitmask & (~(1<<x));
        ( dp[!phase][nbitmask][0] += ( dp[phase][bitmask][0] + dp[phase][bitmask][1] ) ) %= MOD;
      }
      
    Skip:;
      
    }
  }

  int sum = 0;
  rep(i,(1<<W)) rep(j,2) ( sum += dp[(H*W)&1][i][j] ) %= MOD;

  int total = 1;
  rep(i,other) ( total *= 3 ) %= MOD;
  cout << ( total - sum + MOD ) % MOD << endl;
}

int main(){
  cin >> H >> W;
  int other = 0;
  rep(i,H)rep(j,W){
    cin >> G[i][j];
    other += (G[i][j]=='?');
  }
  compute(other);
  return 0;
}