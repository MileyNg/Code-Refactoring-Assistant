#include<iostream>
#include<algorithm>

using namespace std;

#define NMAX 18
#define INF 1000000

int main(){

	int N;
	int ti;
	int t[NMAX][NMAX+1];
	int dp[1<<NMAX];
	int mn;
	bool f;

	while(1){

		cin>>N;
		if(N==0) break;

		for(int i=0;i<N;i++){
			for(int j=0;j<N+1;j++){
				cin>>t[i][j];
			}
		}

		for(int i=0;i<(1<<N);i++) dp[i]=INF;
		dp[0]=0;
		f=true;

		while(f){
			f=false;
			for(int i=(1<<N)-1;i>=0;i--){
				if(dp[i]!=INF){
					for(int j=0;j<N;j++){
						if((i>>(j)&1)==0){
							mn=t[j][0];
							for(int k=1;k<N+1;k++){
								//cout<<i<<","<<j<<","<<k<<","<<mn<<","<<dp[i]<<endl;
								if((i>>(k-1)&1)==1) mn=min(mn,t[j][k]);
							}
							if(dp[i+(1<<j)]>dp[i]+mn){
								dp[i+(1<<j)]=dp[i]+mn;
								f=true;
							}
						}
					}
				}
			}
		}
		cout<<dp[(1<<N)-1]<<endl;
	}
}