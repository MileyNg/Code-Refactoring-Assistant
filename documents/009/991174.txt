#include <bits/stdc++.h>

#define reps(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)
#define rep(v, n) reps(v, 0, n)
#define lep(v, n) reps(v, 1, n + 1)

using namespace std;

typedef long long int lint;

static inline int in(){ int x; scanf("%d", &x); return x; }
static inline lint inl(){ lint x; scanf("%lld", &x); return x; }
template<typename T> void show(T& a, char del='\n', char last='\n'){ rep(i, a.size() - 1) cout << a[i] << del; cout << a[a.size() - 1] << last; }

int main()
{
  int n;
  while (n = in()){
    string deck;
    cin >> deck;
    vector<int> players(n, 0);
    int pool = 0;
    rep(i, deck.size()){
      switch (deck[i]){
        case 'M':
          players[i % n]++;
          break;
        case 'S':
          pool += players[i % n] + 1;
          players[i % n] = 0;
          break;
        case 'L':
          players[i % n] += pool + 1;
          pool = 0;
          break;
      }
    }
    sort(players.begin(), players.end());
    show(players, ' ', ' ');
    cout << pool << endl;
  }
  return 0;
}