#include <algorithm>
#include <bitset>
#include <cctype>
#include <complex>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

inline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}
template<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}
template<class T> inline T sqr(T x) {return x*x;}

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long ll;

#define all(a)  (a).begin(),(a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define pb push_back
#define mp make_pair
#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)
#define exist(s,e) ((s).find(e)!=(s).end())
#define range(i,a,b) for(int i=(a);i<(b);++i)
#define rep(i,n)  range(i,0,n)
#define clr(a,b) memset((a), (b) ,sizeof(a))
#define dump(x)  cerr << #x << " = " << (x) << endl;
#define debug(x) cerr << #x << " = " << (x) << " (L" << __LINE__ << ")" << " " << __FILE__ << endl;

const double eps = 1e-10;
const double pi  = acos(-1.0);
const ll INF =1LL << 62;
const int inf =1 << 29;

int state[310];

struct mac{
	int a,b,c;
};

int main(void){
	while(1){
		vector<mac> suc;
		vector<mac> mis;
		int a,b,c;
		cin >> a >> b >> c;
		int n=a+b+c;
		if(n==0)
			break;
		rep(i,n) state[i]=2;
		int m;
		cin >> m;
		rep(i,m){
			int d;
			cin >> a >> b >> c >> d;
			mac tmp; tmp.a=a-1; tmp.b=b-1; tmp.c=c-1;
			if(d){
				suc.pb(tmp);
			}else{
				mis.pb(tmp);
			}
		}
		rep(i,suc.size()){
			state[suc[i].a]=1;
			state[suc[i].b]=1;
			state[suc[i].c]=1;
		}
		rep(i,mis.size()){
			if(state[mis[i].a]==1&&state[mis[i].b]==1)
				state[mis[i].c]=0;
			
			if(state[mis[i].b]==1&&state[mis[i].c]==1)
				state[mis[i].a]=0;
			
			if(state[mis[i].c]==1&&state[mis[i].a]==1)
				state[mis[i].b]=0;
		}
		rep(i,n)
			cout << state[i] << endl;
	}
	return 0;
}