#include <vector>
#include <iostream>
#include <set>
#include <cstdio>
#include <queue>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <algorithm>
#include <algorithm>
#include <limits>
#include <map>

using namespace std;

typedef long long ll;
typedef pair<int, int> P;
int d[6][8][2] = {
{{2, 0}, {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}},
{{2, 1}, {3, 1}, {4, 2}, {4, 3}, {3, 4}, {2, 4}, {1, 3}, {1, 2}},
{{2, 3}, {3, 3}, {4, 3}, {5, 3}, {3, 6}, {2, 6}, {0, 3}, {1, 3}},
{{3, 7}, {3, 6}, {3, 5}, {3, 4}, {3, 3}, {3, 2}, {3, 1}, {3, 0}},
{{2, 5}, {3, 5}, {5, 3}, {5, 2}, {3, 0}, {2, 0}, {0, 2}, {0, 3}},
{{5, 2}, {4, 2}, {3, 2}, {2, 2}, {1, 2}, {0, 2}, {2, 7}, {3, 7}},
};
int d2[6][2] = {
{0, 2}, {2, 2}, {2, 4}, {4, 2}, {2, 6}, {2, 0}
};
string cmd = "UFRDBL";
char data[6][9] = {
"..rr....",
"..rr....",
"ggyybbww",
"ggyybbww",
"..oo....",
"..oo....",
};
char datab[6][9];
int main() {
    string s;
    cin >> s;
    for (char c: s) {
        int t = 0;
        for (int i = 0; i < cmd.size(); i++) {
            if (c == cmd[i]) t = i;
        }
        copy_n(data[0], 54, datab[0]);
        for (int i = 0; i < 8; i++) {
            int x1 = d[t][i][0], y1 = d[t][i][1];
            int x2 = d[t][(i+2)%8][0], y2 = d[t][(i+2)%8][1];
            datab[x1][y1] = data[x2][y2];
        }
        int x = d2[t][0], y = d2[t][1];
        int dd[4][2] = {{x, y}, {x+1, y}, {x+1, y+1}, {x, y+1}};
        for (int i = 0; i < 4; i++) {
            int x1 = dd[i][0], y1 = dd[i][1];
            int x2 = dd[(i+1)%4][0], y2 = dd[(i+1)%4][1];
            datab[x1][y1] = data[x2][y2];
        }
        copy_n(datab[0], 54, data[0]);
    }
    for (int i = 0; i < 6; i++) {
        printf("%s\n", data[i]);
    }
    return 0;
}