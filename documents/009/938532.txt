#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
char g[105][105];
int n, m, step[105][105][4], now;
bool visit[105][105][4];
int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};
char ans[] = {"NESW"};

bool ok(int x, int y)
{
    if(x < 1 || x > n || y < 1 || y > m || g[x][y] == '#') return false;
    return true;
}

bool go(int &x, int &y, int &dir)
{
    int nx, ny;
    while(true)
    {
        nx = x + dx[dir], ny = y + dy[dir];
        if(ok(nx, ny))
        {
            x = nx, y = ny;
            break;
        }
        else
            dir = (dir+1)%4;
    }
    ++ now;
    if(visit[x][y][dir])  return 1;
    visit[x][y][dir] = 1;
    step[x][y][dir] = now;
    return 0;
}


int main()
{
    long long k;
    while(scanf("%d%d%lld", &n, &m, &k) != EOF && n+m+k)
    {
        int x, y, dir;
        for(int i = 1; i <= n; ++ i)
        {
            scanf("%s", g[i]+1);
            for(int j = 1; j <= m; ++ j)
                if(g[i][j] != '.' && g[i][j] != '#')
                {
                    x = i, y = j;
                    if(g[i][j] == 'N')  dir = 0;
                    else if(g[i][j] == 'E')  dir = 1;
                    else if(g[i][j] == 'S')  dir = 2;
                    else  dir = 3;
                }
        }
        memset(visit, 0, sizeof(visit));
        visit[x][y][dir] = 1;
        step[x][y][dir] = 1;
        now = 1;
        while(k)
        {
            if(go(x, y, dir))
            {
                k = k%(now-step[x][y][dir]);
                if(k > 0) -- k;
                else k += now-step[x][y][dir]-1;
                break;
            }
            -- k;
        }
        while(k)
        {
            go(x, y, dir);
            -- k;
        }
        printf("%d %d %c\n", x, y, ans[dir]);
    }
}