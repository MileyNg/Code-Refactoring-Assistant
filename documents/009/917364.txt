#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>

using namespace std;
typedef pair<int, int> pii;

int main(){
	while(true){
		int N, M;
		cin >> N >> M;
		if(N == 0 && M == 0){ break; }
		int r;
		cin >> r;
		vector< vector<pii> > logs(M + 1);
		for(int i = 0; i < r; ++i){
			int t, n, m, s;
			cin >> t >> n >> m >> s;
			logs[m].push_back(pii(t, s * 2 - 1));
		}
		int q;
		cin >> q;
		for(int i = 0; i < q; ++i){
			int ts, te, m;
			cin >> ts >> te >> m;
			vector<int> integral(1300);
			for(int j = 0; j < logs[m].size(); ++j){
				integral[logs[m][j].first] += logs[m][j].second;
			}
			for(int j = 0, s = 0; j < 1300; ++j){
				s += integral[j];
				integral[j] = s;
			}
			int answer = 0;
			for(int j = ts; j < te; ++j){
				answer += min(integral[j], 1);
			}
			cout << answer << endl;
		}
	}
	return 0;
}