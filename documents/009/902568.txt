#include <iostream>
using namespace std;
 
int w, h, ans;
int field[20][20];
int dx[] = {0, 1, 0, -1};
int dy[] = {-1, 0, 1, 0};
 
void curling(int n, int x, int y) {
    if (n >= ans) {
        return;
    }
    for (int i = 0; i < 4; i++) {
        int nx = x + dx[i],
            ny = y + dy[i];
        if (nx < 0 || w <= nx || ny < 0 || h <= ny || field[ny][nx] == 1) {
            continue;
        }
        while (true) {
            if (field[ny][nx] == 3) {
                ans = n;
                return;
            }
            nx += dx[i];
            ny += dy[i];
            if (nx < 0 || w <= nx || ny < 0 || h <= ny) {
                break;
            }
            if (field[ny][nx] == 1) {
                field[ny][nx] = 0;
                curling(n + 1, nx - dx[i], ny - dy[i]);
                field[ny][nx] = 1;
                break;
            }
        }
    }
}
 
int main() {
    while (true) {
        cin >> w >> h;
        if ((w | h) == 0) {
            break;
        }
        int sx, sy;
        for (int y = 0; y < h; y++) {
            for (int x = 0; x < w; x++) {
                cin >> field[y][x];
                if (field[y][x] == 2) {
                    sx = x;
                    sy = y;
                }
            }
        }
        ans = 11;
        curling(1, sx, sy);
        if (ans > 10) {
            ans = -1;
        }
        cout << ans << endl;
    }
}