#include <bits/stdc++.h>
#define REP(i,n) for(int i=0; i<(int)(n); ++i)

using namespace std;


inline bool tri(int a, int b, int c){
    return a < b + c;
}

int main(){
    int n;
    cin >> n;
    typedef long long LL;
    vector<LL> a(n);
    REP(i, n) cin >> a[i];
    sort(a.begin(), a.end());

    LL ans = 0;

    vector<LL> length;
    REP(i, n - 2) {
        if(length.size() == 2) {
            ans = max(ans, accumulate(length.begin(), length.end(), 0LL));
            break;
        }
        if(tri(a[i], a[i + 1], a[i + 2])){
            length.push_back(a[i] + a[i + 1] + a[i + 2]);
            i += 2;
        }
    }

    vector<int> perm = {0, 0, 0, 1, 1, 1};
    do{
        for(int i = 0; i + 6 <= n; i++){
            vector<int> b[2];
            for(int j = 0; j < 6; j++){
                b[ perm[j] ].push_back(a[i]);
            }
            if(tri(b[0][0], b[0][1], b[0][2]) && tri(b[1][0], b[1][1], b[1][2])){
                ans = max(ans, accumulate(b[0].begin(), b[0].end(), 0LL)
                        + accumulate(b[1].begin(), b[1].end(), 0LL));
            }
        }
    }while(next_permutation(perm.begin(), perm.end()));

    cout << ans << endl;
    return 0;
}