#include <stdio.h>
#include <stdlib.h>
 
struct node {
  struct node *ri;
  int key;
  struct node *le;
};
typedef struct node * NodePointer;
 
NodePointer head, tail;
 
void init(void){
  head=makenode(-1);
  tail=makenode(-1);
  head->ri=tail;
  head->le=tail;
}
 
NodePointer makenode(int k){
  NodePointer x;
 
  x=malloc(sizeof(struct node));
  x->key = k;
  x->le = x->ri = tail;
 
  return x;
}
 
void insert(int k, NodePointer p){
  if(k < p->key){
    if(p->le == tail){
      p->le = makenode(k);
    }else{
      insert(k , p->le);
    }
  }else{
    if(p->ri == tail){
      p->ri = makenode(k);
    }else{
      insert(k , p->ri);
    }
  }
}
 
void preorder(NodePointer node){
  if(node != tail){
    printf(" %d", node->key);
    preorder(node->le);
    preorder(node->ri);
  }
}
 
void inorder(NodePointer node){
  if(node != tail){
    inorder(node->le);
    printf(" %d", node->key);
    inorder(node->ri);
  }
}
 
int find(int k,NodePointer node){
  if(node == tail){
    return 0;
  }
 
  if(node->key == k){
    return 1;
  }else if(node->key < k){
    return find(k , node->ri);
  }else{
    return find(k , node->le);
  }
}

int main(int argc, char *argv[]){
  char string[7];
  int n,m;
 
  init();

  scanf("%d" ,&n);
  while(n--){
    scanf("%s" ,string);
 
    if(str[0] == 'i'){ 
      scanf("%d" ,&m);
      insert(m, head);
    }else if(str[0] == 'p'){
      inorder(head->ri);
      printf("\n");
      preorder(head->ri);
      printf("\n");
    }else{
      scanf("%d" ,&m);
      if(find(m,head->ri)){
    printf("yes\n");
      }else{
    printf("no\n");
      }
    }
  }
 
  return 0;
}
 