#include<iostream>
using namespace std;

#define MAX_N (1<<18)
#define N 100000
#define mod 100000

class Range {
	int data[MAX_N];
	int n;
public:
	void init(int pn) {
		n = 1;
		while(n < pn) n <<= 1;
		for(int i=0; i<2*n; ++i) data[i] = 0;
	}
	
	void add(int k, int a) {
		k += n-1;

		while(k) {
			data[k] = (data[k] + a)%mod;
			k = (k-1) / 2;
		}
		data[0] = (data[0] + a)%mod;
	}
	
	int query(int a, int b, int l, int r, int k) {
		if(r<=a || b<=l) return 0;
		int sum = 0;
		if(a<=l && r<=b) return data[k];
		sum += query(a, b, l, (l + r)/2, 2*k + 1);
		sum += query(a, b, (l + r)/2, r, 2*k + 2);
		return sum%mod;
	}
	
	int sum(int a, int b) {
		return query(a, b, 0, n, 0);
	}
};

int main() {
	int n, m;
	Range r;
	int s, a, ans = 0;
	cin >> n >> m;
	r.init(n-1);
	for(int i=0; i<n-1; ++i) {
		cin >> s;
		r.add(i, s);
	}
	int pos = 0;
	for(int i=0; i<m; ++i) {
		cin >> a;
		if(a>0) {
			ans = (ans + r.sum(pos, pos+a)) % mod;
		}else if(a<0) {
			ans = (ans + r.sum(pos+a, pos)) % mod;
		}
		pos += a;
	}
	cout << ans << endl;
	return 0;
}