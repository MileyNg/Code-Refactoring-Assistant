#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

const int correct = abs('a' - 'A');

int ans = 0;
vector<string> vec(9);
vector<vector<string> > piece(3,vector<string>(3));
vector<vector<int> > offset(3,vector<int>(3,0));
vector<int> used(9,0);

bool valid(char a,char b){
  return abs(a - b) == correct; 
}

void rec(int x, int y) {
  if(x == 3) return rec(0, y + 1);
  if(y == 3) {
    ans++;
    return ;
  }

  for(int i = 0;i < 9;i++){
    if(used[i])continue;
    for(int d = 0;d < 4;d++){
      if(x-1 >= 0){
	if(!valid(vec[i][(3+d)%4], piece[y][x-1][(1+offset[y][x-1])%4])){
	  continue;
	}
      }
      if(y-1 >= 0){
	if(!valid(vec[i][d], piece[y-1][x][(2+offset[y-1][x])%4])){
	  continue;
	}
      }
      piece[y][x] = vec[i];
      offset[y][x] = d;
      used[i] = 1;
      rec(x+1,y);
      used[i] = 0;
    }
  }
}

int main(){
  int n;
  cin >> n;
  while(n--){
    for(auto &e : vec) {
      cin >> e;
    }
    ans = 0;
    rec(0,0);
    cout << ans << endl;
  }
    
    
  
  return 0;
}