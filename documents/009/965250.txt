#include<stdio.h>

#define compile 1

void initialize(char array[], int n);
int adventure(char tile, int *x, int *y);
void output(int x, int y, int flag);

main()
{
	int i = 0, j = 0;
	int x = 0, y = 0;
	int h = 0, w = 0;
	
	while(1)
	{
		scanf("%d %d", &h, &w); //h,wの値を取得
		//printf("h = %d w = %d\n", h, w); //デバッグ用
		char room[h][w]; //タイルの状態を代入する配列
		for(i = 0; i < h; i++) //初期化を行う
		{
			initialize(room[i], w);
		}
		if((h == 0) && (w == 0)) //h=0,w=0ならばループを抜ける
		{
			break;
		}
		for(i = 0; i < h; i++)
		{
			scanf("\n");
			gets(room[i]); //getsで横1列ずつ状態を代入する
		}
		/*
		for(i = 0; i < h; i++)
		{
			for(j = 0; j < w; j++)
			{
				printf("%x (%c) ", room[i][j], room[i][j]);
			}
			puts("");
		}
		*/
		x = 0, y = 0;
		int limit = 2 * (h * w), limit_counter = 0, flag = 0;
		//printf("limit = %d\n", limit);
		for(limit_counter = 0; limit_counter <= limit; limit_counter++)
		{
			//printf("limit_counter = %d\n", limit_counter);
			flag = adventure(room[y][x], &x, &y);
			//printf("x = %d y = %d\n", x, y);
			if(flag == 1)
			{
				break;
			}
		}
		output(x, y, flag);
	}
	return 0;
}
void initialize(char array[], int n)
{
	int i = 0;
	for(i = 0; i < n; i++)
	{
		array[i] = 0x00;
	}
}
int adventure(char tile, int *x, int *y)
{
	//printf("tile = %x\n", tile);
	if(tile == 0x3e)
	{
		*x += 1;
	}
	else if(tile == 0x3c)
	{
		*x -= 1;
	}
	else if(tile == 0x5e)
	{
		*y -= 1;
	}
	else if(tile == 0x76)
	{
		*y += 1;
	}
	else if(tile == 0x2e)
	{
		return 1;
	}
}
void output(int x, int y, int flag)
{
	if(flag == 1)
	{
		printf("%d %d\n", x, y);
	}
	else
	{
		printf("LOOP\n");
	}
}