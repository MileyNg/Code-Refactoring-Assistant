#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>

using namespace std;

int Solve(string s)
{
    if (s[0] == '[' && s.size() > 2 && isdigit(s[1]))
        return (stoi(s.substr(1, s.size() - 2)) + 2) / 2;

    vector<int> res;
    int N = s.size();
    int idx = 1;


    while (idx < N) {
        if (s[idx] == '[') {
            int end = idx + 1, cnt = 1;
            while (cnt != 0) {
                if (s[end] == '[')
                    ++cnt;
                else if (s[end] == ']')
                    --cnt;
                ++end;
            }
            res.push_back(Solve(s.substr(idx, end - idx)));
            idx = end;
        }
        else
            ++idx;
    }

    sort(res.begin(), res.end());
    int res_num = 0;
    N = (res.size() + 2) / 2;
    for (int i = 0; i < N; ++i)
        res_num += res[i];

    return res_num;
}

int main()
{
    int n;

    cin >> n;
    for (int i = 0; i < n; ++i) {
        string s;

        cin >> s;
        cout << Solve(s) << '\n';
    }

    return 0;
}