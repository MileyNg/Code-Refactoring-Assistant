#include <stdio.h>
#include <math.h>

#include <bitset>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <cstring>
#include <string>
#include <sstream>
#include <algorithm>
#include <iomanip>
#include <iostream>

#define VARIABLE(x) cerr << #x << "=" << x << endl
#define BINARY(x) cerr << #x << "=" << static_cast<bitset<16> >(x) << endl;
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define REP(i,m,n) for (int i=m;i<(int)(n);i++)
#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))

const int INF = 10000000;
int dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};
using namespace std;
typedef pair<int, int> P;

/** Problem1142 : Organize your Train part II **/
int main()
{
	int m;
	cin>>m;
	rep(k, m) {
		set<string> ans;
		string s;
		cin>>s;
		for (int i=1; i<=s.size(); i++) {
			string s1 = s.substr(0, i);
			string s2 = s.substr(i, s.size());
			
			ans.insert(s1+s2);
			ans.insert(s2+s1);
			
			reverse(s1.begin(), s1.end());
			ans.insert(s1+s2);
			ans.insert(s2+s1);
			
			reverse(s2.begin(), s2.end());
			reverse(s1.begin(), s1.end());
			ans.insert(s1+s2);
			ans.insert(s2+s1);
			
			reverse(s1.begin(), s1.end());
			ans.insert(s1+s2);
			ans.insert(s2+s1);
		}
		cout << ans.size() << endl;
	}
}