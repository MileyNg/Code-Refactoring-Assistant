#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

vector< vector<char> > t,u;
vector<char> tmp;
vector<char> z;

char ch;
int x,y;

void input();
void funcA();
void funcE();
void funcP();
void funcN();
void funcF();
void funcB();
void funcD();
void funcK();
void funcY();

void yinsert(int,vector<char>);
void xinsert(int,int,char);
void ydelete(int);
void xdelete(int,int);

int main(){

  t.clear();
  tmp.clear();
  input();
  x=y=0;
  while(1){
    
    cin>>ch;
    if(ch=='a')funcA();
    else if(ch=='e')funcE();
    else if(ch=='p')funcP();
    else if(ch=='n')funcN();
    else if(ch=='f')funcF();
    else if(ch=='b')funcB();
    else if(ch=='d')funcD();
    else if(ch=='k')funcK();
    else if(ch=='y')funcY();
    else break;
    
    //cout<<y<<' '<<x<<" ty"<<t.size()<<endl;
  }

  for(int i=0;i<t.size();i++){
    for(int j=0;j<t[i].size();j++){
      cout<<t[i][j];
    }
  }

  return 0;
}

void funcA(){
  x=0;
}

void funcE(){
  x=t[y].size()-1;
}

void funcP(){
  if(y>0)y--;
  x=0;
}

void funcN(){
  if(y+1<(int)t.size())y++;
  x=0;
}

void funcF(){
  if(x+1<(int)t[y].size())x++;
  else if(y+1<(int)t.size()){y++;x=0;}
}

void funcB(){
  if(x>0)x--;
  else if(y>0){y--;x=t[y].size()-1;}
}

void funcD(){
  if(t[y][x]!='\n'){
    xdelete(y,x);
    return;
  }
  if(y+1==(int)t.size())return;
  xdelete(y,x);
  for(int i=0;i<(int)t[y+1].size();i++)
    t[y].push_back(t[y+1][i]);
  ydelete(y+1);
}

void funcK(){
  tmp.clear();
  if(t[y][x]=='\n'){
    if(y+1<(int)t.size()){
      funcD();
      tmp.push_back('\n');
    }
    return;
  }
  while(t[y][x]!='\n'){
    tmp.push_back(t[y][x]);
    xdelete(y,x);
  }
  reverse(tmp.begin(),tmp.end());
  //funcE();
}

void funcY(){
  vector<char> z;
  if(tmp.size()==0)return;
  if(tmp[0]=='\n'){
    while(t[y][x]!='\n'){
      z.push_back(t[y][x]);
      xdelete(y,x);
    }
    yinsert(y+1,z);
    y++;
    x=0;
    return;
  }
  for(int i=0;i<(int)tmp.size();i++){
    xinsert(y,x,tmp[i]);
  }
  //funcE();
}

void input(){
  vector<char> a;
  string str;
  while(1){
    getline(cin,str);
    if(str=="END_OF_TEXT")break;
    a.clear();
    for(int i=0;i<(int)str.size();i++)
      a.push_back(str[i]);
    a.push_back('\n');
    t.push_back(a);
  }
}








void xinsert(int y,int x,char ch){
  if(x==(int)t[y].size()){
    t[y].push_back(ch);
  }else{
    
    z=t[y];
    t[y].clear();
    for(int i=0;i<(int)z.size();i++){
      if(i==x)t[y].push_back(ch);
      t[y].push_back(z[i]);
    }
  }
}

void xdelete(int y,int x){
  if(x+1==(int)t[y].size()){
    t[y].pop_back();
  }else{
    
    z=t[y];
    t[y].clear();
    for(int i=0;i<(int)z.size();i++){
      if(i==x)continue;
      t[y].push_back(z[i]);
    }
  }
}

void yinsert(int y,vector<char> ch){
  if(y==(int)t.size()){
    t.push_back(ch);
  }else{
    u=t;
    t.clear();
    for(int i=0;i<(int)u.size();i++){
      if(i==y)t.push_back(ch);
      t.push_back(u[i]);
    }
  }
}

void ydelete(int y){
  if(y+1==(int)t.size()){
    t.pop_back();
  }else{
    u=t;
    t.clear();
    for(int i=0;i<(int)u.size();i++){
      if(i==y)continue;
      t.push_back(u[i]);
    }
  }
}