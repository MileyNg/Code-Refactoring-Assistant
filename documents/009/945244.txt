#include<stdio.h>
#include<string.h>

#define M 1000000 
#define NIL (-1)
#define L 14

char Hash[M][L]; /* Hash Table */
int n;

int getChar(char ch){
    if ( ch == 'A') return 1;
    else if ( ch == 'C') return 2;
    else if ( ch == 'G') return 3;
    else if ( ch == 'T') return 4;
}

/* convert a string into an integer value */
long long getKey(char str[]){
    long long sum = 0, p = 1, i;
    for ( i = 0; i < strlen(str); i++ ){
        sum += p*(getChar(str[i]));
        p *= 5;
    }
    return sum;
}

int h1(int key){ return key%M; }
int h2(int key){ return key%(M-1) + 1; }

int find(char str[]){
    int i = 0, flag = 0;
    int h_1, h_2, h_3;
    long long key = getKey(str);

    h_1 = h1(key);
    h_2 = h2(key);

    while (i < M) {

        h_3 = (h_1 + i * h_2) % M;
        if(Hash[h_3][0] == '\0') break;     // 空のとき

        else {
            if(strcmp(Hash[h_3], str) == 0) {
                flag = 1;
                break;
            }
            else continue;
        }
        i++;
    }
    return flag;
}

void insert(char str[]){
    int i = 0;
    int h_1, h_2, h_3;
    long long key = getKey(str);

    h_1 = h1(key);
    h_2 = h2(key);

    while (i < M) {
        h_3 = (h_1 + i * h_2) % M;
        if (Hash[h_3][0] == NIL){
            strcpy(Hash[h_3], str);
            break;
        }
        else continue;
        i++;
    }
}


int main(){
    int i, h, n;
    char str[L], com[9];
    for ( i = 0; i < M; i++ ) Hash[i][0] = '\0';

    scanf("%d", &n);

    for ( i = 0; i < n; i++ ){
        scanf("%s %s", com, str);

        if ( com[0] == 'i' ){
            insert(str);
        } else {
            if (find(str)){
                printf("yes\n");
            } else {
                printf("no\n");
            }
        }
    }

    return 0;
}