// Enjoy your stay.

#include <bits/stdc++.h>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

typedef istringstream iss;
typedef long long ll;
typedef pair<ll,ll> pi;
typedef stringstream sst;
typedef vector<ll> vi;

//
#define MN 10010
struct edge{int to;ll cap,cost;int rev;
edge(int to,ll cap,ll cost,int rev):to(to),cap(cap),cost(cost),rev(rev){}};
vector<edge> g[MN];
int V_mcf,prevv[MN],preve[MN];
ll h[MN],dist[MN];

void init(int V){
	V_mcf=V;
	rep(i,V)g[i].clear();
}

void add_edge(int from,int to,ll cap,ll cost){
	g[from].pb(edge(to,cap,cost,sz(g[to])));
	g[to].pb(edge(from,0,-cost,sz(g[from])-1));
};

ll min_cost_flow_neg(int s,int t,ll f){
	ll res=0;
	fill(h,h+V_mcf,0);
	while(f>0){
		fill(dist,dist+V_mcf,INF);
		dist[s]=0;
		while(1){
			bool update=0;
			rep(i,V_mcf)rep(j,sz(g[i])){
				edge& e=g[i][j];
				if(e.cap>0 && dist[e.to]>dist[i]+e.cost+h[i]-h[e.to]){
					dist[e.to]=dist[i]+e.cost+h[i]-h[e.to];
					prevv[e.to]=i;
					preve[e.to]=j;
					update=1;
				}
			}
			if(!update)break;
		}
		
		if(dist[t]==INF)return INF*INF;
		rep(v,V_mcf)h[v]+=dist[v];
		ll d=f;
		for(int v=t;v!=s;v=prevv[v]){
			d=min(d,g[prevv[v]][preve[v]].cap);
		}
		f-=d;
		res+=d*h[t];
		for(int v=t;v!=s;v=prevv[v]){
			edge& e=g[prevv[v]][preve[v]];
			e.cap-=d;
			g[v][e.rev].cap+=d;
		}
	}
	return res;
}
//

int n,W[111][111],E[111][111];
char c[111][111];

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	cin>>n;
	rep(i,n)rep(j,n)cin>>W[i][j];
	rep(i,n)rep(j,n)cin>>E[i][j];
	rep(i,n)cin>>c[i];
	init(n*2+2);
	int s = n*2, t = s+1;
	rep(i,n){
		add_edge(s, i, 1, 0);
		add_edge(n+i, t, 1, 0);
	}
	int ans = 0;
	rep(i,n)rep(j,n){
		if(c[i][j] == '.'){
			add_edge(i, n+j, 1, W[i][j]);
		}else{
			ans += E[i][j];
			add_edge(i, n+j, 1, -E[i][j]);
		}
	}
	ans += min_cost_flow_neg(s,t,n);
	cout<<ans<<endl;
	vector<pair<pi,string>> v;
	rep(i,n)rep(j,sz(g[i])){
		int to = g[i][j].to - n;
		if(!(to >= 0 && to < n))continue;
		if(c[i][to] == '.' && g[i][j].cap == 0){
			v.pb(mp(mp(i+1,to+1),"write"));
		}
		if(c[i][to] == 'o' && g[i][j].cap == 1){
			v.pb(mp(mp(i+1,to+1),"erase"));
		}
	}
	cout<<sz(v)<<endl;
	rep(i,sz(v)){
		cout<<v[i].fir.fir<<" "<<v[i].fir.sec<<" "<<v[i].sec<<endl;
	}
}