#include<iostream>
#include<cstring>
#include<queue>
using namespace std;
//masu,count
struct Greater{
  bool operator() (pair<int,int>a,pair<int,int> b)
  {
    if(a.second!=b.second)
      return a.second>b.second;
    return  a.first<b.first;
  }
};

int main()
{
  int n;
  for(;cin>>n;)
    {
      int p[n];
      for(int i=0;i<n;i++)
	{
	  cin>>p[i];
	}
      bool closed[n];
      memset(closed,false,sizeof(closed));
      priority_queue<pair<int,int> ,vector<pair<int,int> >, Greater> qu;
      qu.push(make_pair(0,0));
      while(!qu.empty())
	{
	  pair<int,int >data = qu.top();qu.pop();
	  if(data.first>=n-1)
	    {
	      cout<<data.second<<endl;
	      break;
	    }
	  //	  cout<<qu.top().first<<" "<<qu.top().second<<endl;
	  for(int i=1;i<=6;i++)
	    {
	      int dx=data.first+i;
	      while(dx<n-1 && p[dx]!=0)
		{
		  if(closed[dx])
		    break;
		  closed[dx]=true;
		  dx+=p[dx];
		}
	      if(!closed[dx])		
		qu.push(make_pair(dx,data.second+1));
	      closed[dx]=true;
	    }
	}
    }

}