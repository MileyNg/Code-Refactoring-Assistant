#include <iostream>
#include <algorithm>
using namespace std;
void init_array(int array[51][51]){
    for (int i = 0; i < 51; i++) {
        for (int j = 0; j < 50; j++) {
            array[i][j] = 0;
        }
    }
}

int main()
{
    int f, n, t, lim;
    int schedule[51][51];
    int maps[51][51];
    while (true) {
        lim = 0;
        init_array(schedule);
        init_array(maps);
        cin >> n;
        if (n == 0) {
            break;
        }
        for (int i = 0; i < n; i++) {
            cin >> f;
            for (int j = 0; j < f; j++) {
                cin >> t;
                lim = max(lim, t);
                schedule[i][t] = 1;
            }
        }
        for (int i = 0; i < n; i++) {
            maps[i][0] = i + 1;
        }

        for (int i = 1; i <= lim; i++) {
            for (int j = 0; j < n; j++) {
                maps[j][i] = maps[j][i-1];
            }
            for (int j = 0; j < n - 1; j++) {
                for (int k = j+1; k < n; k++) {
                    if (schedule[j][i] && schedule[k][i]) {
                        maps[j][i] = max(maps[j][i-1] + maps[k][i-1], maps[j][i]);
                        maps[k][i] = max(maps[j][i-1] + maps[k][i-1], maps[k][i]);
                    }
                }
            }
        }

        int sum = n * (n + 1) / 2;
        int day = 10000;
        int flag = 0;
        for (int i = 1; i <= lim; i++) {
            for (int j = 0; j < n; j++) {
                if (maps[j][i] == sum){
                    day = i;
                    flag = 1;
                }
            }
            if (flag)
                break;
        }
        if (day == 10000) {
            cout << -1 << endl;
        }else{
            cout << day <<endl;
        }
    }
    return 0;
}