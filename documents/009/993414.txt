#include <bits/stdc++.h>

#define reps(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)
#define rep(v, n) reps(v, 0, n)
#define lep(v, n) reps(v, 1, n + 1)

using namespace std;

typedef long long int lint;

static inline int in(){ int x; scanf("%d", &x); return x; }
static inline lint inl(){ lint x; scanf("%lld", &x); return x; }
template<typename T> void show(T& a, char del='\n', char last='\n'){ rep(i, a.size() - 1) cout << a[i] << del; cout << a[a.size() - 1] << last; }

int main()
{
  int n;
  while (n = in()){
    vector<pair<int, int> > islands;
    rep(i, n){
      int item;
      int lim;
      item = in();
      lim = in();
      islands.push_back(make_pair(lim, item));
    }
    sort(islands.begin(), islands.end());
    int total = 0;
    bool ok = true;
    rep(i, n){
      if (total > islands[i].first){
        ok = false;
        break;
      }
      total += islands[i].second;
      if (total > islands[i].first){
        ok = false;
        break;
      }
    }
    puts(ok ? "Yes" : "No");
  }
  return 0;
}