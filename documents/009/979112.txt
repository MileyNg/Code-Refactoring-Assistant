#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <climits>
#include <ctime>
#include <queue>
#include <stack>
#include <algorithm>
#include <list>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <deque>
#include <complex>
#include <string>
#include <iomanip>
#include <sstream>
#include <bitset>
#include <valarray>
#include <iterator>
using namespace std;
typedef long long int lli;
typedef unsigned int uint;
typedef unsigned char uchar;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector<int> vi;

#define REP(i,x) for(int i=0;i<(int)(x);i++)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();i++)
#define RREP(i,x) for(int i=(x);i>=0;i--)
#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();i++)
#define ALL(container) container.begin(), container.end()
#define SZ(container) ((int)container.size())

template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"["; FOR(it,t) {if(it!=t.begin()) os<<","; os<<*it;} os<<"]"; return os;
}
template<class T> ostream& operator<<(ostream &os, const set<T> &t) {
os<<"{"; FOR(it,t) {if(it!=t.begin()) os<<","; os<<*it;} os<<"}"; return os;
}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}

int d;

int check(vector<double> &v, int t, int s, double eps){
	double sum = 0;
	REP(j, v.size()){
		if(j==t||j==s) continue;
		double tmp = 1;
		REP(i, v.size()){
			if(i==t||i==s||i==j) continue;
			tmp*=(double)(s-i)/(j-i);
		}
		sum += v[j] * tmp;
	}
	return abs(v[s] - sum) < eps;
}

main(){
	int i,j;
	while(cin >> d, d){
		vector<double> v(d+3);
		REP(i, d+3) cin >> v[i];
		double l = 1e-9, r=1;
		while(1){
			double eps = sqrt(r/l)*l;
			int ans = -1;
			REP(i, d+3){
				if(check(v, i, i?0:1, eps)){
					if(ans == -1) ans = i;
					else ans = -2;
				}
			}
			if(ans >= 0){
				cout << ans << endl;
				break;
			}else if(ans == -1) l = eps;
			else r = eps;
		}
	}
	return 0;
}