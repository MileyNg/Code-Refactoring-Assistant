#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>

using namespace std;

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))
#define DIGIT(c) (c >= '0' && c <= '9')
#define F first
#define S second
#define INF 1 << 30

typedef pair<int, int> pi;
typedef pair<int, pi> pii;
typedef vector<int> vi;
typedef queue<int> qi;
typedef long long ll;

int W, H;
char c[100][100];

string judge(string a, string b){
  while(a[0] == '0') a.erase(a.begin());
  while(b[0] == '0') b.erase(b.begin());
  //  cout << a << " " << b << endl;
  if(a.size() > b.size()) return a;
  if(a.size() < b.size()) return b;
  
  rep(i, a.size()){
    if(a[i] > b[i]) return a;
    if(a[i] < b[i]) return b;
  }
  return a;
}

int main(){
  while(scanf("%d%d", &W, &H) && W+H){
    rep(i, H) scanf("%s", c[i]);

    vector<vector<string> >dp(H, vector<string>(W, ""));
    if(DIGIT(c[0][0])) dp[0][0] = c[0][0];
    REP(i, 1, W) if(DIGIT(c[0][i])) dp[0][i] = dp[0][i-1] + c[0][i];
    REP(i, 1, H) if(DIGIT(c[i][0])) dp[i][0] = dp[i-1][0] + c[i][0];

    REP(i, 1, H){
      REP(j, 1, W){
	if(!DIGIT(c[i][j])) continue;
	dp[i][j] = judge((dp[i-1][j]+c[i][j]), (dp[i][j-1]+c[i][j]));
	//	cout << i << " " << j << " " << dp[i-1][j]+c[i][j] << " " << dp[i][j-1]+c[i][j] << endl;
      }
    }


    /*    rep(i, H){
      rep(j, W) cout << dp[i][j] << " ";
      puts("");
      }*/

    string res = "";
    rep(i, H) rep(j, W) res = judge(res, dp[i][j]);
    //    if(res[0] == '0') res.erase(res.begin());
    cout << res << endl;
  }
  return 0;
}