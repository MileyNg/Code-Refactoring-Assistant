#include <bits/stdc++.h>
using namespace std;

#define dump(n) cout<<"# "<<#n<<'='<<(n)<<endl
#define repi(i,a,b) for(int i=int(a);i<int(b);i++)
#define peri(i,a,b) for(int i=int(b);i-->int(a);)
#define rep(i,n) repi(i,0,n)
#define per(i,n) peri(i,0,n)
#define all(c) begin(c),end(c)
#define mp make_pair
#define mt make_tuple

typedef unsigned int uint;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef vector<string> vs;

const int INF=1e9;
const int MOD=1e9+7;
const double EPS=1e-9;

template<typename T1,typename T2>
ostream& operator<<(ostream& os,const pair<T1,T2>& p){
	return os<<'('<<p.first<<','<<p.second<<')';
}
template<typename T>
ostream& operator<<(ostream& os,const vector<T>& a){
	os<<'[';
	rep(i,a.size()) os<<(i?" ":"")<<a[i];
	return os<<']';
}

int lcm(int a,int b)
{
	return a/__gcd(a,b)*b;
}
int lcm(const vi& a)
{
	int res=1;
	for(int x:a) res=lcm(res,x);
	return res;
}

int main()
{
	for(int n;cin>>n && n;){
		vvi q(n);
		rep(i,n){
			int d,t; cin>>d>>t;
			q[i].resize(d);
			rep(j,d) cin>>q[i][(t-j+d)%d];
		}
		
		vi ds={13,17,19,23};
		vvi qq[2];
		rep(i,n)
			qq[count(all(ds),q[i].size())].push_back(q[i]);
		
		vi sum[2]={vi(1),vi(1)};
		rep(i,2){
			rep(j,qq[i].size())
				sum[i].resize(lcm(sum[i].size(),qq[i][j].size()));
			rep(j,qq[i].size()) rep(k,sum[i].size())
				sum[i][k]+=qq[i][j][k%qq[i][j].size()];
		}
		
		int res=0;
		rep(i,2) res+=*max_element(all(sum[i]));
		cout<<res<<endl;
	}
}