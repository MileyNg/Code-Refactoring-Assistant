#include<iostream>
#include<algorithm>
#include<vector>
#include<cassert>
#include<cstdio>
#include<queue>
 
using namespace std;
 
int N, G[100][100], V[100], D[100];//G:２頂点,V:次数,D:距離
 
void bfs(int src){
    queue<int> Q;
    Q.push(src);
    fill(D, D + N, -1);
    D[src] = 0;
    while (! Q.empty()){
        int cur = Q.front();
        Q.pop();
        cerr << cur+1 << " " << D[cur] << endl;
        for (int k = 0; k < N; k++){
            if (G[cur][k] == 1 && D[k] == -1){
                D[k] = D[cur]+1;
                Q.push(k);
            }
        }
    }
}
 
int main(){
    scanf("%d", &N);
        int id, c;
        for (int i = 0; i < N; i++){
            scanf("%d", &id); id--;//配列は0から始まるので、頂点番号を-1して考える。
            scanf("%d", V + id);
            for (int j = 0; j < V[id]; j++){
                scanf("%d", &c); c--;//配列は0から始まるので、頂点番号を-1して考える。
                G[id][c] = 1;
            }
        }//データの読み込み完了。
    bfs(0);
}