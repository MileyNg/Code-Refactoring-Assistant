#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <map>
#include <set>
using namespace std;
bool out(int x,int y,int n){
  return (x < 0 || x >= n || y < 0 || y >= n);
}

int main(){
  int n;
  int cnt = 1;
  while(cin >> n && n){
	vector<vector<int> > field(n,vector<int>(n,0));
	int dx[] = {-1,0,1,1};
	int dy[] = {1,1,-1,0};
	int cx = 0,cy = 0;
	int dir = 2;
	int n_order = 1;
	while(1){
	  field[cy][cx] = n_order++;
	  if(cy == n-1 && cx == n-1)break;

	  int cdir = dir;
	  if(out(cx+dx[dir],cy+dy[dir],n)){
		if(!out(cx + dx[(dir + 1) % 4], cy + dy[(dir + 1) % 4], n)) {
		  cdir = (dir + 1) % 4;
		}
		else {
		  cdir = (dir + 3) % 4;
		}
		dir ^= 2;
	  }

	  cx += dx[cdir];
	  cy += dy[cdir];
	}
	cout << "Case " << cnt++ << ":" << endl;
	
	for(int i = 0; i < n; ++i) {
	  for(int j = 0; j < n; ++j) {
		printf("%3d", field[i][j]);
	  }
	  puts("");
	}
	
  }
  return 0;
}