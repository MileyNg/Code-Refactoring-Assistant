#include <iostream>
#include <vector>
#include <queue>
using namespace std;
const int INF = 1 << 29;
int dx[4] = {1,0,0,-1};
int dy[4] = {0,1,-1,0};
int w,h;
int gx,gy;
void print(vector<vector<int> > map){
  for(int i = 0;i < map.size();i++){
    for(int j =0;j < map[0].size();j++){
      if(map[i][j] == INF)cout << ";" << " ";
      else if(map[i][j] == -1)cout << "%" << " ";
      else cout << map[i][j] << " ";
    }
    cout << endl;
  }
}
int dfs(vector<vector<int> > &map,pair<int,int> c,int cnt){
  int x,y;
  int ans = INF;
  if(cnt >= 10)return ans;
  for(int i = 0;i < 4;i++){
    x = c.first;y = c.second;
    
    //if(map[x+dx[i]][y+dy[i]] == 1)continue;
    while(1){

      if(x+dx[i] < 0 || x+dx[i] >= w || y+dy[i] < 0 || y+dy[i] >= h )break;

      if(map[x+dx[i]][y+dy[i]] == 3){
	return cnt+1;
      }
      if(map[x+dx[i]][y+dy[i]] == 1){
	if(x == c.first && y == c.second)break;
	pair<int,int> tmp(x,y);
	map[x+dx[i]][y+dy[i]] = 0;
	ans = min(dfs(map,tmp,cnt+1),ans);
	map[x+dx[i]][y+dy[i]] = 1;
	break;
      }
      x += dx[i];y += dy[i];
    }
  }
  return ans;
}

int main(){

  while(cin >> w >> h,w || h){
    vector<vector<int> > map(w,vector<int>(h,0));
    pair<int,int> s;
    pair<int,int> g;
    for(int i = 0;i < w;i++){
      for(int j = 0;j < h;j++){
	cin >> map[i][j];
	if(map[i][j] == 2){
	  s.first = i;
	  s.second = j;
	  map[i][j]  = 0;
	}else if(map[i][j] == 3){
	  gx = i;
	  gy = j;
	}
      }
    }
    int ans = dfs(map,s,0);
    if(ans > 10)cout << -1 << endl;
    else cout << ans << endl;
  }
  return 0;
 
}