#include <iostream>
#include <algorithm>
#include <cstdio>
#include <stack>

using namespace std;

typedef struct _TAG_POSITION {
	int x;
	int y;
} POSITION;

int main(){
	int W, H;
	stack<POSITION> S;
	POSITION p;
	while(cin >> W >> H, W || H){
		char board[H+2][W+2];
		int ret = 0;
		for(int i = 0; i < H+2; i++){
			for(int j = 0; j < W+2; j++){
				(((i == 0) || (i == H + 1)) || ((j == 0) || (j == W + 1))) && (board[i][j] = '#');
				(0 < i && i < H + 1) && (0 < j && j < W + 1) && cin >> board[i][j];
				if(board[i][j] == '@') { S.push({i,j}); ret++; }
			}
		}

		while(!S.empty()){
			p = S.top();
			S.pop();
			if(board[p.x + 1][p.y] == '.') { board[p.x + 1][p.y] = '@'; ret++; S.push({p.x + 1,p.y}); }
			if(board[p.x - 1][p.y] == '.') { board[p.x - 1][p.y] = '@'; ret++; S.push({p.x - 1,p.y}); }
			if(board[p.x][p.y + 1] == '.') { board[p.x][p.y + 1] = '@'; ret++; S.push({p.x,p.y + 1}); }
			if(board[p.x][p.y - 1] == '.') { board[p.x][p.y - 1] = '@'; ret++; S.push({p.x,p.y - 1}); }
		}
		cout << ret << "\n";
	}
	return 0;
}