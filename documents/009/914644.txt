// Enjoy your stay.

#include <bits/stdc++.h>

#define EPS 1e-9
#define INF 1070000000LL
#define MOD 1000000007LL
#define fir first
#define foreach(it,X) for(auto it=(X).begin();it!=(X).end();it++)
#define ite iterator
#define mp make_pair
#define mt make_tuple
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<(n);i++)
#define pb push_back
#define sec second
#define sz(x) ((int)(x).size())

using namespace std;

typedef istringstream iss;
typedef long long ll;
typedef pair<ll,ll> pi;
typedef stringstream sst;
typedef vector<ll> vi;

int n,m,C;
vector<pi> g[111];
int dist[111][111];

typedef pair<int,pi> tri;

int main(){
	cin.tie(0);
	ios_base::sync_with_stdio(0);
	
	while(cin>>n>>m>>C && n){
		rep(i,n)g[i].clear();
		rep(i,m){
			int f,t,c;
			cin>>f>>t>>c;
			f--;t--;
			g[f].pb(mp(t,c));
		}
		priority_queue<tri,vector<tri>,greater<tri>> Q;
		rep(i,n)rep(j,n)dist[i][j] = INF;
		dist[0][0] = 0;
		Q.push(mp(0,mp(0,0)));
		while(sz(Q)){
			tri tr = Q.top(); Q.pop();
			int d = tr.fir, v = tr.sec.fir, t = tr.sec.sec;
			if(d > dist[v][t])continue;
			rep(i,sz(g[v])){
				int to = g[v][i].fir;
				int cost = g[v][i].sec;
				if(d + cost < dist[to][t]){
					dist[to][t] = d + cost;
					Q.push(mp(d+cost, mp(to,t)));
				}
				if(t<n-1 && d < dist[to][t+1]){
					dist[to][t+1] = d;
					Q.push(mp(d, mp(to,t+1)));
				}
			}
		}
		rep(i,n)if(dist[n-1][i] <= C){
			cout<<i<<endl; break;
		}
	}
}