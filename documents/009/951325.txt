#include<stdio.h>
#include<string.h>

#define M 10000000/* your task*/
#define L 14

char H[M][L]; /* Hash Table */

int getChar(char ch){
  if ( ch == 'A') return 1;
  else if ( ch == 'C') return 2;
  else if ( ch == 'G') return 3;
  else if ( ch == 'T') return 4;
}

/* convert a string into an integer value */
long long getKey(char str[]){
  long long sum = 0, p = 1, i;
  for ( i = 0; i < strlen(str); i++ ){
    sum += p*(getChar(str[i]));
    p *= 5;
  }
  return sum;
}

int h1(int key){ /* your task */
  key = key % M;
  return key
    ; }
int h2(int key){ /* your task */
  key = 1 + key % (M - 1);
  return key;
  ; }




int find(char str[]){
  
  /* your task */
  long long key = getKey(str);
  int i = h1(key), j = h2(key);
  long long sum = 0;
  
  if(strcmp(H[i],str) == 0){
    return 1;
  }
  if(H[i][0] == '\0'){
    return 0;
  }
  sum = i;
  
  while(1){
    sum = (sum + j) % M;
    if(strcmp(H[sum], str) == 0) {
      return 1;
    }
    else if(H[sum][0] == '\0') {
      return 0;
    }
  }
  return 0;
  
}


int insert(char str[]){
  
  /* your task */
  long long key = getKey(str);
  int i = h1(key), j = h2(key);
  long long sum = 0;
  
  if(H[i][0] == '\0'){
    strcpy(H[i],str);
    return;
  }
  sum = i;
  
  while(1){
    sum = (sum + j) % M;
    if(H[sum][0] == '\0' ){
      strcpy(H[sum], str);
      break;
    }
    
  }
  
}

int main(){
  int i, n, h;
  char str[L], com[9];
  for ( i = 0; i < M; i++ ) H[i][0] = '\0'; 

  scanf("%d", &n);  

  for ( i = 0; i < n; i++ ){
    scanf("%s %s", com, str);
    
    if ( com[0] == 'i' ){
      insert(str);
    } else {
      if (find(str) == 1){
        printf("yes\n");
      } else {
        printf("no\n");
      }
    }
  }
  
  return 0;
}