#include <bits/stdc++.h>

#define reps(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)
#define rep(v, n) reps(v, 0, n)
#define lep(v, n) reps(v, 1, n + 1)

using namespace std;

typedef long long int lint;

static inline int in(){ int x; scanf("%d", &x); return x; }
static inline lint inl(){ lint x; scanf("%lld", &x); return x; }
template<typename T> void show(T& a, char del='\n', char last='\n'){ rep(i, a.size() - 1) cout << a[i] << del; cout << a[a.size() - 1] << last; }

vector<string> split(const string& S)
{
  istringstream stream(S);
  string field;
  vector<string> result;
  while (getline(stream, field, ' ')){
    result.push_back(field);
  }
  return result;
}

int main()
{
  string str;
  while (getline(cin, str), str != "END OF INPUT"){
    vector<string> ss = split(str);
    rep(i, ss.size()){
      printf("%d", ss[i].size());
    }
    puts("");
  }

  return 0;
}