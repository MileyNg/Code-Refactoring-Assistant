#include <stdio.h>
#include <ctype.h>
 
#define MAX 100000
#define _MAX 1500000

int par[MAX];
 
void init(int);
int depth(int);
int input(void);

char *p;
char in[_MAX];
int tree[MAX][15],idx[MAX];

int main(){
  int n,i,j,id,k,c;

  fread(in,sizeof(in),1,stdin);  
  p = in;

  n = input(); init(n);
  for(i = 0 ; i < n ; i++){
    id = input();
    k = input();
    for(j = 0 ; j < k ; j++){
      c = input();
      par[c] = id;
      tree[id][idx[id]++] = c;
    }
  }
 
  for(i = 0 ; i < n ; i++){
    printf("node %d: parent = %d, depth = %d, "
           ,i,par[i],depth(i));
    
    if(par[i] == -1){
      printf("root, [");
    }else if(!idx[i]){
      printf("leaf, [");
    }else{
      printf("internal node, [");
    }

    for(j = 0 ; j < idx[i] ; j++){
      printf("%d",tree[i][j]);
      if(j < idx[i]-1) printf(", ");
    }
    puts("]");
  }
  return 0;
}

void init(int n){
  int i;
  for(i = 0 ; i < n ; i++){
    par[i] = -1;
  }
}

int depth(int x){
  if(par[x] == -1) return 0;
  return depth(par[x]) + 1;
}

int input(){
  int v = 0;
  while(!isdigit(*p)) ++p;
  v = *p++&15;
  while(isdigit(*p)){
    v = (v<<3)+(v<<1)+(*p++&15);
  }
  return v;
}