#include <stdio.h>
 
#define PRIME_MAX 1000000
int getprimes(int list[], int top){
    int i, j;
    int index = 0;
    char tmp[PRIME_MAX];
 
    for(i=0;i<top;i++) {
        tmp[i] = 1;
    }
    
    tmp[0] = tmp[1] = 0;
    for(i=2;i<top;i++) {
        if(tmp[i] == 1) {
            /* 素数 */
            list[index] = i;
            index ++;
            for(j=2;j*i<top;j++) {
                tmp[j*i] = 0;
            }
        }
    }
 
    list[index] = -1;
    return index;
}

int gcd(int a, int b)
{
	if (a < 0 || b < 0) {
		return 0;
	}

	while (b > 0) {
		int c = a % b;
		a = b;
		b = c;
	}

	return a;
}
 
int main(void) {
    int i, c, j;
    int n, base;
    int size, find;
    int primes[100000];
    int div[1000];
    int d, last_d;
/*
    size = getprimes(primes, PRIME_MAX);
    
    while(scanf("%d\n", &base) == 1) {
        i = d = 0;
        n = base;
        last_d = 0;
        while(n > 1) {
            if((n % primes[i]) == 0) {
            	if(last_d != primes[i]) {
	                div[d] = primes[i];
	                d++;
            	}
                n /= primes[i];
                last_d = primes[i];
            } else {
                i++;
            }
             
            if(i >= size) {
                div[d] = n;
                d++;
                break;
            }
        }
    }
*/
    scanf("%d\n", &base);
    c = 1;
    for(i=2;i<base;i++) {
        if(gcd(base, i) == 1) c++;
    }
    printf("%d\n", c);

    return 0;
}