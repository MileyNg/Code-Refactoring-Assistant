#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
#include <cstring>
#include <cassert>
#include <climits>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>


#define FOR(i,x) for (__typeof (x.begin ()) i = x.begin (); i != x.end (); ++i)

#define all(x) x.begin (), x.end ()
#define vol(x) (int)x.size ()

#define PB push_back
#define MP make_pair

#define X first
#define Y second

#define sqr(x) ((x) * (x))
#define abs(x) (((x) > 0) ? (x) : (-(x))) 
#define lowbit(x) ((x) & (-(x)))


using namespace std;


typedef long long i64;
typedef unsigned long long u64;
typedef double dbl;


int const N_MAX = 50;


int N, ans;
int A [N_MAX], B [N_MAX], R [N_MAX], C [N_MAX];
bool V [N_MAX];

vector<int> O, Vy;

inline bool check (int i, int j) {
	int x = A [i] - A [j], y = B [i] - B [j], r = R [i] + R [j];
	
	return x * x + y * y >= r * r;
}

inline bool checkp (int x) {
	for (int i = 1; i < x; ++i)
		if (!V [i] && !check (i, x))
			return false;
	return true;
}

int main () {
	while (scanf ("%d", &N) != EOF && N > 0) {
		for (int i = 1; i <= N; ++i)
			scanf ("%d%d%d%d", &A [i], &B [i], &R [i], &C [i]);
		
		int ans = 0;
		
		for (int t1 = 1; t1 <= 100; ++t1) {
			O.clear ();
			for (int i = 1; i <= N; ++i)
				V [i] = false, O.PB (i);
			
			for (int t2 = 1; t2 <= 10000; ++t2) {
				random_shuffle (all (O));
				
				int x = O.front ();
				
				Vy.clear ();
				
				for (int i = 1; i < vol (O); ++i)
					if (C [x] == C [O [i]])
						Vy.PB (O [i]);
				
				if (vol (Vy) == 0) continue;
				
				random_shuffle (all (Vy));
				
				int y = Vy.front ();
				
				
				
				if (checkp (x) && checkp (y)) {
					V [x] = V [y] = true;
					
					O.clear ();
					for (int i = 1; i <= N; ++i)
						if (!V [i])
							O.PB (i);
				} else
					continue;
			}
			
			ans = max (ans, N - vol (O));
		}
		
		printf ("%d\n", ans);
	}
	
	fclose (stdin);
	fclose (stdout);
	return 0;
}