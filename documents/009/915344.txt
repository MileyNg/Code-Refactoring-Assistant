#include <iostream>
#include <vector>
using namespace std;
int m,n;
int mass[260]={};
bool DP[260]={};
int seach(vector<int> walked,int now){
	now=max(0,min(now,n+1));
	if(DP[now]!=0)
	return DP[now];
	if(now>n){
		DP[now]=1;
		return 1;
	}
	for(int i=0;i<walked.size();i++){
		if(now==walked[i]){
		//DP[now]=-9999;
		return -i-1;
		}
	}
	walked.push_back(now);
	int maxer=-9999;
	for(int i=1;i<=m;i++){
		int first=min(n+1,now+i);
		int second=first+mass[first];
		maxer=max(maxer,seach(walked,second));
	}
	if(walked.size()==-maxer){
	DP[now]=2;	
	maxer=2;
	}
	if(DP[now]>0)
	DP[now]=maxer;
	//else if(DP[now]<0)
	//DP[now]=-9999;
	return maxer;
	
}

int main() {
	// your code goes here
	vector<int> a;
	while(true){
		cin >> m;
	if(m==0)
		break;
	cin >> n;
	
	for(int i=0;i<260;i++)
		mass[i]=0;
	for(int i=1;i<=n;i++){
		cin >> mass[i];
	}
	for(int i=0;i<260;i++)
	DP[i]=0;
	if(seach(a,0)==1)
		cout << "OK" << endl;
	else
		cout << "NG" << endl;
	
	}
	return 0;
	
}