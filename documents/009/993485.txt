#include <iostream>
#include <string>

using namespace std;

void move_surface(char surface[4]) {
    char tmp = surface[0];
    surface[0] = surface[2];
    surface[2] = surface[3];
    surface[3] = surface[1];
    surface[1] = tmp;
}

void move8(char *c1, char *c2, char *c3, char *c4, char *c5, char *c6, char *c7, char *c8) {
    char tmp1 = *c7;
    char tmp2 = *c8;
    *c8 = *c6;
    *c7 = *c5;
    *c6 = *c4;
    *c5 = *c3;
    *c4 = *c2;
    *c3 = *c1;
    *c2 = tmp2;
    *c1 = tmp1;
}

void rotate(char c, char cube[6][4]) {
    switch (c) {
        case 'L':
            move_surface(cube[0]);
            move8(  &cube[4][0], &cube[4][2], &cube[1][0], &cube[1][2],
                    &cube[5][0], &cube[5][2], &cube[3][3], &cube[3][1]);
            break;
        case 'F':
            move_surface(cube[1]);
            move8(  &cube[4][2], &cube[4][3], &cube[2][0], &cube[2][2],
                    &cube[5][1], &cube[5][0], &cube[0][3], &cube[0][1]);
            break;
        case 'R':
            move_surface(cube[2]);
            move8(  &cube[4][3], &cube[4][1], &cube[3][0], &cube[3][2],
                    &cube[5][3], &cube[5][1], &cube[1][3], &cube[1][1]);
            break;
        case 'B':
            move_surface(cube[3]);
            move8(  &cube[4][1], &cube[4][0], &cube[0][0], &cube[0][2],
                    &cube[5][2], &cube[5][3], &cube[2][3], &cube[2][1]);
            break;
        case 'U':
            move_surface(cube[4]);
            move8(  &cube[3][1], &cube[3][0], &cube[2][1], &cube[2][0],
                    &cube[1][1], &cube[1][0], &cube[0][1], &cube[0][0]);
            break;
        case 'D':
            move_surface(cube[5]);
            move8(  &cube[0][2], &cube[0][3], &cube[1][2], &cube[1][3],
                    &cube[2][2], &cube[2][3], &cube[3][2], &cube[3][3]);
            break;
    }
}

void print(char cube[6][4]) {
    cout << ".." << cube[4][0] << cube[4][1] << "...." << endl;
    cout << ".." << cube[4][2] << cube[4][3] << "...." << endl;
    cout << cube[0][0] << cube[0][1] << cube[1][0] << cube[1][1];
    cout << cube[2][0] << cube[2][1] << cube[3][0] << cube[3][1] << endl;
    cout << cube[0][2] << cube[0][3] << cube[1][2] << cube[1][3];
    cout << cube[2][2] << cube[2][3] << cube[3][2] << cube[3][3] << endl;
    cout << ".." << cube[5][0] << cube[5][1] << "...." << endl;
    cout << ".." << cube[5][2] << cube[5][3] << "...." << endl;
}

int main() {
    string s;
    char cube[6][4] = {
        {'g', 'g', 'g', 'g'},
        {'y', 'y', 'y', 'y'},
        {'b', 'b', 'b', 'b'},
        {'w', 'w', 'w', 'w'},
        {'r', 'r', 'r', 'r'},
        {'o', 'o', 'o', 'o'}
    };
    cin >> s;
    for (int i=0; i<(int)s.length(); i++) {
        rotate(s[i], cube);
    }
    print(cube);
    return 0;
}