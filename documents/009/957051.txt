#include<stdio.h>
#include<math.h>

#define FALSE 0
#define CROSS 1
#define A_IN_B -2
#define B_IN_A 2

#define compile 0

struct circle
{
	double x; //中心のx座標
	double y; //中心のy座標
	double r; //円の半径
};

int func_judge(double ax, double ay, double ar, double bx, double by, double br);
void func_output(int result);

main()
{
	int n = 0, i = 0; //データセット代入変数, 制御変数
	int result = 10; //-2,0,1,2以外なら何でも良い
	scanf("%d", &n);
	for(i = 0; i < n; i++)
	{
		struct circle a = {0, 0, 0}; //構造体変数の宣言(円a)
		struct circle b = {0, 0, 0}; //構造体変数の宣言(円b)
		
		scanf("%lf %lf %lf %lf %lf %lf", &a.x, &a.y, &a.r, &b.x, &b.y, &b.r); //入力
		result = func_judge(a.x, a.x, a.r, b.x, b.y, b.r); //結果の計算
		func_output(result);
		result = 0;
	}
	return 0;
}

int func_judge(double ax, double ay, double ar, double bx, double by, double br)
{
	double dis_a_to_b = 0; //円aと円bの距離を代入する変数
	dis_a_to_b = sqrt(pow(ax - bx, 2) + pow(ay - by, 2)); //中心間の距離を計算
	
#if compile == 2
		printf("dis_a_to_b = %lf\n", dis_a_to_b);
#endif
	
	if(0.0001 > dis_a_to_b) //2つの円の中心が一致している場合
	{
#if compile == 2
		printf("if\nar = %lf br = %lf\n", ar, br);
#endif
		if(ar > br) //aの半径rがbの半径rよりも大きい場合
		{
			return B_IN_A;
		}
		if(ar < br) //bの半径rがaの半径rよりも大きい場合
		{
			return A_IN_B;
		}
	}
	else //2つの円の中心が一致していない場合
	{
#if compile == 2
		printf("else\nar = %lf br = %lf\n", ar, br);
#endif
		if(ar > br) //aの半径rがbの半径rよりも大きい場合
		{
			if(ar > (br + dis_a_to_b))
			{
				return B_IN_A;
			}
			else
			{
				return CROSS;
			}
		}
		else if(br > ar)
		{
			if(br > (ar + dis_a_to_b))
			{
				return A_IN_B;
			}
			else
			{
				return CROSS;
			}
		}
		else if((ar + br) >= dis_a_to_b)
		{
			return CROSS;
		}
		else
		{
#if compile == 2
			printf("return FALSE\n");
#endif
			return FALSE;
		}
	}
}
void func_output(int result)
{
	//printf("result = %d ", result);
	switch(result)
	{
	case -2:
		printf("%d\n", result);
		break;
	case 0:
		printf("%d\n", result);
		break;
	case 1:
		printf("%d\n", result);
		break;
	case 2:
		printf("%d\n", result);
		break;
	}
}