#include<stdio.h>
#define MAX 100005
#define NIL -1

struct Node{ int p, l, r, nid;};
struct Node T[MAX];

int n,count;

void maketree(int id, int l, int r){
  if( l != -1 ){
    T[id].l = l;
    T[l].p = id;
  }
  if( r != -1 ){
    T[id].r = r;
    T[r].p = id;
  }
  T[id].nid = id;
}

void pre_search(int i){
  count++;
  if(count != n) printf("%d ", i);
  else printf("%d", i);
  if(T[i].l != -1){
    pre_search(T[i].l);
  }
  if(T[i].r != -1){
    pre_search(T[i].r);
  }
}

void in_search(int i){
  if(T[i].l != -1){
    in_search(T[i].l);
  }
  count++;
  if(count != n) printf("%d ", T[i].nid);
  else printf("%d", T[i].nid);
  if(T[i].r != -1){
    in_search(T[i].r);
  }
}

void pos_search(int i){
  if(T[i].l != -1){    
    pos_search(T[i].l);
  }
  if(T[i].r != -1){
    pos_search(T[i].r);
  }
  count++;
  if(count != n) printf("%d ", T[i].nid);
  else printf("%d", T[i].nid);
}

void print(){
  int i = 0;
  while(1){
    if(T[i].p == -1)
      break;
    i++;
  }
  printf("Preorder\n");
  count = 0;
  pre_search(i);
  printf("\n");
  printf("Inorder\n");
  count = 0;
  in_search(i);
  printf("\n");
  printf("Postorder\n");
  count = 0;
  pos_search(i);
  printf("\n");
}

int main(){
  int l, r, id;
  int i;

  scanf("%d", &n);
  for(i=0; i<n; i++){
    T[i].r = T[i].l = T[i].p = NIL;
  }
  for(i=0; i<n; i++){
    scanf("%d%d%d", &id, &l, &r);
    maketree(id, l, r);
  }
  print();
  return 0;
}