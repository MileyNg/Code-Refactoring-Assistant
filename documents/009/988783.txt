#include<iostream>
#include<cstdio>
#include<set>
#include<algorithm>
#include<vector>
#define X first
#define Y second
#define pb push_back
using namespace std;
typedef pair<double,double> pii;

set<double> yy;
set<double>::iterator it,ite;
double w,h;
int n;
vector<pii> pos;

void plot(vector<pii> v){
  int i,j;
  for(i=0;i<v.size();i++){
    for(j=i+1;j<v.size();j++){
      double tmp;
      tmp=v[i].Y-v[i].X*double(v[j].Y-v[i].Y)/(v[j].X-v[i].X);
      //       cout<<i<<","<<j<<","<<tmp<<endl;
      if(0<=tmp && tmp<= h)
	yy.insert(tmp);
    }
  }//cout<<"!"<<yy.size();
  /*  for(i=0;i<pos.size();i++)
      if(pos[i].X==0)yy.erase(pos[i].Y);*/
}

double solve(double y){
  vector<double> a;
  //  cout<<"["<<y<<endl;
  for(int i=0;i<2*n;i++){
    if(pos[i].X)a.pb((pos[i].Y-y)/pos[i].X);
    else a.pb(10000*(pos[i].Y-y));
    // cout<<a.back()<<" ";
  }//cout<<endl;
  sort(a.begin(),a.end());
  double re=0;
  re+=max(0.0,min(h,y+w*a[n]));
  //  cout<<re<<" ";
  re-=max(0.0,min(h,y+w*a[n-1]));
  //   cout<<re<<endl;
  return re;
}

int main(){
  int i,j,k;
  while(1){
    cin>>w>>h>>n;
    if(w+h+n==0)
      break;
    vector<pii> pos2;
    pos.clear();
    pos.resize(2*n);
    for(i=0;i<n*2;i++){
      cin>>pos[i].X>>pos[i].Y;
      if(pos[i].X==0)
	pos[i].X=1e-10;
    }
    pos2=pos;
    pos2.pb(pii(w,0));
    pos2.pb(pii(w,h));
    yy.clear();
    yy.insert(0),yy.insert(h);
    plot(pos2);
    vector<double> res,d;
    d.pb(0);
    for(it=yy.begin();it!=yy.end();it++){
      res.pb(solve(*it));
      d.back()+=*it;
      d.pb(-*it);
    }
    double re=0;
    for(i=1;i<res.size();i++){
      re+=(res[i]+res[i-1])*d[i]/2;
      //     cout<<"("<<res[i-1]<<"+"<<res[i]<<")*"<<d[i]<<"/2\n";
    }
    cout<<re/h/h<<endl;
  }
}