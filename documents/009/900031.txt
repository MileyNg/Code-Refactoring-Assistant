import math

def make_plist(n):
	sqrt = int(math.sqrt(n))
	plist = [1]*(sqrt+3)
	plist[0] = 0
	for i in range(2,int(math.sqrt(sqrt))+2):
		if plist[i]:
			plist[2*i::i] = [0 for x in range(2*i,sqrt+3,i)]
	return plist

def get_pfact(plist,n):
	pfact = []
	sqrt = int(math.sqrt(n))
	for i in range(2,sqrt+1):
		if plist[i] and n%i == 0:
			pfact.append(i)
	if p[n] == 1: pfact.append(n)
	return pfact

def get_phai(n,pfacts):
	phai = n
	for pfact in pfacts:
		phai *= (1-1/float(pfact))
	return int(phai)

# main	
n = int(raw_input())
plist = make_plist(n)
pfacts = get_pfact(plist,n)
print get_phai(n,pfacts)