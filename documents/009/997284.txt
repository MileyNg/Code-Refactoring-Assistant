#include <iostream>
#include <map>
#include <vector>
#include <stack>
#include <algorithm>
#include <vector>
using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
#define loop(i,a,b) for(int i=(a); i<int(b); i++)
#define rep(i,b) loop(i,0,b)

int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
int h,w,c;

inline bool in(int x, int y){
    return 0<=x&&0<=y&&y<h&&x<w;
}

int dfs_c(vvi& g, int x, int y){
    if(!in(x,y)) return 0;
    if(g[y][x]==c){
        int res=1;
        g[y][x]=-1;
        rep(i,4){
            res+=dfs_c(g,x+dx[i],y+dy[i]);
        }
        return res;
    } else return 0;
}

int count(vvi g){
    return dfs_c(g,0,0);
}

void dfs_f(vvi& g, int ic, int fc, int x, int y){
    if(!in(x,y)) return;
    if(g[y][x]==ic){
        if(g[y][x]==fc) return;
        g[y][x]=fc;
        rep(i,4){
            dfs_f(g, ic, fc, x+dx[i],y+dy[i]);
        }
    }
}

void flip(vvi& g, int fc){
    dfs_f(g,g[0][0],fc,0,0);
}

void print(vvi const& v){
    rep(i,v.size()){
        rep(j,v[0].size()){
            cout << v[i][j]+1 << " ";
        }cout << endl;
    }cout << endl;
}

int main(){
    while(cin>>h>>w>>c && h+w+c){
        c--;
        vvi g(h,vi(w));
        rep(i,h)rep(j,w){
            cin>>g[i][j];
            g[i][j]--;
        }
        int end = 7776; // 6**5

        int m = 0;
        rep(mask,end){
            int t=mask;
            vvi h=g;
            // cout << mask << endl;
            rep(i,5){
                if(h[0][0]!=t%6){
                    flip(h,t%6);
                }
                // print(h);
                t/=6;
            }
            m = max(m,count(h));
        }
        cout << m << endl;
    }
}