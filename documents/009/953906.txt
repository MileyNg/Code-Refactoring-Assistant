#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define rep(i, n) for(int i=0; i<(n); ++i)
const int inf = 1 << 29;

int n, m, s, g1, g2;
vector<vector<int> > cost;

int solve(){
    rep(k, n)rep(i, n)rep(j, n){
        cost[i][j] = min(cost[i][j], cost[i][k] + cost[k][j]);
    }
    int res = inf;
    rep(i, n)res = min(res, cost[s-1][i] + cost[i][g1-1] + cost[i][g2-1]);
    return res;
}

int main(){
    while(cin >> n >> m >> s >> g1 >> g2, n|m|s|g1|g2){
        cost.assign(n, vector<int>(n, inf));
        rep(i, n)cost[i][i] = 0;
        rep(i, m){
            int b1, b2, c;
            cin >> b1 >> b2 >> c;
            cost[b1-1][b2-1] = c;
        }
        cout << solve() << '\n';
    }
    return 0;
}