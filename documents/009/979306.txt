#include <iostream>
#include <queue>
using namespace std;
 
struct pos{
    int x;
    int y;
    int dis;
};
 
int main(){
    int w, h;
    while(cin >> w >> h){
        if(w == 0 || h == 0) break;
        int map[65][65];
        for(int i = 0; i < 65; i++){
            for(int j = 0; j < 65; j++){
                map[j][i] = 1;
            }
        }
 
        for(int i = 1; i <= h; i++){
            for(int j = 1; j <= w; j++){
                map[i*2-1][j*2-1] = 0;
            }
        }
 
        int l = 1;
        for(int i = 1; i <= h*2-1; i++){
            if(i % 2 == 1){ 
                for(int j = 1; j <= w-1; j++){
                    int input;
                    cin >> input;
                    map[l*2-1][j*2] = input;
                }
            }else{
                for(int j = 1; j <= w; j++){
                    int input;
                    cin >> input;
                    map[l*2][j*2-1] = input;
                }
                l++;
            }
        }
 
        queue<pos> q;
        map[1][1] = 1;
        pos p;
        p.x = 1;
        p.y = 1;
        p.dis = 1;
        q.push(p);
        int x1[] = {-1, 0, 1, 0}, y1[] = {0, -1, 0, 1};
        while(!q.empty()){
            p = q.front();
            q.pop();
            for(int i = 0; i < 4; i++){
                pos p1 = p;
                p1.x += x1[i]; p1.y += y1[i];
                if(!map[p1.x][p1.y]){
                    //p1.x += x1[i]; p1.y += y1[i];
                    p1.dis++;
                    map[p1.x][p1.y] = p1.dis;
                    q.push(p1);
                }
            }
        }
 
        int ans = (map[h*2-1][w*2-1] + 1) /2;
 
        cout << ans << endl;
 
    }
}