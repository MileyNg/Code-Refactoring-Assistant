#include <bits/stdc++.h>

struct Point{
  double x,y;

  Point(double x = 0,double y = 0) : x(x), y(y) {}

  Point operator + (const Point &p)const{
    return Point(x + p.x , y + p.y);
  }

  Point operator - (const Point &p)const{
    return Point(x - p.x , y - p.y);
  }

  Point operator * (const double &k)const{
    return Point(x * k , y * k);
  }

  Point operator / (const double &k)const{
    return Point(x / k , y / k);
  }
  double norm(){
    return x*x + y*y;
  }
  double dot(const Point &p)const{
    return x*p.x + y*p.y;
  }
};
typedef Point Vector;

struct Segment{
  Vector s, t;

  Segment(){}
  Segment(Vector s, Vector t) : s(s), t(t) {}

  Point projection(Point p){
    Vector base = t - s;
    double t = (p-s).dot(base) / base.norm();
    return s + base*t;
  }
};

int main(){
  Point p1, p2, p3;
  int q;

  std::cin >> p1.x >> p1.y >> p2.x >> p2.y >> q;
  Segment s = Segment(p1, p2);
  for(int i = 0 ; i < q ; i++){
    std::cin >> p3.x >> p3.y;
    Point p = s.projection(p3);
    printf("%.10f %.10f\n",p.x ,p.y);
  }

  return 0;
}