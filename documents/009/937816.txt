#include <stdio.h>
#include <ctype.h>
#include <string.h>

void q_sort(int nums[], int f_num, int e_num){
    
    int i, j, pbt, tmp;
    
    i = f_num;
    j = e_num;
    
    pbt = nums[(f_num+e_num) / 2];
    
    while (1) {
        
        while (nums[i] < pbt) {
            i++;
        }
        while (nums[j] > pbt) {
            j--;
        }
        if (i >= j) {
            break;
        }
        
        tmp = nums[i];
        nums[i] = nums[j];
        nums[j] = tmp;
        i++;
        j--;
    }
    
    if (f_num < i - 1) {
        q_sort(nums, f_num, i-1);
    }
    if (e_num > j + 1) {
        q_sort(nums, j+1, e_num);
    }
    
    
}

int search(int num[], int f_num, int e_num, int border){
        
    int i;
    
    i = (f_num+e_num)/2 ;
    
    if (f_num == i || e_num == i) {
        if (num[i] != border) {
            return 0;
        }
    }
    
    
    if (num[i] == border) {
        return 1;
    }
    else if(num[i] > border){
        return  search(num, f_num, i-1, border);
    }
    else {
        return search(num, i+1, e_num, border);
    }
        
    
    
    return 0; 
}



int main(void){
	
    int i, c;
    
    int n, s[10000000];
    int q, t[10000000];
    
    c = 0;
	
    scanf("%d", &n);
    
    for (i = 0; i < n; i++) {
        scanf("%d", &s[i]);
    }    
    
    scanf("%d", &q);
    
    for (i = 0; i < q; i++) {
        scanf("%d", &t[i]);
    } 
    
    q_sort(s, 0, n-1);
    
    
    for (i = 0; i < q; i++) {
        c += search(s, 0, n-1, t[i]);
    }
    
    
    printf("%d\n", c);
    
	
	return 0;
    
}