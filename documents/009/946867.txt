#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <algorithm>	// require sort next_permutation count __gcd reverse etc.
#include <cstdlib>	// require abs exit atof atoi 
#include <cstdio>		// require scanf printf
#include <functional>
#include <numeric>	// require accumulate
#include <cmath>		// require fabs
#include <climits>
#include <limits>
#include <cfloat>
#include <iomanip>	// require setw
#include <sstream>	// require stringstream 
#include <cstring>	// require memset
#include <cctype>		// require tolower, toupper
#include <fstream>	// require freopen
#include <ctime>		// require srand
#define rep(i,n) for(int i=0;i<(n);i++)
#define ALL(A) A.begin(), A.end()

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

int stoi (string s ){
	stringstream ss (s );
	int res;
	ss >> res;
	return res;
}

string itos (int n ){
	stringstream ss;
	ss << n;
	return ss.str();
}
	
int main()
{
	ios_base::sync_with_stdio(0);
	int Q; cin >> Q;

	while (Q--){
		string n = ""; cin >> n;
		int res = 0;
		set<int> same; same.clear();
		while (n.length() != 1 ){
			int cur = 0;
			rep (i, n.length() - 1 ){
 				string s = n.substr (0, i+1), t = n.substr(i+1);
				int sn = stoi (s ), tn = stoi (t );
//				cerr << "sn: " << sn << " tn: " << tn << endl;
				cur = max (cur, sn*tn );
			} // end rep
			if (!same.count (cur ) ){
				same.insert(cur );
			}else{
				res = -1;
				break;
			} // end if
			n = itos (cur );
			res++;
		} // end while
		cout << res << endl;

	} // end while
		
	return 0;
}