#include<iostream>
#include<string>
#include<vector>
using namespace std;

int main(){
  int n;
  cin >>n;
  cin.ignore();
  for(int i=0;i<n;i++){
    string str;
    int cn,pos;
    if(!getline(cin,str)){
      str = "";
    }
    cin >> cn;
    pos = 0;
    for(int j=0;j<cn;j++){
      string command,target;
      char ch;
      cin >> command;
      getline(cin,target);
      target.erase(0,1);
      if(command == "forward"){
        if(pos<str.size()){
          if(target == "word"){
            int judge = 0;
            while(pos<str.size()){
              if(str[pos]!=' '){
                judge = 1;
                break;
              }
              pos++;
            }
            if(judge==1){
              do{
                pos++;
              }while(pos<str.size()&&str[pos]!=' ');
            }
          }else{
            pos++;
          }
        }
      }else if(command == "delete"){
        if(str.size()!=0&&pos!=str.size()){
          if(target == "word"){
            int judge = 0;
            int temp = pos;
            while(temp<str.size()){
              if(judge==0){
                if(str[temp]!=' '){
                  judge = 1;
                }
              }else{
                if(str[temp]==' '){
                  str.erase(pos,temp-pos);
                  break;
                }
              }
              temp++;
            }
            
          }else{
            str.erase(pos,1);
          }
        }
      }else if(command == "backward"){
        if(pos>0){
          if(target == "word"){
            int judge = 0;
            while(pos>=0){
              if(str[pos]!=' '){
                judge = 1;
                break;
              }
              pos--;
            }
            if(judge==1){
              do{
                pos--;
              }while(pos>0&&str[pos]!=' ');
            }
          }else{
            pos--;
          }
        }
      }else if(command == "insert"){
        target = target.substr(1,target.size()-2);
        str.insert(pos,target);
        pos += target.size();
      }
      //str.insert(pos,"^");
      //cout << str << endl;
      //str.erase(pos,1);
    }
    str.insert(pos,"^");
    cout << str << endl;
  }
  
  return 0;
}