#include <map>
#include <set>
#include <list>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
 
#define mp       make_pair
#define pb       push_back
#define all(x)   (x).begin(),(x).end()
#define rep(i,n) for(int i=0;i<(n);i++)
 
using namespace std;
 
typedef    long long          ll;
typedef    unsigned long long ull;
typedef    vector<bool>       vb;
typedef    vector<int>        vi;
typedef    vector<vb>         vvb;
typedef    vector<vi>         vvi;
typedef    pair<int,int>      pii;
 
const int INF=1<<29;
const double EPS=1e-9;
 
const int dx[]={1,0,-1,0},dy[]={0,-1,0,1};
bool flag[55];
// bool bad[55][55];
int booat[55][55];
int n,k;
void show(){
	for(int i =0;i < 50;i++){
		for(int j = 0;j < 50;j++){
			cout<<booat[i][j]<<endl;
		}
	}
}
bool check(int x,int y){
	for(int i =1;i <= k;i++){
		if(booat[i][x]&&booat[i][y]){
			return true;
		}
	}
	return false;
}


int main(){
	for(int i =0;i < 55;i++){
		flag[i] =false;
		for(int j =0;j < 55;j++){
			booat[i][j] =0;
			// bad[i][j] =false;
		}
	}
	cin>>n>>k;
	// vector<int> boat[55];
	for(int i =1;i <= k;i++){
		int m;
		cin>>m;
		for(int j =0;j < m;j++){
			int y;
			cin>>y;
			booat[i][y] =1;
			// cout <<booat[i][y]<<endl;
			// cout <<"hoge"<<endl;
		}
	}
	// show();
	int r;
	cin>>r;
	for(int i =0;i < r;i++){
		int x,y;
		cin>>x>>y;
		// cout <<"hoge"<<endl;
		if((!flag[x]||!flag[y])&&check(x,y)){
			flag[x]=true;
			flag[y] =true;
			// cout <<"hoge"<<endl;
		}
	}
	int sum = 0;
	for(int i =1;i <= n;i++){
		if(flag[i]){
			sum++;
		}
	}
	cout <<sum<<endl;
	return 0;
}