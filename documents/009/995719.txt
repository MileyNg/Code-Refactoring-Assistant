#include <stdio.h>
#include <math.h>
#include <bitset>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <cstring>
#include <string>
#include <sstream>
#include <algorithm>
#include <iomanip>
#include <iostream>

#define VARIABLE(x) cerr << #x << "=" << x << endl
#define BINARY(x) cerr << #x << "=" << static_cast<bitset<16> >(x) << endl;
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define REP(i,m,n) for (int i=m;i<(int)(n);i++)
#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))

const int INF = 10000000;
typedef double D;
const D EPS = 1e-8;
const double PI = 3.14159;
int dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};
using namespace std;
typedef pair<int, int> II;

/** Problem0065 : Trading **/
int main()
{
	string str;
	pair<map<int, int>, map<int, int> > list;
	while (getline(cin, str), str!="") {
		stringstream ss(str);
		int n; ss>>n;
		list.first[n]++;
	}
	while (getline(cin, str)) {
		stringstream ss(str);
		int n; ss>>n;
		list.second[n]++;
	}
	
	map<int, int>::iterator it = list.first.begin();
	for (;it!=list.first.end(); it++) {
		if (it->second>0 && list.second[it->first]>0) {
			cout << it->first << " " << it->second+list.second[it->first] << endl;
		}
	}
}