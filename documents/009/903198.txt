#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <sstream>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <numeric>
#include <cctype>
#include <tuple>

#ifdef _MSC_VER
#include <agents.h>
#endif

#define FOR(i, a, b) for(int i = (a); i < (int)(b); ++i)
#define rep(i, n) FOR(i, 0, n)
#define ALL(v) v.begin(), v.end()
#define REV(v) v.rbegin(), v.rend()
#define MEMSET(v, s) memset(v, s, sizeof(v))
#define X first
#define Y second

using namespace std;

typedef long long ll;
typedef pair<int, int> P;

const int N = 100;
int v[N][N];

vector<int> G[N];

int used[N];

int dfs(int v){
	used[v] = 1;
	int res = 0;
	for (auto &to : G[v]){
		if (used[to]) continue;
		res = max(res, dfs(to)+1);
	}
	used[v] = 0;
	return res;
}

int main(){
	int n;
	while(cin >> n, n){
		MEMSET(v, 0);
		rep(i, N) G[i].clear();
		rep(i, n){
			int x, y;
			cin >> x >> y;
			--x, --y;
			v[x][y] = v[y][x] = 1;
		}
		rep(i, N) rep(j, N) if (v[i][j]) G[i].push_back(j);
		int ans = 2;
		rep(i, N) ans = max(ans, dfs(i)+1);
		cout << ans << endl;
	}

	return 0;
}