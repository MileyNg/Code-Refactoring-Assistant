#include <vector>
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <utility>
#include <functional>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <climits>
#include <cassert>
#include <memory>
#include<time.h>
using namespace std;
inline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}
template<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long ll;
#define ALL(a) (a).begin(),(a).end()
#define RALL(a) (a).rbegin(),(a).rend()
#define EXIST(s,e) ((s).find(e)!=(s).end())
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define REP(i,n) FOR(i,0,n)
const double EPS = 1e-9;
const double PI  = acos(-1.0);

int numdigits(ll n){
	int ret=0;
	while(n){
		n/=10;
		ret++;
	}
	return ret;
}

bool lower(ll pos,ll num,ll &cnt){
	cnt=0;

	int dg=numdigits(num);
	REP(i,dg-1){
		cnt+=pow(10LL,i)*(i+1)*9;
	}

	cnt+=(num-(pow(10LL,dg-1)-1))*dg;

	return pos<=cnt;
}

int main(){
	ll n,k;
	while(cin>>n>>k,n|k){
		int lb=-1,ub=1<<30;
		while(ub-lb>1){
			int mid=(lb+ub)/2;
			ll cnt;
			if(lower(n,mid,cnt)){
				ub=mid;
			}else{
				lb=mid;
			}
		}

		ll cnt;
		lower(n,ub,cnt);

		ostringstream oss;
		REP(i,100){
			oss<<ub+i;
		}
		string s=oss.str();
		REP(i,k){
			cout<<s[numdigits(ub)-1-(cnt-n)+i];
		}
		cout<<endl;
	}
}