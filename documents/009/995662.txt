#include <iostream>
#include <math.h>


using namespace std;

/*2点[(x1,y1),(x2,y2)]を入力し二点を通る直線ax+by+cの(a,b,c)を返す,  */
/*x1==x2ならfalseを返す*/
/*falseならばx=cの形の直線*/
void straight_line_passing_through_the_two_points(double x1, double y1, double x2, double y2, double *a, double *b, double *c){
    *a=(y2-y1);
    *b=-(x2-x1);
    *c=y2*(x2-x1)-x2*(y2-y1);
}


/*(x,y)を通るa1x+b1y+c1=0に垂直な直線a2x+b2y+c2=0を返す*/
void vertical_straight_line(double x, double y, double a1, double b1, double c1, double *a2, double *b2, double *c2){
    *a2 = -b1;
    *b2 = a1;
    *c2 = b1*x - a1*y;
}

/*2直線 a1x+b1y+c1=0 a2x+b2y+c2=0 の交点 (x,y)を返す*/
/*2直線が平行であるならばfalseを返す*/

bool intersection_and_parallel(double a1, double b1, double c1, double a2, double b2, double c2, double *x, double *y){
    if(a1*b2==a2*b1)return false;//平行の判定
    
    *x = (b1*c2-b2*c1)/(a1*b2-a2*b1);
    *y = (a2*c1-a1*c2)/(a1*b2-a2*b1);
    
    return true;
}

/*2点(x1,y1), (x2,y2) の距離*/
bool distance_between_the_two_pointss(double x1,double y1, double x2, double y2){
    return  sqrt(fabs((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));
}





int main(int argc, const char * argv[])
{
    double x1,x2,y1,y2,a,b,c;
    cin>>x1>>y1>>x2>>y2;
    
    straight_line_passing_through_the_two_points(x1, y1, x2, y2, &a, &b, &c);
    
    int q;
    cin>>q;
    for(int i=0; i<q; i++){
        double x,y,a2,b2,c2;
        cin>>x>>y;
        vertical_straight_line(x, y, a, b, c, &a2, &b2, &c2);
        //cout<<a<<b<<c<<endl;
        //cout<<a2<<b2<<c2<<endl;
        double ans_x, ans_y;
        intersection_and_parallel(a, b, c, a2, b2, c2, &ans_x, &ans_y);
        cout<<ans_x<<" "<<ans_y<<endl;
    }
    
}