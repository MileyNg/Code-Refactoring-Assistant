#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <climits>
#include <ctime>
#include <queue>
#include <stack>
#include <algorithm>
#include <list>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <deque>
#include <complex>
#include <string>
#include <iomanip>
#include <sstream>
#include <bitset>
#include <valarray>
#include <iterator>
using namespace std;
typedef long long int ll;
typedef unsigned int uint;
typedef unsigned char uchar;
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef vector<int> vi;

#define REP(i,x) for(int i=0;i<(int)(x);i++)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();i++)
#define RREP(i,x) for(int i=(x);i>=0;i--)
#define RFOR(i,c) for(__typeof((c).rbegin())i=(c).rbegin();i!=(c).rend();i++)
#define ALL(container) container.begin(), container.end()
#define SZ(container) ((int)container.size())

const int INF = 1<<28;
const double EPS = 1e-8;
const int MOD = 1000000007;


int n, m, t;
ll f[31];
ll g[51];

int solve(){
	REP(i, n) g[i] = 1LL << i;
	for(int i=1;i<31;i++){
		ll to = 0LL;
		REP(j, n) if(1&(f[i]>>j)) to |= g[j];
		if(to == (1LL<<n)-1) return i;
		REP(j, n) if(1&(f[i]>>j)) g[j] = to;
	}
	return -1;
}

main(){
	int i,j;
	while(cin >> n, n){
		memset(f, 0, sizeof(f));
		REP(i, n){
			cin >> m;
			REP(j, m){
				cin >> t;
				f[t] |= 1LL << i;
			}
		}
		cout << solve() << endl;
	}
	return 0;
}