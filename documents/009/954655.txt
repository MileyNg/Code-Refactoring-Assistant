#include<iostream>
#include<sstream>
#include<map>
#include<vector>
#include<algorithm>
using namespace std;

struct SGreater{
  bool operator() (pair<int, string> a,pair<int, string> b)
  {
    if(a.first!=b.first)
      return a.first>b.first;
    else
      return a.second<b.second;
  }
};

int main()
{
  int n;
  for(;cin>>n,n;)
    {
      vector<pair<int, string> >data;
      map<string,int> hash;
      string aa;
      getline(cin,aa);
      for(int i=0;i<n;i++)
	{
	  string str;
	  getline(cin,str);
	  //	  cout<<str<<endl;
	  istringstream os(str);
	  string buf;
	  for(;os>>buf;)
	    {
	      if(hash.find(buf)==hash.end())
		{
		  hash[buf]=data.size();
		  data.push_back(make_pair(1,buf));
		  //		  cout<<"not Hit"<<endl;
		}
	      else
		{
		  
		  data[hash[buf]].first++;
		  //		  cout<<"Hit"<<endl;
		}
	    }	 
	}
      sort(data.begin(),data.end(),SGreater());
      char top;
      //      int max=-1;
      int cnt=0;
      cin>>top;
      for(int i=0;i<data.size();i++)
	{
	  if(cnt>=5)
	    break;
	  if(data[i].second[0]==top)
	    {
	      if(cnt!=0)
		cout<<" ";
	      cout<<data[i].second;
	      // max=data[i].first;
	      cnt++;
	    }
	  
	}
      if(cnt==0)
	cout<<"NA";
      cout<<endl;
    }
}