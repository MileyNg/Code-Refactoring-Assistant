#include <iostream>
#include <vector>
#include <algorithm>
#include <cfloat>
using namespace std;

struct C {
  int c;
  int d;
  int w;
  bool operator<(const C &obj) const {
    return d<obj.d;
  }
};

int n;
vector<int> r, rbuf;
C kura[15];

double cost() {
  int w = 0;
  double c = 0.0;
  for (int i=0; i<n-1; i++) {
    w += kura[r[i]].w;
    c += abs(kura[r[i+1]].d - kura[r[i]].d)*(w+70)/2000.;
  }
  return c;
}

int main() {
  double c, m;
  cin >> n;
  for (int i=0; i<n; i++) {
    cin >> kura[i].c >> kura[i].d >> kura[i].w; 
    kura[i].w *= 20;
  }
  sort(kura, kura+n);

  m = DBL_MAX;
  r.reserve(n);
  rbuf.resize(n);
  for (int x=0; x<2; x++) {
    for (int i=0; i<n; i++) {
      r.clear();
      if (!x) {
        for (int j=0; j<n; j++) {
          if (i == j) continue;
          r.push_back(j);
        }
      } else {
        for (int j=n-1; j>=0; j--) {
          if (i == j) continue;
          r.push_back(j);
        }
      }
      r.push_back(i);
      c = cost();
      if (c < m) {
        m = c;
        for (int i=0; i<n; i++) {
          rbuf[i] = r[i];
        }
      }
    }
  }

  for (int i=0; i<n; i++) {
    if (i) cout << " ";
    cout << kura[rbuf[i]].c;
  }
  cout << endl;

  return 0;
}