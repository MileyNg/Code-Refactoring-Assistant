#include <iostream>
#include <iomanip>
#include <sstream>
#include <vector>
#include <array>
#include <list>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <string>
#include <algorithm>
#include <numeric>
#include <utility>
#include <cstdlib>
#include <ctime>
#include <cstdint>
#include <cmath>

#define FOR(i,k,n)  for(int i = (k);i < (n);++i)
#define REP(i,n)    FOR(i,0,n)
#define EACH(i,x)   for(auto & i : x)
#define ALL(x)      begin(x),end(x)

using namespace std;

typedef vector<int> vecint;

constexpr int MaxVal=16384;
int tree[MaxVal];
int read(int idx){
  int sum = 0;
  while (idx > 0){
    sum += tree[idx];
    idx -= (idx & -idx);
  }
  return sum;
}
void update(int idx ,int val){
  while (idx <= MaxVal){
    tree[idx] += val;
    idx += (idx & -idx);
  }
}
int bs(int i){
  int k=8192;
  int j=0;
  while(k){
    if(read(j+k)<i)
      j+=k;
    k/=2;
  }
  return j+1;
}

int main()
{
  while(true){
    int n,k,m;cin>>n>>k>>m;
    if(!(n||k||m))break;
    REP(i,16384)tree[i]=0;
    REP(i,n)update(i+1,1);
    int p=m;
    REP(i,n-1){
      update(p,-1);
      int l=read(p);
      int rk=k%(n-i-1);
      if(l+rk==n-i-1 || (l==0&&((k%(n-i-1)==0))))
        p=bs(n-i-1);
      else{
        int c=(l+rk)%(n-i-1);
        p = bs(c);
      }
    }
    cout<<p<<endl;
  }
  return 0;
}