#include<bits/stdc++.h>

#define REP(i,s,n) for(int i=s;i<n;i++)
#define rep(i,n) REP(i,0,n)
#define IINF (INT_MAX)
#define EPS (1e-7)
#define equals(a,b) (fabs((a)-(b))<EPS)

using namespace std;

struct Data{
  double theta;
  int cost;
  Data(double theta=IINF,int cost=IINF):theta(theta),cost(cost){}
  bool operator < (const Data& a)const{
    if(equals(theta,a.theta)) return cost < a.cost;
    return theta > a.theta;
  }
};

int H,W;
char f[619][619];

int main(){
  cin.tie(0);
  std::ios::sync_with_stdio(0);
  cin >> H >> W;
  rep(i,H)rep(j,W)cin >> f[i][j];

  vector<Data> vec;
  rep(i,H)rep(j,W){
    if( f[i][j] == '#' && ( j-1 <  0 || f[i][j-1] == '.' ) && ( i-1 <  0 || f[i-1][j] == '.' ) ) vec.push_back(Data(atan2(H-i,j),1));
    if( f[i][j] == '#' && ( j+1 >= W || f[i][j+1] == '.' ) && ( i+1 >= H || f[i+1][j] == '.' ) ) vec.push_back(Data(atan2(H-i-1,j+1),-1));
    if( f[i][j] == '#' && ( j+1 <  W && f[i][j+1] == '#' ) && ( i+1 <  H && f[i+1][j] == '#' ) ) vec.push_back(Data(atan2(H-i-1,j+1),1));
    if( f[i][j] == '#' && ( j-1 >= 0 && f[i][j-1] == '#' ) && ( i-1 >= 0 && f[i-1][j] == '#' ) ) vec.push_back(Data(atan2(H-i,j),-1));
  }

  sort(vec.begin(),vec.end());

  int area = 1, ans = 1;
  rep(i,vec.size())ans = max(ans,(area+=vec[i].cost));
  cout << ans << endl;

  return 0;
}