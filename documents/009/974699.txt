#include <iostream>
#include <sstream>
#include <string>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cassert>

using namespace std;

#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)
#define REP(i,n) FOR(i,0,n)
#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)

template<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<" "; cout<<endl; }

typedef long long ll;
const int INF = 100000000;
const double EPS = 1e-6;
const int MOD = 1000000007;

int main(){
	double D;
	while(cin>>D,D){
		double px,py,vx,vy;
		cin>>px>>py>>vx>>vy;
		// (-px,-py) (vx, vy)
		if(abs((-px) * vy - (-py) * vx) < 1e-6){
			double d;
			assert(abs((-px)*vx+(-py)*vy) > EPS);
			if(-px * vx + (-py) * vy > -EPS){
				d = sqrt(px*px + py*py);
			}else{
				d = 2.0 - sqrt(px*px + py*py);
			}
			if(d < D + 1e-6){
				printf("%0.6lf\n", d);
			}else{
				cout<<"impossible"<<endl;
			}
		}else{
			cout<<"impossible"<<endl;
		}
	}
	return 0;
}