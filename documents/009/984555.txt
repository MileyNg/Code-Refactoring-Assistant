#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
#define INF (1<<24)

bool isNum(char ch){return ('0'<=ch&&ch<='9');}

struct calcStr{
  string s;
  int pos,len;
  bool flag;
  void init(){ pos=0;len=s.size(); flag=false; }

  int head2Num(){
    int res=0;
    while(pos<len){
      if(isNum(s[pos])){
	res*=10;
	res+=(s[pos]-'0');
	pos++;
      }else break;
    }
    return res;
  }
  
  int getNum(){
    if(s[pos]=='('){
      pos++;
      return getAns();
    }
    int res=head2Num();
    if(pos==len)return res;
    else if(s[pos]=='*'){
      pos++;
      return res*getNum();
    }else if(s[pos]=='/'){
      pos++;
      return res/getNum();
    }
    return res;
  }
  
  int getAns(){
    int res=getNum(),num;
    while(1){
      if(pos==len)break;
      if(s[pos]==')'){pos++;break;}
      char ch=s[pos++];
      num=getNum();
      if(ch=='+')res+=num;
      else if(ch=='-')res-=num;
    }
    if(flag)return INF;
    else return res;
  }
};

int main(){
  int Tc;cin>>Tc;
  calcStr a;
  while(Tc--){
    cin>>a.s;
    a.s=a.s.substr(0,a.s.size()-1);
    a.init();
    cout<<a.getAns()<<endl;
  }
  return 0;
}