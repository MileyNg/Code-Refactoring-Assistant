#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define rep(i, n) for(int i=0 ;i<(n); ++i)

class Dice{ //top, face, right, left, back, bottom
    vector<int> side;
public:
    Dice():side({1, 2, 3, 4, 5, 6}){}
    Dice(int t, int f){
        Dice d;
        for(int i=0; i<6; (i&1? d.yroll(): d.xroll()), ++i){
            for(int j=0; j<4; d.zroll(), ++j){
                if(d[0] == t && d[1] == f){
                    *this = d;
                    return;
                }
            }
        }
    }
    int operator[](size_t pos)const{
        return side[pos];
    }
    void xroll(int k = 1){
        for(k%=4; k--; )roll(0, 1, 5, 4);
    }
    void yroll(int k = 1){
        for(k%=4; k--; )roll(0, 2, 5, 3);
    }
    void zroll(int k = 1){
        for(k%=4; k--; )roll(1, 3, 4, 2);
    }
private:
    void roll(int a, int b, int c, int d){
        swap(side[a], side[b]);
        swap(side[b], side[c]);
        swap(side[c], side[d]);
    }
};

const int dx[] = {-1, 0, 1, 0}, dy[] = {0, -1, 0, 1};

vector<vector<vector<int> > > num;
vector<vector<int> > h;

void fall(Dice d){
    for(int x=50, y=50, dir=-1; ; x+=dx[dir], y+=dy[dir], dir=-1){
        for(int i=1; i<=4; ++i){
            if(d[i] < 4 || h[x][y] <= h[x+dx[i-1]][y+dy[i-1]])continue;
            if(dir < 0 || d[dir] < d[i])dir = i;
        }
        if(dir < 0){
            num[x][y][h[x][y]++] = d[0];
            break;
        }
        switch(--dir){
            case 0: d.xroll(3); break;
            case 1: d.yroll(3); break;
            case 2: d.yroll(1); break;
            case 3: d.xroll(1); break;
        }
    }
}

int main(){
    int n;
    while(cin >> n, n){
        num.assign(100, vector<vector<int> >(100, vector<int>(100, 0)));
        h.assign(100, vector<int>(100, 0));
        while(n--){
            int t, f;
            cin >> t >> f;
            fall(Dice(t, f));
        }
        vector<int> cnt(6);
        rep(i, 100)rep(j, 100)if(h[i][j])cnt[num[i][j][h[i][j] - 1] - 1]++;
        rep(i, 6)cout << cnt[i] << (i != 5? ' ': '\n');
    }
    return 0;
}