#include <iostream>
#include <vector>
#include <queue>

using namespace std;

void solve()
{
	int N;
	cin >> N;
	vector<int> field(N);
	for(int i = 0; i < N; ++i)
	{
		cin >> field[i];
	}
	queue<int> Que;
	Que.push(0);
	int count = 1;
	bool loopField[100001] = {false};
	while(true)
	{
		queue<int> NextQue;
		while(!Que.empty())
		{
			for(int i = 1; i <= 6; ++i)
			{
				int current = Que.front() + i;
				if(current >= N - 1)
				{
					goto END;
				}
				if(loopField[current])
				{
					continue;
				}
				bool used[100001] = {false};
				bool loopFlag = false;
				while(field[current] != 0)
				{
					if(used[current])
					{
						loopFlag = true;
						loopField[current] = true;
						break;
					}
					used[current] = true;
					current += field[current];
					if(current >= N - 1)
					{
						goto END;
					}
				}
				if(!loopFlag)
				{
					NextQue.push(current);
				}
			}
			Que.pop();
		}
		while(!NextQue.empty())
		{
			Que.push(NextQue.front());
			NextQue.pop();
		}
		++count;
	}
END:
	cout << count << endl;
}

int main()
{
	solve();
	return(0);
}