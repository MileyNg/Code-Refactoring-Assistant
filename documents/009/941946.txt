#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define between(a,x,b) ((a)<=(x)&&(x)<=(b))
#define MAX_N 100
#define INF 1 << 30

using namespace std;


int cost[MAX_N][MAX_N];
int mincost[MAX_N];
bool used[MAX_N];
int n, m;

int prim(){
  for(int i = 0; i < n; ++i){
    mincost[i] = INF;
    used[i] = false;
  }

  mincost[0] = 0;
  int res = 0;

  while(true){
    int v = -1;
    for(int u = 0; u < n; ++u)
      if(!used[u] && (v == -1 || mincost[u] < mincost[v])) v = u;

    if(v == -1) break;
    used[v] = true;
    res += mincost[v];

    for(int u = 0; u < n; ++u)
      mincost[u] = min(mincost[u], cost[v][u]);
  }
  return res;
}

int main(){
  int from, to, c;
  while(scanf("%d", &n) && n){
    rep(i, n) rep(j, n) cost[i][j] = INF;
    scanf("%d", &m);
    rep(i, m){
      scanf("%d,%d,%d", &from, &to, &c);
      cost[from][to] = cost[to][from] = c;
    }
    printf("%d\n", prim()/100-(n-1));
  }
  return 0;
}