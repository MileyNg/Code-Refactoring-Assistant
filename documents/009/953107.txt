#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <algorithm>	// require sort next_permutation count __gcd reverse etc.
#include <cstdlib>	// require abs exit atof atoi 
#include <cstdio>		// require scanf printf
#include <functional>
#include <numeric>	// require accumulate
#include <cmath>		// require fabs
#include <climits>
#include <limits>
#include <cfloat>
#include <iomanip>	// require setw
#include <sstream>	// require stringstream 
#include <cstring>	// require memset
#include <cctype>		// require tolower, toupper
#include <fstream>	// require freopen
#include <ctime>		// require srand
#define rep(i,n) for(int i=0;i<(n);i++)
#define ALL(A) A.begin(), A.end()

using namespace std;

typedef long long ll;
typedef pair<int, int> P;
const int MAX_N = 20005;
bool com[MAX_N];
struct DATA{
	int t, s, d;

	bool operator<( const DATA & right ) const {
		return (t < right.t );
	}
};
	
int main()
{
	ios_base::sync_with_stdio(0);
	int N, M;
	while (cin >> N >> M, N ){
		memset (com, false, sizeof (com ) );
		DATA data[M];
		rep (i, M ){
			cin >> data[i].t >> data[i].s >> data[i].d;
		} // end rep
		sort (data, data + M );
		com[1] = true;
		rep (i, M ){
			com[data[i].d] |= com[data[i].s];
		} // end rep
		int res = (int)count (com, com + N + 1, true );
		cout << res << endl;
	} // end while
	
	return 0;
}