#include <bits/stdc++.h>

#define reps(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)
#define rep(v, n) reps(v, 0, n)
#define lep(v, n) reps(v, 1, n + 1)
#define rreps(v, f, l) for (int v = (l), v##_ = (f); v >= v##_; --v)
#define rrep(v, n) rreps(v, 0, n - 1)
#define rlep(v, n) rreps(v, 1, n)
#define show_a(a, size) rep(a##_it, size) std::cout << a[a##_it] << " \n"[a##_it == a##_it_ - 1];
#define show_v(v) show_a(v, v.size())
#define debug(x) std::cerr << #x << " = " << (x) << "\n";

using namespace std;

typedef long long int lint;

static inline int in(){ int x; scanf("%d", &x); return x; }
static inline lint inl(){ lint x; scanf("%lld", &x); return x; }

int main()
{
  int n, m;
  while (n = in()){
    m = in();
    string ioi;
    cin >> ioi;
    vector<int> count(m, 0);
    count[0] = 1;
    rep(i, m){
      if (i == 0) continue;
      if (ioi[i] != ioi[i - 1]){
        count[i] = count[i - 1] + 1;
      }
      else {
        count[i] = 1;
      }
    }
    int ans = 0;
    rep(i, m){
      if (ioi[i] == 'I' && count[i] >= 2 * n + 1) ans++;
    }
    cout << ans << endl;
  }
  return 0;
}