#include <algorithm>
#include <cctype>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <functional>
#include <iostream>
#include <iomanip>
#include <iterator>
#include <map>
#include <queue>
#include <sstream>
#include <utility>
#include <vector>

using namespace std;

typedef long long Long;
#define whole(xs) xs.begin(), xs.end()

int N, M;
vector<double> L, A, B;
void input() {
    cin >> N >> M;
    L.resize(N);
    A.resize(N);
    B.resize(N);
    for (int i = 0; i < N; i++) 
        cin >> L[i] >> A[i] >> B[i];
}

double Calc(int bit) {
    vector<int> X;
    for (int i = 0; i < N; i++) {
        if (bit & (1 << i)) {
            X.push_back(i);
        }
    }
    double Ret = 0;
    for (int i = 0; i < M; i++) {
        for (int j = i + 1; j < M; j++) {
            int a = X[i],
                b = X[j];
            Ret += (L[a] - L[b]) * (L[a] - L[b]) + (A[a] - A[b]) * (A[a] - A[b]) + (B[a] - B[b]) * (B[a] - B[b]);
        }
    }
    return Ret;
}

void solve() {
    double Ans = 0;
    for (int i = 0; i < (1 << N); i++) {
        if (__builtin_popcount(i) != M) continue;
        Ans = max(Ans, Calc(i));
    }
    printf("%.8f\n", Ans);
}

int main() {
    input(); solve();
    return 0;
}