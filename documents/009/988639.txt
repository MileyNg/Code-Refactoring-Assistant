#include <algorithm>
#include <numeric>
#include <map>
#include <vector>
#include <iostream>

using namespace std;
typedef long long ll;
const ll MD = 1e9+7;
ll dp[220][11000];
bool used[220][11000] = {};
int n, w;
int d[220];

ll solve(int i, int u) {
	if (u < 0) return 0;
	if (u == 0) return 1;
	if (i >= n) return 0;
	if (used[i][u]) return dp[i][u];
	used[i][u] = true;
	ll r = solve(i+1, u) + solve(i+1, u-d[i]);
	r %= MD;
	dp[i][u] = r;
	return r;
}

int main() {
	cin >> n >> w;
	for (int i = 0; i < n; i++) {
		cin >> d[i];
	}
	sort(d, d+n);
	ll r = 0;
	for (int i = w; i >= 0; i--) {
		int u = i;
		int j = 0;
		for (j = 0; j < n; j++) {
			if (d[j] <= (w-i)) {
				u -= d[j];
			} else {
				break;
			}
		}
		r += solve(j, u);
		r %= MD;
	}
	cout << r << endl;
}