#include<stdio.h>

int cnt;

int larger(int x,int y){
  if(x>y){
    cnt--;
    return x;
  }
  else{
    return y;
  }
}

int judge(int p1,int p2,int j){
  int a=(p1+p2+j)*(cnt-1);
  int b=(p1+p2)*cnt;
  return larger(a,b);
}

int mxm(int *pipe,int *joint,int n){
  if(n==2){
    return judge(pipe[0],pipe[1],joint[0]);
  }
  else{
    int m=n/2+n%2;
    int npp[m];
    int njn[m-1];
    int i;

    for(i=0;i<m;i++){
      if(2*i==n-1){
	npp[i]=pipe[2*i];
      }
      else{
	int nxt=judge(pipe[2*i],pipe[2*i+1],joint[2*i]);
	npp[i]=nxt/cnt;
      }
      if(i<m-1){
	njn[i]=joint[2*i+1];
      }
    }
    return mxm(npp,njn,m);
  }
}

void doit(int n){
  int p[n];
  int j[n-1];
  int i;
  for(i=0;i<n;i++){
    scanf("%d",&p[i]);
  }
  for(i=0;i<n-1;i++){
    scanf("%d",&j[i]);
  }
  printf("%d\n",mxm(p,j,n));
}

int main(){
  int n;
  scanf("%d",&n);
  if(n!=0){
    cnt=n;
    doit(n);
    return main();
  }
  return 0;
}