#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <ctime>
using namespace std;
typedef long long int ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
#define REP(i,x) for(int i=0;i<(int)(x);i++)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define RREP(i,x) for(int i=(x)-1;i>=0;i--)
#define RFOR(i,c) for(auto i=(c).rbegin();i!=(c).rend();++i)
#define ALL(container) container.begin(), container.end()
#define SZ(container) ((int)container.size())

const int INF = 1<<28;
const double EPS = 1e-8;
const int MOD = 1000000007;

int w, h;
int Map[30][30];
int d[4][2] = {{1,0},{0,1},{-1,0},{0,-1}};

int check(int x, int y, int rest){
	int ans = -1;
	if(rest == 0) return -1;
	REP(i, 4){
		int k=1;
		if(Map[y+d[i][1]][x+d[i][0]] == 1) continue;
		for(;!Map[y+d[i][1]*k][x+d[i][0]*k];k++);
		if(Map[y+d[i][1]*k][x+d[i][0]*k] == -1) continue;
		if(Map[y+d[i][1]*k][x+d[i][0]*k] == 3) return rest-1;
		if(Map[y+d[i][1]*k][x+d[i][0]*k] == 1){
			Map[y+d[i][1]*k][x+d[i][0]*k] = 0;
			ans = max(ans, check(x+d[i][0]*(k-1), y+d[i][1]*(k-1), rest - 1));
			Map[y+d[i][1]*k][x+d[i][0]*k] = 1;
		}
	}
	return ans;
}

main(){
	while(cin >> w >> h, w){
		memset(Map, -1, sizeof(Map));
		int sx, sy;
		REP(i, h)REP(j, w){
			int t;
			cin >> Map[i+1][j+1];
			if(Map[i+1][j+1] == 2){
				Map[i+1][j+1] = 0;
				sx = j+1;sy = i+1;
			}
		}
		int res = check(sx, sy, 10);
		cout << (res==-1?res:10-res) << endl;
	}
	return 0;
}