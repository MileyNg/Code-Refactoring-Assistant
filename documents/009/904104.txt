#try-except is necessary. If there is not try-except, Runtime error happens.
import math
def isHit(a,b,ufo):
	D=abs(a*ufo[0]+b*ufo[1])/math.sqrt(a**2+b**2)
	return True if D<=ufo[2] else False

while 1:
	try:
		R,N=map(int,raw_input().split())
		if R==0:break
		ufos=[map(int,raw_input().split()) for i in range(N)]
		for i in range(N):
			#append d,sin,cos
			ufos[i].append(math.sqrt(ufos[i][0]**2+ufos[i][1]**2))
			ufos[i].append(ufos[i][0]/ufos[i][4])
			ufos[i].append(ufos[i][1]/ufos[i][4])
		#ufos[i]=[x,y,r,v,d,sin,cos]
		invade=0
		while ufos:
			# update d,x,y
			for i in range(len(ufos)):
				ufos[i][4]-=ufos[i][3]
				ufos[i][0]=ufos[i][4]*ufos[i][5]
				ufos[i][1]=ufos[i][4]*ufos[i][6]
			# remove ufo r<=R
			for i in range(len(ufos)-1,-1,-1):
				if ufos[i][4]<=R:
					invade+=1
					ufos.pop(i)
			# remove nearest ufo
			ufos=sorted(ufos,key=lambda i:i[4])
			target=ufos.pop(0)
			a,b=target[1],-target[0]
			# remove ufo that laser hits
			for i in range(len(ufos)-1,-1,-1):
				if isHit(a,b,ufos[i]):
					ufos.pop(i)
					
		print invade
	except:
		pass