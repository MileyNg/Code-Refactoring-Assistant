#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>

using namespace std;

inline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}
template<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}

template<class T> inline T sqr(T x) {return x*x;}

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<string> VS;
typedef pair<int, int> PII;
typedef long long LL;
typedef unsigned long long ULL;

#define ALL(a)  (a).begin(),(a).end()
#define RALL(a) (a).rbegin(), (a).rend()
#define PB push_back
#define MP make_pair
#define SZ(a) int((a).size())
#define EACH(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)
#define EXIST(s,e) ((s).find(e)!=(s).end())
#define SORT(c) sort((c).begin(),(c).end())

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define REP(i,n)  FOR(i,0,n)

const double EPS = 1e-10;
const double PI  = acos(-1.0);

#define CLR(a) memset((a), 0 ,sizeof(a))

#define dump(x)  cerr << #x << " = " << (x) << endl;
#define debug(x) cerr << #x << " = " << (x) << " (L" << __LINE__ << ")" << " " << __FILE__ << endl;

int dx[8] = {-1, 0, 1, 0, -1, -1, 1, 1};
int dy[8] = {0, -1, 0, 1, -1, 1, -1, 1};

int main() {
  int h, m, s;

  while(cin >> h >> m >> s) {
    if(h == -1 && m == -1 && s == -1) break;

    int stand = 2*3600 - (h*3600 + m*60 + s);
    int hispeed = 2*3600 - (h*3600 + m*60 + s)/3;

    string anss, ansh;

    anss = '0';
    anss += stand/3600 + '0';
    stand -= stand/3600 * 3600;
    anss += ':';
    anss += stand/600 + '0';
    stand -= stand/600 * 600;
    anss += stand/60 + '0';
    stand -= stand/60 * 60;
    anss += ':';
    anss += stand/10 + '0';
    stand -= stand/10 * 10;
    anss += stand + '0';

    ansh = '0';
    ansh += hispeed/3600 + '0';
    hispeed -= hispeed/3600 * 3600;
    ansh += ':';
    ansh += hispeed/600 + '0';
    hispeed -= hispeed/600 * 600;
    ansh += hispeed/60 + '0';
    hispeed -= hispeed/60 * 60;
    ansh += ':'; 
   ansh += hispeed/10 + '0';
    hispeed -= hispeed/10 * 10;
    ansh += hispeed + '0';

    cout << anss << endl;
    cout << ansh << endl;
  }
}