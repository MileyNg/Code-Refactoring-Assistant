#include <iostream>
#include <cstdio>
#include <iomanip>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <bitset>
#include <stack>
#include <utility>
#include <numeric>
#include <algorithm>
#include <functional>
#include <cctype>
#include <complex>
#include <string>
#include <sstream>
#include <fstream>
#include <cassert>
using namespace std;

//common

typedef int  i32;
typedef long long i64,ll;
typedef long double ld;

#define BR "\n"
#define ALL(c) (c).begin(),(c).end()
#define REP(i,n) for(int i=0;i<(int)(n);++i)
#define FOR(i,l,r) for(int i=(int)l;i<(int)(r);++i)
#define EACH(it,o) for(auto it = (o).begin(); it != (o).end(); ++it)
#define IN(l,v,r) ((l)<=(v) && (v)<(r))

//config
//#define NDEBUG
//#define INF 1<<30
//#define EPS 1e-8
//const ll MOD =100000007;

//debug
#ifdef NDEBUG
#define DUMP(x)
#define DUMPLN(x)
#define DEBUG(x)
#define DEBUGLN(x)
#define LINE()
#define LINELN()
#define CHECK(exp,act)
#define STOP(e)
#else
#define DUMP(x)  cerr << #x << " = " << (x)
#define DUMPLN(x)  DUMP(x) <<endl
#define DEBUG(x) DUMP(x) << LINE() << " " << __FILE__
#define DEBUGLN(x) DEBUG(x)<<endl
#define LINE()    cerr<< " (L" << __LINE__ << ")"
#define LINELN()    LINE()<<endl
#define CHECK(exp,act)  if(exp!=act){DUMPLN(exp);DEBUGLN(act);}
#define STOP(e)  CHECK(e,true);if(!(e)) exit(1);
#endif

template<class T> inline string toString(const vector<T>& x) {
	stringstream ss;
	REP(i,x.size()){
		if(i!=0)ss<<" ";
		ss<< x[i];
	}
	return ss.str();
}

template<class T> inline string toString(const vector<vector<T> >& map) {
	stringstream ss;
	REP(i,map.size()){
		if(i!=0)ss<<BR;
		ss<< toString(map[i]);
	}
	return ss.str();
}
template<class K,class V>  string toString(map<K,V>& x) {
	string res;stringstream ss;
	for(auto& p:x)ss<< p.first<<":" << p.second<<" ";
	return ss.str();
}

string BITtoString(int bit){
    stringstream ss;
    while(bit!=0){ss<<(bit%2);bit/=2;}
    string res=ss.str();reverse(ALL(res));
    return res;
}

template<typename T> inline T pmod(T v,T MOD){
	return (v%MOD+MOD)%MOD;
}
#define nextInt(n) scanf("%d",&n)
#define defInt(n) int n;nextInt(n)
#define nextLong(n) scanf("%lld",&n)
#define defLong(n) ll n;nextLong(n)
#define nextDouble(n) scanf("%lf",&n)

class Main{
public:

        int N;

        int gx,gy;
        int p;
        set<pair<pair<int,int>,pair<int,int>>> mata;
        bool input(){
            //   ifstream cin("in");
            //  ofstream cout( "out" );
            nextInt(gx);nextInt(gy);
            nextInt(p);mata.clear();
            REP(i,p){
                int x1,y1,x2,y2;nextInt(x1);nextInt(y1);nextInt(x2);nextInt(y2);
                mata.insert(make_pair(make_pair(y1,x1),make_pair(y2,x2)));
                mata.insert(make_pair(make_pair(y2,x2),make_pair(y1,x1)));
            }
            return true;
        }

        void run(){
            int Q;nextInt(Q);
            while(Q--!=0){
                 input();

                 vector<vector<ll>> dp(gy+1,vector<ll>(gx+1,0));
                 dp[0][0]=1;
                 REP(y,gy+1)REP(x,gx+1){
                    if(x-1>=0 && 0==mata.count(make_pair(make_pair(y,x),make_pair(y,x-1))))
                        dp[y][x]+=dp[y][x-1];
                    if(y-1>=0 && 0==mata.count(make_pair(make_pair(y,x),make_pair(y-1,x))))
                         dp[y][x]+=dp[y-1][x];
                }
                
                if(dp[gy][gx]>0)cout << dp[gy][gx]<<endl;
                else cout << "Miserable Hokusai!"<<endl;
            }
        }
};

int main(){
	//cout <<fixed<<setprecision(3);	
	//ios::sync_with_stdio(false);
	Main().run();
	return 0;
}