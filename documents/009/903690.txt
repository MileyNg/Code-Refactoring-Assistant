#include <iostream>
#include <algorithm>

using namespace std;

const int INF = 100000;

int main(){
	int n,m;//太郎、花子のそれぞれのカードの枚数
	while(true){
		cin >> n >> m;
		if(n==0 && m==0){
			break;
		}
		int *card1 = new int[n];
		int *card2 = new int[m];
		int sum1=0;//交換する前のcard1の和
		int sum2=0;//            card2の和
		for(int i=0;i<n;i++){
			cin >> card1[i];
			sum1 += card1[i];
		}
		for(int i=0;i<m;i++){
			cin >> card2[i];
			sum2 += card2[i];
		}


		if((sum1-sum2) %2 == 1){//下コメ参照
			cout << -1 << endl;
		}
		else{
			//交換して組み合わせが等しい場合に代入。組み合わせがない場合はずっとINF
			int change1 = INF;//太郎が渡す
			int change2 = INF;//花子が渡す
			for(int i=0;i<n;i++){
				for(int j=0;j<m;j++){
					if(sum1 - sum2 == 2*(card1[i] - card2[j])){//下コメ参照。交換したら等しい
						if(change1+change2 > card1[i] + card2[j]){
							//答えは交換したカードの和の最小値
							change1 = card1[i];
							change2 = card2[j];
						}
					}
				}//for(j)終わり
			}//for(i)終わり
			if(change1 == INF){//塗り替えなし、つまり見つからなかった
				cout << -1 << endl;
			}else{
				cout << change1 << ' ' << change2 << endl;
			}
		}//else終わり

		delete[] card1;
		delete[] card2;
	}//while終わり
	return 0;
}
/*
太郎が渡すカードe1
花子が渡すカードe2
交換して和が等しいとき
sum1-e1+e2 = sum2-e2+e1
つまり、sum1 - sum2 = 2*(e1 - e2)
を満たすe1、e2を探せばよい。カードの値は整数なので、sum1-sum2が奇数のとき解なし
sum1-sum2の値はO(n+m)で求まる
e1-e2の値を全探索するときO(nm)
*/