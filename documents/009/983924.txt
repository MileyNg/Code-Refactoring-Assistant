#include <algorithm>
#include <cstdio>
#include <iostream>
#include <map>
#include <string>
#include <vector>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
const int inf = 1<<29;
#define loop(i,a,b) for(int i=(a); i<int(b); i++)
#define rep(i,b) loop(i,0,b)

bool wf(vvi & d){
    int n=d.size();
    rep(k,n)rep(i,n)rep(j,n){
        if(i==j) continue;
        if(d[i][j]!=inf) continue;
        if(d[i][k]==inf || d[k][j]==inf) continue;
        d[i][j] = d[i][k]+d[k][j];
    }
    rep(k,n)rep(i,n)rep(j,n){
        if(d[i][j]>=inf || d[i][k]>=inf || d[k][j]>=inf){
            // cout << i << " " << j << " " << k << " " << d[i][j] << endl;
            continue;
        }
        if(d[i][j] != d[i][k]+d[k][j]){
            return false;
        }
    }
    return true;
}

int main(){
    int n;
    while(cin >> n && n){
        int c = 0;
        map<string,int> m;
        vvi d(n*2, vi(n*2,inf));
        rep(i,n){
            char u1[20],u2[20];
            int t;
            scanf(" 1 %s = 10^ %d %s",u1,&t,u2);
            // cout << u1 << " " << u2 << " " << t << endl;
            string u(u1),v(u2);
            if(m.find(u) == m.end()){
                m[u] = c++;
            }
            if(m.find(v) == m.end()){
                m[v] = c++;
            }
            int mu=m[u];
            int mv=m[v];
            d[mu][mv] = t;
            d[mv][mu] = -t;
        }

        if(wf(d)) cout << "Yes" << endl;
        else cout << "No" << endl;
    }
}