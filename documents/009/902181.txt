#include<iostream>
#include<queue>
#include<vector>
#include<map>
#define rep(i,n) for(int i=0;i<(int)n;i++)
#define sz size()
#define fs first
#define sc second
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
typedef pair<ll,ll> P;

const int adj[4] = {6,1,3,8};

ll encode(vi v){
  ll res = 0;
  rep(i,9)res |= v[i]<<(4*i);
  return res;
}

vi decode(ll l){
  vi res(9);
  rep(i,9)res[i] = (l>>(4*i))&15LL;
  return res;
}

int main(){
  int ch,cv;
  vi s(9),t(9);

  while(cin>>ch>>cv,ch){
    rep(i,9)cin >> s[i];
    rep(i,9)cin >> t[i];

    map<ll,ll> d;
    ll ds = encode(s), dt = encode(t);
    d[ds] = 0;
    priority_queue<P, vector<P>, greater<P> > q;
    q.push(P(0,ds));

    while(q.sz){
      P p = q.top(); q.pop();
      ll dis = p.fs;
      ds = p.sc;
      if(d[ds] < dis)continue;
      if(ds==dt)break;
      s = decode(ds);

      int pos = 0;
      rep(i,9){
	if(s[i] == 0)pos = i;
      }

      rep(i,4){
	int nxt = (adj[i] + pos) % 9;
	ll cost = (i&1?ch:cv) + dis;
	swap(s[pos],s[nxt]);
	ds = encode(s);

	if(d.find(ds)==d.end() || d[ds] > cost){
	  d[ds] = cost;
	  q.push(P(cost,ds));
	}
	swap(s[pos],s[nxt]);
      }
    }
    cout << d[dt] << endl;
  }
}

      