//最悪O(64n)くらいかかるのでMLEではなくTLEします。
#include<iostream>
using namespace std;

int n,k,x0;

int RANK(long long num)	//a[t-1] < num <= a[t]をみたすtを考える→numと同じ数になったものを数える。→これらをもとにnumが大きい1,numで良い0,numが小さい-1を返す。
{
	int t = 0,cnt = 0,i;	//tは自分より小さいインデックスの個数
	long long x = x0;
	for(i = 0;i < n;i++)
	{
		//今のxの値 = a[i]
		if(x == num){
			cnt++;
		}
		if(x < num){
			t++;
		}
		//xの値更新
		x ^= x << 13;
		x ^= x >> 7;
  		x ^= x << 17;
	}
	//昇順ソートすると：a[t-1] < num == a[t+cnt-1] < a[t+cnt]
	//a[k-1]がnumより小さいときはnumが大きすぎる。
	if(k <= t-1)
		return 1;
	if(k >= t+cnt)
		return -1;
	return 0;
}

int main(){
	cin >> n >> k >> x0;
	k--;
	long long start = -9223372036854775808,last = 9223372036854775807;
	
	while(start <= last){
		long long medi = (start >> 1) + (last >> 1);	//そのまま、start+lastとすると、オーバーフローしてバグる
		
		int t = RANK(medi);
		if(t == 0){
			cout << medi << endl;
			break;
		}
		if(t == 1){
			//cout << medi << endl;
			last = medi-1;
			//cout << last << endl << endl;
		}
		if(t == -1){
			//cout << "yes" << endl;
			start = medi+1;
			//cout << medi << " " << start << endl << endl;
		}
		cout << start << " " << last << endl;
	}
	return 0;
}