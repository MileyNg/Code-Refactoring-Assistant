#include<iostream>

int n;
int cards[101];

void cut(int k){

	int bufa[101];
	int bufb[101];

	int i = 0;
	for (; i < k; i++)bufa[i] = cards[i];
	for (; i < n; i++)bufb[i - k] = cards[i];

	i = 0;
	for (; i < n - k; i++)cards[i] = bufb[i];
	for (; i < n; i++)cards[i] = bufa[i - (n - k)];

	return;
}

void lifl(){

	int bufa[101];
	int bufb[101];

	int i = 0;
	for (; i < (n / 2); i++)bufa[i] = cards[i];
	for (; i < n; i++)bufb[i - (n / 2)] = cards[i];

	for (int i = 0, j = 0; i < n; i += 2, j++){
		cards[i] = bufa[j];
		cards[i + 1] = bufb[j];
	}

	return;
}

int main(){

	int m;
	std::cin >> n >> m;
	n *= 2;
	for (int i = 0; i < n; i++)cards[i] = i + 1;

	for (int i = 0, a; i < m; i++){
		std::cin >> a;
		if (a != 0)cut(a);
		else lifl();
	}


	for (int i = 0; i < n; i++)std::cout << cards[i] << std::endl;

	return 0;
}