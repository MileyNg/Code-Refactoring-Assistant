#include <iostream>
#include <cstring>

using namespace std;

const int N = 110;
double dp[N][N];
int L[N], B[N];

int main(){
	cout.setf(ios::fixed);
	cout.precision(8);

	int n, t, l, b;
	while (cin >> n >> t >> l >> b, n){
		memset(dp, 0, sizeof(dp));
		memset(L, 0, sizeof(L));
		memset(B, 0, sizeof(B));
		while (l--){
			int x;
			cin >> x;
			L[x] = 1;
		}
		while (b--){
			int x;
			cin >> x;
			B[x] = 1;
		}

		dp[0][0] = 1;
		for (int i = 0; i < t; ++i){
			for (int j = 0; j < n; ++j){
				double prob = dp[i][j] / 6;
				for (int k = 1; k <= 6; ++k){
					int nxt = j + k;
					if (nxt > n) nxt = n - (nxt-n);
					if (B[nxt]) nxt = 0;
					dp[i + 1 + L[nxt]][nxt] += prob;
				}
			}
			dp[i + 1][n] += dp[i][n];
		}
		cout << dp[t][n] << '\n';
	}

	return 0;
}