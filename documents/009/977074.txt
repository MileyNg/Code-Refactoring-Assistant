#include <iostream>
#include <queue>
using namespace std;

int main() {

  int dx[6] = {  0,  1,  1,  0, -1, -1 };
  int dy[6] = {  1,  1,  0, -1, -1,  0 };

  long long int t, n, inputx, inputy;

  while( true ) {

    cin >> t >> n;

    if ( t == 0 ) break;

    int map[200][200] = {};

    for ( long long int i = 0; i < n; i++ ) {

      cin >> inputx >> inputy;

      map[ inputx + 100 ][ inputy + 100 ] = -1;

    }

    cin >> inputx >> inputy;

    queue<int> qx, qy;

    qx.push( inputx + 100 );
    qy.push( inputy + 100 );

    map[ qx.front() ][ qy.front() ] = 1;

    long long int ans = 1;

    while( qx.size() > 0 ) {

      int x = qx.front();
      int y = qy.front();
      qx.pop();
      qy.pop();

      for ( int i = 0; i < 6; i++ ) {

	if ( map[ x + dx[i] ][ y + dy[i] ] == 0 ) {

	  map[ x + dx[i] ][ y + dy[i] ] = map[x][y] + 1;
	  ans++;
	  if ( map[x][y] < t ) {
	    qx.push( x + dx[i] );
	    qy.push( y + dy[i] );
	  }

	}

      }

    }

    cout << ans << endl;

  }

  return 0;

}