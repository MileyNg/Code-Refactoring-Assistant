#include <iostream>
#include <iomanip>
#include <cassert>
#include <algorithm>
#include <functional>
#include <vector>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <map>
#include <bitset>
#include <sstream>
#include <istream>
#include <cmath>
#include <cstdio>

using namespace std;

#define vci vector<int>
#define vcs vector<string>
#define pb push_back
#define sz size()
#define mapii map<int, int>
#define mapci map<char, int>
#define mapsi map<string, int>
#define all(x) x.begin(), x.end()
#define minit(a, i) memset(a, i, sizeof(a));

#define for_(i, a, b) for (int i=(int)a; i<(int)b; i++)
#define for_d(i, a, b) for (int i=(int)a-1; i>=b; i--)
#define for_r(i, a, b, c) for (int i=(int)a; i<(int)b; i += c)
#define for_dr(i, a, b, c) for (int i=(int)a-1; i>=b; i -= c)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)

typedef long long ll;
typedef double D;

const int iINF = 2147483647;
const ll lINF = 9223372036854775807;

template <class T> inline void dbg(T t) { cout << t << endl; }



bool solve(int c1, int c2, int c3) {
	vector<bool> use(11, 0);
	use[c1] = use[c2] = use[c3] = 1;
	int cnt = 0;
	for_(i, 1, 11) {
		if (use[i]) continue;
		if (c1 + c2 + i <= 20) cnt++;
	}
	if (cnt >= 4) return true;
	return false;
}

int main() {
	int c1, c2, c3;
	
	while (cin>>c1>>c2>>c3) {
		if (solve(c1, c2, c3)) cout << "YES" << endl;
		else cout << "NO" << endl;
	}
	
	return 0;
}