#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define between(a,x,b) ((a)<=(x)&&(x)<=(b))
using namespace std;

int edge[50][50];
int n;
int flag[50];
void dfs(int v){
  if(flag[v]) return;
  flag[v] = 1;
  rep(i, n) if(edge[v][i]) dfs(i);
}

int main(){
  int f, d;
  while(scanf("%d", &n) && n){
    vector<vector<int> >day(31);
    rep(i, 51) rep(j, 51) edge[i][j] = 0;
    rep(i, n){
      scanf("%d", &f);
      rep(j, f){
	scanf("%d", &d);
	day[d].push_back(i);
      }
    }
    /*    for(int i = 1; i < 6; i++){
      rep(j, day[i].size()) printf("%d ", day[i][j]);
      puts("");
      } */
    for(int i = 1; i < 31; i++){
      rep(j, day[i].size()) REP(k, j+1, day[i].size()){
	edge[day[i][j]][day[i][k]] = 1; edge[day[i][k]][day[i][j]] = 1;
      }
      rep(j, n) flag[j] = 0;
      dfs(0);
      int l;
      /* rep(j, n){
	rep(k, n) printf("%d ", edge[j][k]);
	puts("");
	}*/
      for(l = 0; l < n; l++) if(!flag[l]) break;
      if(l == n){
	printf("%d\n", i);
	break;
      }

      if(i == 30) puts("-1");
    }
  }
  return 0;
}