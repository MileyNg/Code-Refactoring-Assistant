#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string.h>
#include <queue>
using namespace std;
#define MP(x,y) make_pair(x,y)
#define FI first
#define SE second

const int MAXN = 110;
int len=0,ans_s;
char str[MAXN],st[MAXN];
long long ans,pos;

long long trans_stoi(int l,int r)
{
	long long res=0;
	for (int i=l;i<r;i++)
		res=res*10+str[i]-'0';
	return res;
}

void trans_itos(long long x)
{
	int num=0;
	int tmp[MAXN];
	while (x)
	{
		tmp[num++]=x%10;
		x/=10;
	}
	for (int i=0;i<num;i++)
		st[i]=tmp[num-i-1]+'0';
	st[num]='\0';
}

long long cal(long long ans)
{
	int num=1;
	long long mul=9,p=1,res=0;
	while (ans>p*10)
	{
		res+=num*mul;
		num++;
		mul*=10;
		p*=10;
	}
	res+=(ans-p)*num;
	return res;
}

int main()
{
	freopen("/home/caesar11/0425/d.in","r",stdin);
	str[0]=' ';
	while (scanf("%s",str+1)!=-1)
	{
		if (str[1]=='#') break;
		ans=1LL<<60;
		len=strlen(str)-1;
//
		for (int s=1;s<=len;s++)
			for (int l=s;l<=20&&s+l-1<=len;l++)
			{
				long long tmp=trans_stoi(s,s+l)+1;
				long long tt=tmp-1;
				trans_itos(tmp);
				int flag=1;
				int p=s+l,q=p+strlen(st)-1;
				while (flag)
				{
					if (q>len) break;
					for (int i=p,j=0;i<=q;i++,j++)
						if (str[i]!=st[j])
						{
							flag=0;
							break;
						}
					if (!flag) break;
					tmp++;
					trans_itos(tmp);
					p=q+1,q=p+strlen(st)-1;
				}
				if (!flag) continue;
				for (int i=p,j=0;i<=len;i++,j++)
					if (str[i]!=st[j])
					{
						flag=0;
						break;
					}
				if (tt-1==0) 
				else trans_itos(tt-1);
				for (int i=s-1,j=strlen(st)-1;i>0;i--,j--)
					if (str[i]!=st[j])
					{
						flag=0;
						break;
					}
				if (flag)
				{
					if (ans>tt)
					{
						if (s==1) ans=tt;
						else ans=tt-1;
						pos=s-1;
					}
				}
			}
		if (len<=20)
		{
			for (int i=1;i<=len;i++)
			{
				long long tmp=0;
				for (int j=1;j<=len;j++)
				{
					int t=i+j-1;
					tmp=tmp*10+str[t<=len?t:t-len]-'0';
				}
				if (ans>tmp)
				{
					ans=tmp;
					pos=i-1;
				}
			}
		}
		//printf("%lld\n",ans);
		printf("%lld\n",cal(ans+1)-ans_s);
	}
	return 0;
}