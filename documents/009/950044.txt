#include<iostream>
#include<cmath>
#include<vector>
using namespace std;

#define MAX (double)1000000000
#define MAX_PRIME (int)sqrt(MAX)+1

void createPrimeTable(int* table, int size);

int main()
{
    /* 素数表を作る */
    int prime_table[MAX_PRIME];
    createPrimeTable(prime_table, MAX_PRIME);

    vector<int> prime;
    for(int i=0; i<MAX_PRIME; i++) 
        if( prime_table[i] ) prime.push_back(i);

    vector<int>::iterator i;
    // for(i=prime.begin(); i!=prime.end(); i++) cout << *i << endl;

    /* ここから本番 */
    int n;
    cin >> n;
    cout << n << ":";
    while(1){
        for(i=prime.begin(); i!=prime.end(); i++){
            if( !(n%(*i)) && n!=(*i) ){
                cout << " " << *i;
                n /= *i;
                break;
            }else if( n == *i ){
                cout << " " << n;
                goto L1; // whileを抜ける
            }
        }
    }
L1:
    cout << endl;

    return 0;
}

void createPrimeTable(int* table, int size)
{
    for(int i=0; i<size; i++) table[i] = 1;
    
    table[0] = table[1] = 0;

    for(int i=2; i<size; i++)
        if( table[i] )
            for(int j=i+i;j<size; j+=i ) table[j] = 0;
}    