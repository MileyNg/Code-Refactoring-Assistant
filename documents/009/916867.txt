#include <cstdio>
#include <cstring>

const int DIC_SIZE = 1000000;

struct tuple{
  int num;
  tuple* left;
  tuple* right;
};

tuple dic[DIC_SIZE];
int dic_count = 0;
tuple* root = NULL;

int encode(char* str){
  int num = 0;
  for(int i = 0;; i++){
    if(str[i] == 'A') {
      num = num * 5 + 1;
    } else if (str[i] == 'T') {
      num = num * 5 + 2;
    } else if (str[i] == 'C') {
      num = num * 5 + 3;
    } else if (str[i] == 'G') {
      num = num * 5 + 4;
    } else {
      break;
    }
  }
  return num;
}

void insert(char* str){
  tuple* p = &(dic[dic_count++]);
  p->num = encode(str);
  p->left = NULL;
  p->right = NULL;
  if(root == NULL){
    root = p;
    return;
  }
  tuple* q = root;
  for(;;){
    if(q->num > p->num){
      if(q->left == NULL){
	q->left = p;
	break;
      } else {
	q = q->left;
      }
    } else if(q->num < p->num){
      if(q->right == NULL){
	q->right = p;
	break;
      } else {
	q = q->right;
      }
    } else {
      break;
    }
  }
}
int find(char* str){
  int n = encode(str);
  tuple* p = root;
  if(p == NULL) { return 0; }
  for(;;){
    if(p->num == n){
      return 1;
    } else if(p->num > n){
      if(p->left == NULL) { break; }
      p = p->left;
    } else if(p->num < n){
      if(p->right == NULL) { break; }
      p = p->right;
    }
  }
  return 0;
}

int main(){
  int n;
  scanf("%d", &n);
  char command[256], str[16];
  for(int i = 0; i < n; i++){
    scanf("%s", command);
    scanf("%s", str);
    if(strcmp(command, "insert") == 0){
      insert(str);
    }else if (strcmp(command, "find") == 0){
      if(find(str)){
	puts("yes");
      } else {
	puts("no");
      }
    }
  }
  return 0;
}