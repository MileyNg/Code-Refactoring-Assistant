#include <iostream>
#include <algorithm>
#include <functional>
#include <utility>
#include <vector>

int max(int a, int b) {
  return a > b ? a : b;
}

int main() {
  std::vector<std::pair<int, int> > turara;

  int N, L;
  std::cin >> N >> L;

  for (int i = 0; i < N; i++) {
    int length;
    std::cin >> length;
    turara.push_back(std::make_pair(length, i));
  }

  std::sort(turara.begin(), turara.end(), std::greater<std::pair<int, int> >());
  
  std::vector<int> dp(N);

  for(int i = 0; i < N; i++) {
    int j = turara[i].second;
    int now = turara[i].first;
    dp[j] += L - now;
    if (j - 1 >= 0) {
      dp[j - 1] = max(dp[j - 1], dp[j]);
    }
    if (j + 1 < N) {
      dp[j + 1] = max(dp[j + 1], dp[j]);
    }
  }

  int ans = 0;
  for(int i = 0; i < N; i++) {
    ans = max(ans, dp[i]);
  }

  std::cout << ans << std::endl;

  return 0;
}