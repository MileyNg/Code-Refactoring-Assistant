#include <bits/stdc++.h>
using namespace std;

typedef long long lli;

const int MAXN = 4004;
struct S {
  lli sum;
  int a, b;
  bool operator < (const S &s) const {
    if(sum != s.sum) return sum < s.sum;
    if(a != s.a) return a > s.a;
    if(b != s.b) return b < s.b;
    return false;
  }
};

int N;
lli A[MAXN];
int dp[MAXN];
int prev[MAXN][MAXN];

int main() {
  cin >> N;
  for(int i = 0; i < N; ++i) cin >> A[i];

  vector<S> s;
  for(int i = 0; i < N; ++i) {
    lli sum = A[i];
    for(int j = i+1; j <= N; ++j) {
      s.push_back((S){sum,i,j});
      if(j < N) sum += A[j];
    }
  }
  sort(s.begin(), s.end());
  fill(dp, dp+MAXN, -1);
  dp[0] = 0;
  vector<int> ans;
  for(int i = 0; i < (int)s.size(); ++i) {
    int a = s[i].a;
    int b = s[i].b;
    if(dp[a] != -1 && dp[b] < dp[a] + 1) {
      dp[b] = dp[a] + 1;
      prev[dp[b]][b] = a;
    }
  }
  for(int c = dp[N], p = prev[dp[N]][N]; p; --c, p = prev[c][p]) {
    ans.push_back(p);
  }
  reverse(ans.begin(), ans.end());
  cout << ans.size()+1 << endl;
  for(int i = 0; i < (int)ans.size(); ++i) {
    cout << string((bool)i,' ') << ans[i];
  }
  cout << endl;
  return 0;
}