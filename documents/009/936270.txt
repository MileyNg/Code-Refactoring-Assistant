#include <iostream>
#include <algorithm>

using namespace std;

#define rep(i, n) for(int i = 0; i < n; i++)

int w, h;
int map[50][50];
int ans;

bool iswalkable(int ty,int tx){
	if(ty >= 0 && ty < h && tx >= 0 && tx < w) return true;
	return false;
}

void dfs(int y, int x){
	if(map[y][x] == 0) return;
	map[y][x] = 0;
	
	for(int vy = -1; vy <= 1; vy++){
		for(int vx = -1; vx <= 1; vx++){
			
			if(vy == 0 && vx == 0) continue;
			int ty = y + vy;
			int tx = x + vx;
			if(iswalkable(ty, tx)){
				dfs(ty, tx);
			}
			
		}
	}
	return;
}
			
	
int main(int argc, char const* argv[])
{
	
	while(true){
		cin >> w >> h;
		if(w == 0 && h == 0) break;

		ans = 0;
		rep(i, h) rep(j, w) cin >> map[i][j];

		rep(i, h){
			rep(j, w){
				if(map[i][j]){
					ans++;
					dfs(i, j);
				}
			}
		}


		cout << ans << endl;
	}
	
	return 0;
}