#include <iostream>
#include <algorithm>
#include <string>
#include <bitset>
using namespace std;

int leader[1000];
int dp[1000][8];

const int MOD = 10007;

int solve(int d, int s) {
  if(((s >> leader[d]) & 1) == 0) return 0;
  int &res = dp[d][s];
  if(res != -1) return res;
  int ans = 0;
  for(int t = 0; t < (1 << 3); ++t) {
    if((s & t) == 0) continue;
    ans += solve(d - 1, t);
    ans %= MOD;
  }
  return res = ans;
}

int main() {
  int N; cin >> N;
  string s; cin >> s;
  for(int i = 0; i < (int)s.size(); i++) {
    string t = "JOI";
    leader[i] = t.find(s[i]);
  }
  for(int i = 0; i < N; ++i) {
    for(int S = 0; S < (1 << 3); ++S) dp[i][S] = -1;
  }
  for(int S = 0; S < (1 << 3); ++S) {
    if((S & 1) && ((S >> leader[0]) & 1)) dp[0][S] = 1;
    else dp[0][S] = 0;
  }
  int ans = 0;
  for(int i = 0; i < (1 << 3); ++i) ans += solve(N-1, i);
  cout << ans << endl;
}