#include<cstdio>
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cmath>

using namespace std;

#define reps(i,f,n) for(int i=f;i<int(n);i++)
#define rep(i,n) reps(i,0,n)

int n;
vector<int> A;

void init(){}

bool input(){
	cin>>n;
	A=vector<int>(n);
	rep(i,n)cin>>A[i];
}

bool allzero(){
	rep(i,A.size())if(A[i]!=0)return false;
	return true;
}

void printans(vector<int>& vec){
	rep(i,vec.size()){
		printf("%d\n",vec[i]);
	}
}

pair<vector<int>, vector<int> > split(){
	sort(A.begin(),A.end());
	
	vector<int> ret;
	
	if(A[0]==0){
		rep(i,A.size()){
			ret.push_back(A[i]);
			if(A[i]!=0)break;
		}
	}
	
	vector<int> ret2;
	reps(i,ret.size(),A.size()){
		ret2.push_back(A[i]);
	}
	return make_pair(ret,ret2);
}

int mypow(int a,int b){
	b = min(2,b);
	int ret = 1;
	rep(i,b)ret *= a;
	return ret;
}
int calc(vector<int>& val){
	int now = val[val.size()-1];
	for(int i=val.size()-2;i>=0;i--){
		now = mypow(val[i], now);
	}
	return now;
}
vector<int> maxizero(vector<int> a){
	vector<int> ret;
	if(a.size()==0)return ret;
	
	int maxi = -1;
	sort(a.begin(),a.end());
	
	for(int i=a.size()-1;;i--){
		int val = calc(a);
		if(maxi<val){
			ret = a;
			maxi=val;
			
		}
		if(i==0)break;
		swap(a[i],a[i-1]);
	}
	
	return ret;
}
void solve(){
	pair<vector<int>,vector<int> > result = split();
	vector<int> pzero = result.first;
	vector<int> other = result.second;
	
	/*
	puts("pzero");
	printans(pzero);
	
	puts("other");
	printans(other);
	*/
	
	sort(other.begin(),other.end());
	printans(other);
	
	vector<int> z = maxizero(pzero);
	printans(z);
	
}

int main(){
	init();
	input();
	solve();
}