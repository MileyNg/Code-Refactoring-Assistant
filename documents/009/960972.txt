#include <iostream>
#include <queue>
#include <stack>
#include <vector>
#include <stdio.h>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <complex>
#include <map>
#include <climits>
using namespace std;

#define reep(i,a,b) for(int i=(a);i<(b);++i)
#define rep(i,n) reep((i),0,(n))
#define ALL(v) (v).begin(),(v).end()
#define PB push_back
#define EPS 1e-8
#define F first
#define S second
#define mkp make_pair

static const double PI=6*asin(0.5);
typedef long long ll;
typedef complex<double> CP;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vint;
static const int INF=1<<24;


int n;
string s;
string foo(string st){
	//cout<<st<<endl;
	if(st[1]>='0'&&st[1]<='9'){
		int j=0;
		vint v;
		while(st[j]=='['){
			j++;
			//cout<<"s[j]"<<" "<<s[j]<<endl;
			string ts=st.substr(j);
			//cout<<"ts "<<ts<<endl;
			stringstream tss;
			tss<<ts;
			int a;
			tss>>a;
			//cout<<" a "<<a<<endl;
			v.PB(a);
			//cout<<"push "<<a/2+1<<" "<<a<<endl;
			while(st[j]>='0'&&st[j]<='9') j++;
			j++;
			//cout<<"st[j] "<<st[j]<<endl;
		}
		int a=0;
		sort(ALL(v));
		/*
		cout<<"vv\n";
		rep(i,v.size()){
			cout<<v[i]<<endl;
		}
		cout<<"end vv\n";
		
		*/
		rep(i,v.size()/2+1){
			a+=v[i];
		}
		stringstream ss1;
		//ss1<<"[";
		ss1<<a;
		//ss1<<"]";
		string res;
		ss1>>res;
		return res;
	}
	else{
		stringstream ss1;
		for(int i=0;i<st.size();i++){
			int c=0,c2=0;
			string ttt;
			for(int j=i;j<st.size();j++){
				c2++;
				if(st[j]=='[') c++;
				else if(st[j]==']') c--;
				if(c==0){
					//cout<<st.substr(j)<<endl;
					ttt=st.substr(i+1,c2-2);
					i=j;
					break;
				}
			}
			//cout<<"foo\n";
			ss1<<"[";
			ss1<<foo(ttt);
			ss1<<"]";
			//cout<<"foo end\n";
		}
		string res;
		ss1>>res;
		//if(res[0]=='[') res=foo(res);
		return res;
	}
	return "";
}
int main(){
    cin>>n;
    rep(i,n){
        cin>>s;
    	stringstream ss3;
    	rep(j,s.size()){
    		int c=0;
    		if(!(s[j+c]>='0'&&s[j+c]<='9')){
    			while(!(s[j+c]>='0'&&s[j+c]<='9')){
    				//cout<<c<<endl;
    				c++;
    			}
    			ss3<<s.substr(j,c);
    			j+=c-1;
    		}
    		else{
    			string tt=s.substr(j);
    			//cout<<tt<<endl;
    			stringstream ss4;
    			ss4<<tt;
    			int a;
    			ss4>>a;
    			//cout<<"a "<<a<<endl;
    			a=a/2+1;
    			ss3<<a;
    			while(s[j]!=']') j++;
    			j--;
    		}
    	}
    	ss3>>s;
    	//cout<<s<<endl;
    	string ans=foo(s.substr(1,s.size()-2));
    	int a;
    	while(ans[0]=='['){
    		ans=foo(ans);
    		//cin>>a;
    	}
    	cout<<ans<<endl;
    	
    }
	
    return 0;
}


/*
[[[99][59][63][85][51]][[1539][7995][467]][[51][57][79][99][3][91][59]]]
[[99 59 63 85 51][1539 7995 467][51 57 79 99 3 91 59]]
26+30+32  + 1004  + 87
88 1004 87

[[[[9][7][3]][[3][5][7]][[7][9][5]]][[[9][9][3]][[5][9][9]][[7][7][3]]][[[5][9][7]][[3][9][3]][[9][5][5]]]]
6+5+7 7+8+6 7+4+6
19 21 17
11 13 10
22
36





*/