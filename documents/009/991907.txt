#include <iostream>
#include <vector>

#define BLACK   ('.')
#define RED     ('#')
#define MAN     ('@')
#define VISITED ('X')

int dx[] = { 0, 0, -1, 1 };
int dy[] = { -1, 1, 0, 0 };

int dfs(std::vector<std::vector<char> >& tiles, const int width, const int height, const int x, const int y) {
  if (tiles[y][x] == VISITED)
    return 0;
  tiles[y][x] = VISITED;
  int retval = 1;
  for (int i = 0; i < 4; ++i) {
    int cx = x + dx[i], cy = y + dy[i];
    if (cx < 0 || cy < 0 || width <= cx || height <= cy || tiles[cy][cx] == VISITED || tiles[cy][cx] == RED)
      continue;
    retval += dfs(tiles, width, height, cx, cy);
  }
  return retval;
}

int main(int argc, char const* argv[])
{
  while (true) {
    int W, H;
    std::cin >> W >> H;
    if (W == 0 && H == 0)
      break;
    int ix, iy;
    std::vector<std::vector<char> > tiles(H, std::vector<char>(W, '\0'));
    for (int y = 0; y < H; ++y) {
      for (int x = 0; x < W; ++x) {
        std::cin >> tiles[y][x];
        if (tiles[y][x] == MAN) {
          ix = x;
          iy = y;
        }
      }
    }
    std::cout << dfs(tiles, W, H, ix, iy) << std::endl;
  }
  return 0;
}