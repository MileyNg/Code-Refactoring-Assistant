#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<vector>

using namespace std;

int x[20000],y[20000];
char dir[20000];
int p[20000];
vector<vector<int> >G;

int dst(int x1,int y1,int x2,int y2){
  return abs(x1-x2)+abs(y1-y2);
}

bool dfs(int v){
  for(auto e:G[v]){
    int sp=(dst(x[v],y[v],x[e],y[e])==2)?-1:1;
    if(p[e]==0){
      p[e]=sp*p[v];
      if(!dfs(e))return false;
    }else{
      if(p[e]*p[v]!=sp)return false;
    }
  }
  return true;
}

int main(){
  for(int n;cin>>n,n;){
    for(int i=0;i<n;i++){
      cin>>x[i]>>y[i]>>dir[i];
    }
    G=vector<vector<int> >(n);
    for(int i=0;i<n;i++){
      for(int j=0;j<n;j++){
	if(i==j)continue;
	if(min({dst(x[i],y[i],x[j],y[j]),
		dst(x[i],y[i],x[j]+(dir[j]=='x'),y[j]+(dir[j]=='y')),
		dst(x[i]+(dir[i]=='x'),y[i]+(dir[i]=='y'),x[j],y[j]),
		dst(x[i]+(dir[i]=='x'),y[i]+(dir[i]=='y'),x[j]+(dir[j]=='x'),y[j]+(dir[j]=='y'))
		})==1){
	  G[i].push_back(j);
	}
      }
    }
    fill(begin(p),end(p),0);
    bool f=false;
    for(int i=0;i<n;i++){
      if(p[i]==0){
	p[i]=1;
      }
      f|=!dfs(i);
    }
    cout<<(f?"No":"Yes")<<endl;
  }
}  
    