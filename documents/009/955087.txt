#include <bits/stdc++.h>

#define rep_(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)
#define rep(v, n) rep_(v, 0, n)
#define lep(v, n) rep_(v, 1, n + 1)
#define rrep_(v, f, l) for (int v = (l), v##_ = (f); v >= v##_; --v)
#define rrep(v, n) rrep_(v, 0, n - 1)
#define rlep(v, n) rrep_(v, 1, n)
#define show_a(a, size) rep(a##_it, size) std::cout << a[a##_it] << " \n"[a##_it == a##_it_ - 1];
#define show_v(v) show_a(v, v.size())
#define eachv(v, i) rep(i, v.size())
#define reachv(v, i) rrep(i, v.size())
#define debug(x) std::cerr << #x << " = " << x << "\n";

using namespace std;

typedef long long int lint;

static inline int in(){ int x; scanf("%d", &x); return x; }
static inline lint inl(){ lint x; scanf("%lld", &x); return x; }

int main()
{
    vector<int> times;
    rep(i, 3){
        int h, m, s;
        int start;
        int end;
        h = in();
        m = in();
        s = in();
        start = h * 3600 + m * 60 + s;
        h = in();
        m = in();
        s = in();
        end = h * 3600 + m * 60 + s;
        times.push_back(end - start);
    }
    rep(i, 3){
        int h, m, s;
        h = times[i] / 3600;
        m = (times[i] % 3600) / 60;
        s = times[i] % 60;
        printf("%d %d %d\n", h, m, s);
    }
    return (0);
}