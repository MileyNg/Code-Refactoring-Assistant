#include <cstdio>
#include <cstring>
#include <cassert>
#include <functional>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <vector>
#include <map>
#include <iterator>
#include <queue>
#include <utility>

using namespace std;
#define whole(xs) xs.begin(), xs.end()
typedef long long Long;

int N, T;
vector<int> D;
void input() {
    cin >> N >> T;
    D.resize(N);
    for (int i = 0; i < N; i++) {
        cin >> D[i];
    }
}

Long LowerBound(int begin, int end, int key) {
    int lb = begin, ub = end - 1;
    if (D[ub] > key) return 0;
    if (D[lb] <= key) return end - begin;
    while (lb + 1 < ub) {
        int mid = (lb + ub) / 2;
        if (D[mid] > key) {
            lb = mid;
        } else {
            ub = mid;
        }
    }
    return end - ub;
}

const int MOD = int(1e9) + 7;
void solve() {
    sort(whole(D), greater<int>());
    Long Ans = 1;
    for (int i = 1; i < N; i++) {
        int K = D[i] + T;
        //cout << D[i] << " " << LowerBound(0, i, K) << endl;
        Ans = Ans * (LowerBound(0, i, K) + 1) % MOD;
    }
    cout << Ans << endl;
}

int main() {
    input();
    solve();
    return 0;
}