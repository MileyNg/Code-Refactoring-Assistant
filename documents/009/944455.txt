#include<cmath>
#include<iostream>

using namespace std;

#define PONTA true
#define GONTA false

int n;
int getMin(bool* cmb, bool party, int i, int* pows);
int getDiff(bool* cmb, int* pows);

int main(){
	while(cin >> n && n){
		int pows[n];
		bool cmb[n];
		for(int i = 0; i < n; i++) cin >> pows[i];
	
		cout << min( getMin(cmb, PONTA, 0, pows), getMin(cmb, GONTA, 0, pows) ) << endl;
	}
	return 0;
}

int getMin(bool* cmb, bool party, int i, int* pows){
	cmb[i] = party;
	return (i == n-1)? getDiff(cmb, pows):
		min( getMin(cmb, PONTA, i+1, pows), getMin(cmb, GONTA, i+1, pows) );
}

int getDiff(bool* cmb, int* pows){
	int p = 0, g = 0;
	for(int i = 0; i < n; i++){
		if(cmb[i] == PONTA) p += pows[i];
		else g += pows[i];
	}
	return abs(p-g);
}