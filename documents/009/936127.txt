#include<iostream>
#include<cstring>
using namespace std;
int mas[110][110];
bool d[110][110];
int dy[6]={-1,-1, 0, 0, 1, 1};
int dx_k[6]={ 0, 1,-1, 1, 0, 1};
int dx_g[6]={-1, 0,-1, 1,-1, 0};
int wall=0;
int wall_len=0;
void dfs(int,int);
int main(){
  int x,y;

  memset(d,true,sizeof(d));
  memset(mas,0,sizeof(mas));

  cin >> x >> y;

  for(int i=1;i<y+1;i++){
    for(int j=1;j<x+1;j++){
      cin >> mas[i][j];
    }
  }
  /*
  for(int i=0;i<=y+1;i++){
    for(int j=0;j<=x+1;j++){
      cout << mas[i][j] << " ";
    }
    cout << endl;
    }*/

  dfs(0,0);
  cout << wall_len << endl;
}

void dfs(int y,int x){
  d[y][x]=false;

  for(int i=0;i<6;i++){
    int ny=y + dy[i];
    int nx;
    if(y&1) nx=x + dx_k[i];//yの１バイト目が１だったら（奇数だったら）
    else nx=x + dx_g[i];

    if(ny>=0 && ny< 110 && nx>=0 && nx< 110 && d[ny][nx]==true){//規定範囲外に出ない間。
      if(mas[ny][nx]==0){//壁がなかったら
	dfs(ny,nx);
      }
      else{//壁があったら
	wall_len++;
      }
    }

  }
}