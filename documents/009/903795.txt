#include <vector>
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <utility>
#include <functional>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <climits>
#include <cassert>
#include <memory>
#include <time.h>
using namespace std;
inline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}
template<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long ll;
#define ALL(a) (a).begin(),(a).end()
#define RALL(a) (a).rbegin(),(a).rend()
#define EXIST(s,e) ((s).find(e)!=(s).end())
#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define REP(i,n) FOR(i,0,n)
const double EPS = 1e-9;
const double PI  = acos(-1.0);

typedef unsigned long long ull;
const ull B=100000007;

ull powMod(ull x, ull k) {
  if (k == 0)     return 1;
  if (k % 2 == 0) return powMod(x*x, k/2);
  else            return x*powMod(x, k-1);
}

int main(){
	ull n,m;
	cin>>n>>m;
	string s;
	cin>>s;
	vector<ull> h(s.size());
	h[0]=s[0];
	FOR(i,1,s.size()){
		h[i]=h[i-1]*B+s[i];
	}
	set<ull> st;
	int l=0,r=0;
	for(ull i=0;i<m;i++){
		string q;
		cin>>q;
		if(q=="R++"){
			r++;
		}
		if(q=="L++"){
			l++;
		}
		if(q=="R--"){
			r--;
		}
		if(q=="L--"){
			l--;
		}
		st.insert(h[r]-h[l]*powMod(B,r-l));
	}
	cout<<st.size()<<endl;
}