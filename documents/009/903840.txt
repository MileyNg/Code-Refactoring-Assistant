#include <iostream>
#include <queue>

using namespace std;

#define WH 32

int main(int argc, char const *argv[])
{
	int w,h;
	int f[WH][WH];
	int yoko[WH][WH];
	int tate[WH][WH];
	int x,y;

	while(1){
		cin>>w>>h;
		if(w+h==0) break;

		for(int i1=0;i1<WH;i1++){
			for(int i2=0;i2<WH;i2++){
				f[i1][i2]=0;
				yoko[i1][i2]=1;
				tate[i1][i2]=1;
			}
		}

		for(int i1=1;i1<2*h;i1++){
			if(i1%2==1){
				for(int i2=1;i2<w;i2++){
					cin>>yoko[i1/2+1][i2+1];
				}
			}
			else {
				for(int i2=1;i2<=w;i2++){
					cin>>tate[i1/2+1][i2];
				}
			}
		}

		queue<pair<int,int> > q;
		q.push(make_pair(1,1));
		f[1][1]=1;

		while(!q.empty()){
			x=q.front().first;
			y=q.front().second;
			q.pop();

			if(yoko[y][x+1]==0 && f[y][x+1]==0 ){
				f[y][x+1]=f[y][x]+1;
				q.push(make_pair(x+1,y));
			}
			if(yoko[y][x]==0 && f[y][x-1]==0){
				f[y][x-1]=f[y][x]+1;
				q.push(make_pair(x-1,y));
			}
			if(tate[y+1][x]==0 && f[y+1][x]==0){
				f[y+1][x]=f[y][x]+1;
				q.push(make_pair(x,y+1));
			}
			if(tate[y][x]==0 && f[y-1][x]==0){
				f[y-1][x]=f[y][x]+1;
				q.push(make_pair(x,y-1));
			}

		}
		cout<<f[h][w]<<endl;

	}
	return 0;
}