#include <iostream>
#include <algorithm>

using namespace std;
typedef long long ll;

#define REP(i,n) for(ll i=0;i<(ll)n; ++i)

ll table[1000000];
ll pollock[1000001];
ll dp[1000001];

void solution(ll output[1000001], int interval) {
	output[0] = 0;
	ll current_i = interval-1;
	REP(i, 1000001) {
		if (i == 0) continue;
		if (table[current_i + interval] == i) {
			output[i] = 1; current_i += interval;
			continue;
		}

		ll minimum = 1000001;
		for (ll j = 1; j <= current_i; j += interval) {
			minimum = min(output[i - table[j]] + 1, minimum);
		}
		output[i] = minimum;
	}
}

int main() {
	//freopen("Text.txt", "r", stdin);
	
	ll size = 0;
	{
		ll i = 0;
		table[0] = 0;
		while (1000001 > table[i]) {
			i++;
			table[i] = i*(i + 1)*(i + 2) / 6;
		}
		size = i;
	}

	solution(pollock, 1);
	solution(dp, 4);

	while (true) {
		int n;
		cin >> n;
		if (n==0) break;
		
		cout << pollock[n] << " " << dp[n] << endl;
	}

}