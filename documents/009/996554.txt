#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i=0;i<(n);i++)
int N,M;

int ans=0;
vector<int> result;
vector<int> amida(const vector<int>& vec) {
    vector<int> ret;
    rep(i,N) ret.push_back(i+1);
    rep(i,vec.size()) {
        swap(ret[vec[i]-1],ret[vec[i]]);
    }

    return ret;
}

bool check(const vector<int>& vec1,const vector<int>& vec2) {
    if(vec1.size()!=vec2.size()) return false;
    rep(i,vec1.size()) if(vec1[i]!=vec2[i]) return false;
    return true;
}
int cnt(const vector<int>& vec) {
    int ret=0;
    rep(i,vec.size()-1) {
        if(!i) continue;
        if(abs(vec[i]-vec[i+1])!=1 && abs(vec[i-1]-vec[i])) ret++;
    }
    return vec.size()-ret;

}

int main() {
    cin>>N>>M;
    vector<int> yoko;
    yoko.resize(M);
    rep(i,M) {
        int a; cin>>a;
        yoko[i]=a;
    }
    result = amida(yoko);
    ans=yoko.size();
    sort(yoko.begin(), yoko.end());

    do {
        vector<int> t1;
        rep(i,yoko.size()) {
            t1.push_back(yoko[i]);

            vector<int> t = amida(t1);
            
            //cout<<t.size()<<" : "<<endl;
            //rep(i,t.size()) cout<<t[i]<<" ";
            //cout<<endl;

            if(check(result,t)) {
                /*
                cout<<"find : ";
                rep(i,t1.size()) cout<<t1[i]<<" ";
                cout<<endl;
                cout<<cnt(t1)<<endl;
                */
                ans=min(ans,cnt(t1));
            }
        }

    } while(next_permutation(yoko.begin(), yoko.end()));
    cout<<ans<<endl;

    return 0;
}