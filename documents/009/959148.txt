#include <iostream>
using namespace std;

int side[7][7], point[201][201][201];


class Dice{
public:
	int top, s[6];
	Dice(int t, int f){
		s[0] = f; // front
		s[1] = 7 - f; // back
		s[2] = side[t][f]; //right
		s[3] = 7 - s[2]; //left
		s[4] = t; //top
		s[5] = 7 - t; //bottom
	}
};

//転がりたい場所にサイコロがいないかの判定
bool judge(int x, int y, int z, int j){
	int p;
	if (z == 0)
		return false;
	switch (j){
	case 0:
		p = point[x][y + 1][z - 1];
		break;
	case 1:
		p = point[x][y - 1][z - 1];
		break;
	case 2:
		p = point[x + 1][y][z - 1];
		break;
	case 3:
		p = point[x - 1][y][z - 1];
		break;
	}
	if (p == 0)
		return true;
	else
		return false;
}

void turn(int x, int y, int z, Dice d){
	while (true){
		if (z > 0 && point[x][y][z - 1] == 0)
			z--;
		else
			break;
	}
	for (int i = 6; i > 3; i--){
		for (int j = 0; j < 4; j++){
			if (i == d.s[j] && judge(x, y, z, j)){
				if (j == 0){
					Dice newd = Dice(d.s[1], d.s[4]);
					turn(x, y + 1, z, newd);
				}
				else if (j == 1){
					Dice newd = Dice(d.s[0], d.s[5]);
					turn(x, y - 1, z, newd);
				}
				else if (j == 2){
					Dice newd = Dice(d.s[3], d.s[0]);
					turn(x + 1, y, z, newd);
				}
				else if (j == 3){
					Dice newd = Dice(d.s[2], d.s[0]);
					turn(x - 1, y, z, newd);
				}
				return;
			}
		}
	}
	point[x][y][z] = d.s[4];
}



int main()
{
	//サイコロの設定
	side[1][2] = 3; side[1][3] = 5; side[1][4] = 2; side[1][5] = 4;
	side[2][3] = 1; side[2][4] = 6; side[2][6] = 3;
	side[3][5] = 1; side[3][6] = 5;
	side[4][5] = 6; side[4][6] = 2;
	side[5][6] = 4;
	for (int i = 1; i < 7; i++){
		for (int j = 1; j < 7; j++){
			if (i > j)
				side[i][j] = 7 - side[j][i];
		}
	}

	//入力
	int n, t, f;
	while (cin >> n, n){
		//初期化
		for (int i = 0; i < 201; i++){
			for (int j = 0; j < 201; j++){
				for (int k = 0; k < 201; k++){
					point[i][j][k] = 0;
				}
			}
		}

		//サイコロころがし
		for (int i = 0; i < n; i++){
			cin >> t >> f;
			Dice d = Dice(t, f);
			turn(100, 100, 200, d);
		}

		//集計
		int ans[7];
		for (int i = 0; i < 7; i++){
			ans[i] = 0;
		}
		for (int i = 0; i < 201; i++){
			for (int j = 0; j < 201; j++){
				for (int k = 200; k > -1; k--){
					if (point[i][j][k]>0){
						ans[point[i][j][k]]++;
						break;
					}
				}
			}
		}
		//出力
		for (int i = 1; i < 6; i++){
			cout << ans[i] << " ";
		}
		cout << ans[6] << endl;
	}
	return 0;
}