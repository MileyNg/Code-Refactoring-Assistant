//suhan lee,saitama university

#include <vector>
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <utility>
#include <functional>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <ctime>
#include <climits>
#include <cassert>
#include <complex>
using namespace std;

inline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}
template<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef long long ll;

#define ALL(a) (a).begin(),(a).end()
#define RALL(a) (a).rbegin(),(a).rend()
#define EXIST(s,e) ((s).find(e)!=(s).end())
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define repn(i,n) for(int i=0;i<n;i++)
#define EACH(t,i,c) for(t::iterator i=(c).begin(); i!=(c).end(); ++i)
#define pb push_back 
#define pf push_front

string rev(string s){
  string ret = s;
  repn(i,s.size()/2) {
    swap(ret[i], ret[s.size() - i - 1]);
  }
  return ret;
}

int solve(){
  string s;
  cin >> s;
  set<string> ss;
  int n = s.size();
  rep(i, 1, n) {
    string sl = s.substr(0, i);
    string sr = s.substr(i);
    //cout << sl << ", " << sr << endl;
    ss.insert(sr + sl);
    ss.insert(rev(sr) + sl);
    ss.insert(sr + rev(sl));
    ss.insert(rev(sr) + rev(sl));
    ss.insert(sl + sr);
    ss.insert(rev(sl) + sr);
    ss.insert(sl + rev(sr));
    ss.insert(rev(sl) + rev(sr));
  }
  return ss.size();
}

int main(){

  int m;
  cin >> m;
  repn(i,m) cout << solve() << endl;

  return 0;
}