#include <iostream>
#include <iomanip>
#include <cassert>
#include <algorithm>
#include <functional>
#include <vector>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <map>
#include <bitset>
#include <sstream>
#include <istream>
#include <cmath>
#include <cstdio>

using namespace std;

#define vci vector<int>
#define vcs vector<string>
#define pb push_back
#define sz size()
#define mapii map<int, int>
#define mapci map<char, int>
#define mapsi map<string, int>
#define all(x) x.begin(), x.end()
#define minit(a, i) memset(a, i, sizeof(a));

#define for_(i, a, b) for (int i=(int)a; i<(int)b; i++)
#define for_d(i, a, b) for (int i=(int)a-1; i>=b; i--)
#define for_r(i, a, b, c) for (int i=(int)a; i<(int)b; i += c)
#define for_dr(i, a, b, c) for (int i=(int)a-1; i>=b; i -= c)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)

typedef long long ll;
typedef double D;

const int iINF = 2147483647;
const ll lINF = 9223372036854775807;

template <class T> inline void dbg(T t) { cout << t << endl; }




bool isPrime(ll n) {
	if (n < 2) return false;
	for (int i = 2; i*i <= n; i++) if (n%i == 0) return false;
	return true;
}

int solve(int num) {
	int i = 2, cnt = 0, ret = 0;
	
	while (cnt < num) {
		if (isPrime(i)) {
			ret += i;
			cnt++;
		}
		i++;
	}
	
	return ret;
}

int main() {
	int n;
	
	while (1) {
		cin >> n; if (n==0) break;
		cout << solve(n) << endl;
	}

	return 0;
}