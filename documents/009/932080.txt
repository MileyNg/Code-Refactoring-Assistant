#include <iostream>
#include <sstream>
#include <fstream>

#include <ctime>
#include <cstdlib>
#include <cstring>
#include <cctype>

#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>

#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>

using namespace std;

template<typename T> ostream& operator<<(ostream& os, const vector<T>& v){
    os << "{ ";
    for(typename vector<T>::const_iterator it=v.begin(); it!=v.end(); ++it)
        os << '\"' << *it << '\"' << (it+1==v.end() ? "" : ", ");
    os << " }";
    return os;
}

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<vb> vvb;
#define vv(type,w,h,init) vector<vector<type>>(h,vector<type>(w,init))
typedef vector<string> vs;
typedef long long ll;
typedef unsigned uint;
typedef unsigned long ul;
typedef unsigned long long ull;

#define all(c) (c).begin(), (c).end()
#define rall(c) (c).rbegin(), (c).rend()
#define loop(i,a,b) for(int i=(a); i<(int)(b); i++)
#define rep(i,b) loop(i,0,b)
#define pb push_back
#define mp make_pair

string const resstr[] = {"Impossible","Possible","No","Yes"};

bool card[4][14];
string mark = "SHCD";

int main(){
	int n;
	
	for(int i=0; i < 4; i++){
		for(int j=0; j < 14; j++) card[i][j] = false;
	}
	
	cin >> n;
	for(int i=0; i < n; i++){
		char m;
		int l;
		cin >> m >> l;
		switch(m){
			case 'S':
					card[0][l] = true;
					break;
			case 'H':
					card[1][l] = true;
					break;
						case 'C':
					card[2][l] = true;
					break;
						case 'D':
					card[3][l] = true;
			break;
			
		}
	}
	for(int i=0; i < 4; i++){
		for(int j=1; j < 14; j++){
			if(!card[i][j]){
				cout << mark[i] << " " << j << endl;
			}
		}
	}
}