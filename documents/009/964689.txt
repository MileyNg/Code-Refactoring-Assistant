#include <iostream>
#include <algorithm>
using namespace std;

const int MAX_H = 50, MAX_W = 50;

int h, w;
int c[MAX_H][MAX_W];
int dp[MAX_H][MAX_W];

int solve(int h, int w)
{
    for (int i = 0; i < h; ++i) {
        for (int j = 0; j < w; ++j) {
            if (i == 0 && j == 0)
                dp[i][j] = c[i][j];
            else if (i == 0)
                dp[i][j] = dp[i][j - 1] + c[i][j];
            else if (j == 0)
                dp[i][j] = dp[i - 1][j] + c[i][j];
            else
                dp[i][j] = min(dp[i][j - 1], dp[i - 1][j]) + c[i][j];
        }
    }
    return dp[h - 1][w - 1];
}

int main()
{
    cin >> h >> w;
    for (int i = 0; i < h; ++i) {
        for (int j = 0; j < w; ++j) {
            char ch;
            cin >> ch;
            c[i][j] = ch - '0';
        }
    }

    fill(&dp[0][0], &dp[MAX_H][0], 0);
    cout << solve(h, w) << endl;
}