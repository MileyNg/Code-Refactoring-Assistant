#include <map>
#include <set>
#include <list>
#include <cmath>
#include <queue>
#include <stack>
#include <cstdio>
#include <string>
#include <vector>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
 
#define mp       make_pair
#define pb       push_back
#define all(x)   (x).begin(),(x).end()
#define rep(i,n) for(int i=0;i<(n);i++)
 
using namespace std;
 
typedef    long long          ll;
typedef    unsigned long long ull;
typedef    vector<bool>       vb;
typedef    vector<int>        vi;
typedef    vector<vb>         vvb;
typedef    vector<vi>         vvi;
typedef    pair<int,int>      pii;
 
const int INF=1<<29;
const double EPS=1e-9;
 
const int dx[]={1,0,-1,0},dy[]={0,-1,0,1};
int W,Q;
int wall[110];
int check(int id,int w){
	for(int i =0;i < W;i++){
		if(wall[i]==-1&&i + w -1 < W){
			bool ok = true;
			for(int j =i;j < i+ w;j++){
				if(wall[j]==-1)continue;
				else {
					ok =false;
				}
			}
			if(ok){
				for(int j = i;j < i + w;j++){
					wall[j] = id;
				}
				return i;
			}
		}
	}
	return -2;
}
void wake(int id){
	for(int i =0;i < W;i++){
		if(wall[i]==id){
			wall[i] = -1;
		}
	}
}
void show(){
	for(int i =0;i < W;i++){
		cout <<wall[i]<<" ";
	}
	cout <<endl;
}
int main(){
	while(cin>>W>>Q,W||Q){
		memset(wall, -1, sizeof(wall));
		for(int i =0;i < Q;i++){
			char p;
			// show();
			// cout <<endl;
			cin>>p;
			if(p=='s'){
				int id,w;
				cin>>id>>w;
				int d = check(id, w);
				if(d==-2){
					cout <<"impossible"<<endl;
				}else{
					cout <<d<<endl;
				}
			}else if(p=='w'){
				int id;
				cin>>id;
				wake(id);
			}
		}
		cout <<"END"<<endl;
	}
	return 0;
}