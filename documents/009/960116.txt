#include<bits/stdc++.h>

#define REP(i,s,n) for(int i=s;i<n;i++)
#define rep(i,n) REP(i,0,n)

using namespace std;

int n,cost,limit;
map<vector<int>,int> memo;

int dfs(int cnt,int sum,vector<int> remain){
  if( memo.find(remain) != memo.end() ) return memo[remain];
  int maxcost = cnt;
  REP(i,1,10){
    if( remain[i] == 0 ) continue;
    int nsum = sum + i;
    if( nsum >  10 ) continue;
    remain[i]--;
    if( nsum == 10 ) {
      maxcost = max(maxcost,dfs(cnt+1,0,remain));
    } else {
      maxcost = max(maxcost,dfs(cnt,nsum,remain));
    }
    remain[i]++;
  }
  return memo[remain] = maxcost;  
}


int main() {
  while( cin >> n, n ) { 
    memo.clear();
    vector<int> remain;
    remain.resize(10);
    cost = limit = 0;
    int coef = 0,input;
    rep(i,n) {
      cin >> input;
      if( input == 10 ) coef++;
      if( input >= 10 ) continue;
      remain[input]++;
    }

    REP(i,1,5) {
      int tmp = min(remain[i],remain[10-i]);
      coef += tmp;
      remain[i] -= tmp, remain[10-i] -= tmp;
    }
    int tmp = remain[5] / 2;
    coef += tmp, remain[5] -= tmp;

    cout << coef + dfs(0,0,remain) << endl;

  }
  return 0;
}