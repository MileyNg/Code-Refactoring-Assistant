#include<iostream>
#include<string>
#include<vector>
#include<algorithm>
#include<sstream>
using namespace std;
string str;

int rewrite(int from, string s){

	//end位置を取得
	int end = -1;
	for (int i = from; i < (signed)s.size(); i++){
		if (i >= 1 && s[i - 1] == ']' &&s[i] == ']'){
			end = i;
			break;
		}
	}

	//右端まで来たときの処理
	if (end == -1){
		if (from == 0)
			return -1;
		else
			return rewrite(0, s);
	}

	//start位置を取得
	int start = -1;
	for (int i = end;; i--){
		if (s[i] == '[' &&s[i - 1] == '['){
			start = i;
			break;
		}
	}

	//vectorに入れる
	vector<int> v;
	int startnum = -1;
	for (int i = start; i < end; i++){
		if (s[i] == '[')
			startnum = i + 1;
		if (s[i] == ']'){
			string snum;
			for (int j = startnum; j < i; j++){
				snum = snum + s[j];
			}
			int num = atoi(snum.c_str());
			v.push_back((num + 1) / 2);
			startnum = -1;
		}
	}

	//ソート
	sort(v.begin(), v.end());

	//半分を取り出し，和を計算
	int sum = 0;
	for (int i = 0; i < ((signed)v.size() + 1) / 2; i++)
		sum += v[i];
	sum = sum * 2 - 1;
	string news = string(s.begin(), s.begin() + start);
	stringstream ss;
	ss << sum;
	news += ss.str();
	news += string(s.begin() + end, s.end());
	str = news;
	return news.size() - (s.size() - end);

}

int main()
{
	int n;
	char before = '0';
	cin >> n;
	for (int i = 0; i < n; i++){
		cin >> str;
		int from = 0;
		while (1){
			from = rewrite(from, str);
			if (from == -1)
				break;
		}
		string ans = "";
		for (int i = 1; i < (signed)str.size() - 1; i++)
			ans += str[i];
		int ansnum = atoi(ans.c_str());
		cout << (ansnum + 1) / 2 << endl;
	}
	return 0;
}