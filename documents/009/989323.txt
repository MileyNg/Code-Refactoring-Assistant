/*
  AOJ 0142
  Title:Nature of Prime Numbers
  @kankichi573
*/
#include <stdio.h>
#include <string.h>

int n;
int sqr_cnt;
int sqr_table[10000];
int diff_table[5000];
void register1(int n)
{
  int i;
  for(i=0;i<sqr_cnt;i++)
    if(n == sqr_table[i])
      return;
  sqr_table[sqr_cnt]=n;
  sqr_cnt++;
  //printf("rg=%d\n",n);
}

all_diff()
{
  int i,j,d;

  for(i=0;i<sqr_cnt;i++)
    for(j=0;j<sqr_cnt;j++)
      {
	if(i==j)
	  continue;

	d=sqr_table[i]-sqr_table[j];
	//printf("d0=%d:",d);
	if(d<0)
	  d += n;
	//printf("d1=%d:",d);
	if(d > (n-1)/2)
	  d = n -d;
	//printf("d=%d\n",d);
	diff_table[d]++;
      }
}
clear()
{
  memset(sqr_table,0,10000*sizeof(int));
  memset(diff_table,0,10000*sizeof(int));
}
display()
{
  int i;
  for(i=1;i<=(n-1)/2;i++)
    printf("%d\n",diff_table[i]);
}
main()
{
  int i,w;

  while(scanf("%d",&n) && n)
    {
      sqr_cnt=0;
      clear();
      for(i=1;i<=n-1;i++)
	{
	  w = (i*i) % n;
	  register1(w);
	}
      //printf("cnt=%d\n",sqr_cnt);
      all_diff();
      display();
    }
  return(0);
}