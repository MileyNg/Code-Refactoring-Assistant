#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>

using namespace std;

#define rep(i,j) REP((i), 0, (j))
#define REP(i,j,k) for(int i=(j);(i)<(k);++i)
#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))
#define F first
#define S second
#define INF 1 << 30

typedef pair<int, int> pi;
typedef pair<int, pi> pii;
typedef vector<int> vi;
typedef queue<int> qi;
typedef long long ll;

int res[64], N, c[64], used[64], endf;

void dfs(int sum, stack<int> st){
  if(st.size() == N){
    endf = 1;
    int f = 1;
    while(!st.empty()){
      if(!f) printf(" ");
      f = 0;
      printf("%d", st.top());
      st.pop();
    }
    puts("");
    return;
  }


  rep(i, 14){
    if(!c[i]) continue;
    if((sum-i)%i != 0) continue;
    st.push(i);
    c[i]--;
    dfs(sum-i, st);
    if(endf) return;
    c[i]++;
    st.pop();
  }
}

int main(){
  while(scanf("%d", &N) && N){
    int in, sum = 0;
    endf = 0;
    memset(c, 0, sizeof(c));
    rep(i, N){
      scanf("%d", &in);
      sum += sum;
      c[in]++;
    }

    rep(i, 14){
      //      printf("%d\n", i);
      if(c[i] == 0) continue;
      if((sum-i)%i != 0) continue;
      c[i]--;
      stack<int> st;
      st.push(i);
      dfs(sum-i, st);
      if(endf) break;
      c[i]++;
    }

    if(!endf) puts("NO");
  }
  return 0;
}