#include <iostream>
#include <algorithm>
using namespace std;
#define rep(i,n) for (int i=0; i < (n); i++)

const int MAX_N = 16;
const int INF = 100000000;

int g[MAX_N][MAX_N];
int dp[1 << MAX_N][MAX_N];
int n;

int tsp(int visited, int v) {
  int& res = dp[visited][v];
  if (res != -1) return res;

  if (visited == (1 << n) - 1 && v == 0) return 0;

  res = INF;

  rep(u, n) {
    if (visited & (1 << u)) continue;
    res = min(res,
      tsp(visited | (1 << u), u) + g[v][u]);
  }
  return res;
}

int main() {
  int m;
  cin >> n >> m;

  rep(i, n) rep(j, n) g[i][j] = INF;
  rep(i, 1 << n) rep(j, n) dp[i][j] = -1;

  rep(i, m) {
    int s, t, d;
    cin >> s >> t >> d;

    g[s][t] = d;
  }

  int ans = tsp(0, 0);
  if (ans == INF) ans = -1;
  cout << ans << endl;

  return 0;
}