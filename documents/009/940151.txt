#include <iostream>
#include <vector>

using namespace std;

void solve()
{
	vector<int> triangleNum;
	int a = 1;
	while(a * (a + 1) / 2 <= 100000)
	{
		triangleNum.push_back(a * (a + 1) / 2);
		++a;
	}
	int N;
	while(cin >> N, N)
	{
		vector<int> b(N);
		int sum = 0;
		for(int i = 0; i < N; ++i)
		{
			cin >> b[i];
			sum += b[i];
		}
		int index = -1;
		for(int i = 0; i < triangleNum.size(); ++i)
		{
			if(triangleNum[i] == sum)
			{
				index = i + 1;
			}
		}
		if(index == -1)
		{
			cout << -1 << endl;
			continue;
		}
		else if(index == b.size())
		{
			bool initOk = true;
			for(int i = 0; i < index; ++i)
			{
				if(b[i] != i + 1)
				{
					initOk = false;
					break;
				}
			}
			if(initOk)
			{
				cout << 0 << endl;
				continue;
			}
		}

		int count = 1;
		while(count < 10000)
		{
			vector<int> next;
			for(int i = 0; i < b.size(); ++i)
			{
				if(b[i] != 1)
				{
					next.push_back(b[i] - 1);
				}
			}
			next.push_back(b.size());

			if(next.size() == index)
			{
				bool ok = true;
				for(int j = 0; j < index; ++j)
				{
					if(next[j] != j + 1)
					{
						ok = false;
						break;
					}
				}
				if(ok)
				{
					cout << count << endl;
					break;
				}
			}
			++count;
			b = next;
		}
		if(count >= 10000)
		{
			cout << -1 << endl;
		}
	}
}

int main()
{
	solve();
	return(0);
}