#include <sstream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <iostream>
#include <utility>
#include <set>
#include <cctype>
#include <queue>
#include <stack>
#include <cstdio>
#include <cstdlib>
#include <cmath>
using namespace std;
#define MAXV 110
#define INF 1e9

long long d[MAXV][MAXV];
int V, E;

void warshall_floyd(void) {
    for (int k = 0; k < V; k++) 
        for (int i = 0; i < V; i++)
            for (int j = 0; j < V; j++)
                d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
    for (int i = 0; i < V; i++) {
        if (d[i][i] < 0) {
            cout << "NEGATIVE CYCLE" << endl;
            return;
        }
    }
    for (int i = 0; i < V; i++) {
        if (d[i][0] < INF) cout << d[i][0];
        else cout << "INF";
        for (int j = 1; j < V; j++) {
            if (d[i][j] < INF) cout << " " << d[i][j];
            else cout << " INF";
        }
        cout << endl;
    }
    return;
}

int main(void) {
    cin >> V >> E;
    for (int i = 0; i < V; i++) 
        for (int j = 0; j < V; j++) 
            d[i][j] = INF;
    for (int i = 0; i < V; i++) d[i][i] = 0;
    for (int i = 0; i < E; i++) {
        long long s, t, D;
        cin >> s >> t >> D;
        d[s][t] = D;
    }
    warshall_floyd();
    return 0;
}