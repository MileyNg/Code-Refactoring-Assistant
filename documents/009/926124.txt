#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#define N 110
#define M 100100
using namespace std;

const int dx[5]={-1,0,1,0};
const int dy[5]={0,1,0,-1};
const char fa[5]={'N','E','S','W'};

long long dp[N][N][5];
int h,w,ansx,ansy,ansf;
long long ll;
int map[N][N];
int stackx[M],stacky[M],stackf[M];

void dfs(int x,int y,int f,long long l)
{
	if (l==ll) { ansx=x,ansy=y,ansf=f; return;}
	if (dp[x][y][f])
	{
		long long loop= l-dp[x][y][f];
		long long rest=ll-dp[x][y][f]+1;
		//tofind(x,y,f,rest%loop-1);
		long long toxy=dp[x][y][f]+rest%loop-1;
		ansx=stackx[toxy]; ansy=stacky[toxy]; ansf=stackf[toxy];
		return;
	}
	stackx[l]=x; stacky[l]=y; stackf[l]=f;
	dp[x][y][f]=l; int tof=f;
	while (map[x+dx[tof]][y+dy[tof]]==0)
		tof=(tof+1)%4;
	//stackx[l]=x; stacky[l]=y; stackf[l]=tof;
	dfs(x+dx[tof],y+dy[tof],tof,l+1);
}

void dfs1(int x,int y,int f,long long l)
{
    int tof=f,loop=0;
    while (l<ll)
    {
        while (map[x+dx[tof]][y+dy[tof]]==0)
            tof=(tof+1)%4;
        x+=dx[tof]; y+=dy[tof];
        l++;
        if (dp[x][y][tof]!=-1)
        {
            //long long loop= l-dp[x][y][f];
            //long long rest=ll-dp[x][y][f]+1;
            //long long toxy=dp[x][y][f]+rest%loop-1;
            //ansx=stackx[toxy]; ansy=stacky[toxy]; ansf=stackf[toxy];
            /*long long loo=l-dp[x][y][tof];
            long long rest=ll-l;
            rest%=loo;
            l=ll-rest;*/
            long long loo=l-dp[x][y][tof];
            long long rest=ll-l;
            long long div=rest/loo;
            //rest%=loo;
            //l=ll-rest;
            l+=div*loo;
            memset(dp,-1,sizeof dp);
            //loop=1;
        }
        else dp[x][y][tof]=l;

    }
    ansx=x; ansy=y; ansf=tof;
}

int main()
{
	int sx,sy,sf;
	char c;
	//freopen("in.txt","r",stdin);
	while (scanf("%d%d%lld",&h,&w,&ll),h|w|ll)
	{
		//cout<<123123<<endl;
		memset(map,0,sizeof map);
		for (int i=1;i<=h;i++)
		{
			getchar();
			for (int j=1;j<=w;j++)
			{
				scanf("%c",&c);
				if (c=='.') map[i][j]=1;
				else if (c=='#') map[i][j]=0;
				else if (c=='N') map[i][j]=1,sx=i,sy=j,sf=0;
				else if (c=='E') map[i][j]=1,sx=i,sy=j,sf=1;
				else if (c=='S') map[i][j]=1,sx=i,sy=j,sf=2;
				else if (c=='W') map[i][j]=1,sx=i,sy=j,sf=3;
			}
		}
		//cout<<123123<<endl;
		memset(dp,-1,sizeof dp); dp[sx][sy][sf]=0;
		dfs1(sx,sy,sf,0);
		printf("%d %d %c\n",ansx,ansy,fa[ansf]);
	}
	return 0;
}