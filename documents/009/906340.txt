#include <vector>
#include <iostream>
#include <set>
#include <cstdio>
#include <queue>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <ctime>
#include <algorithm>
#include <tuple>
#include <algorithm>
#include <limits>
#include <map>

using namespace std;

typedef long long ll;
typedef pair<int, int> P;
typedef tuple<int, int, int> T;
const ll INF = 1LL<<50;
ll dp[2][10010][2] = {};
int t[10010];
int main() {
    int n;
    int f = 0;
    cin >> n;
    t[0] = 0;
    for (int i = 1; i < n; i++) {
        cin >> t[i];
    }
    dp[0][0][1] = INF;
    for (int i = 1; i < n; i++) {
        dp[0][i][0] = dp[0][i][1] = INF;
    }
    for (int i = 0; i < n; i++) {
        f = 1-f;
        dp[f][0][0] = INF;
        for (int j = 1; j < n; j++) {
            dp[f][j][0] = min(dp[1-f][j-1][0], dp[1-f][j-1][1]+t[i]);
        }
        for (int j = 0; j < n; j++) {
            dp[f][j][1] = min(dp[1-f][j][0]+t[i], dp[1-f][j][1]);
        }
    }
    printf("%lld\n", min(dp[f][n/2][0], dp[f][n/2][1]));
    return 0;
}