#include <stdio.h>
#include <string.h>

void rev(char* input)
{
	int index;
	int i;
	
	index = strlen(input) - 1;
	
	for( i = 0; i < index; i++, index-- )
	{
		char buf;
		buf = input[i];
		input[i] = input[index];
		input[index] = buf;
	}
}

void add(char* strnum1, char* strnum2, char* result)
{
	int i;
	int over = 0;
	int len1;
	int len2;
	
	len1 = strlen( strnum1 ) - 1;
	len2 = strlen( strnum2 ) - 1;
	
	if( len1 > 80 || len2 > 80 )
	{
		strcpy( result, "overflow" );
		return;
	}
	
	rev( strnum1 );
	rev( strnum2 );
	
	for( i = len1 + 1; i < 80; i++ )
	{
		strnum1[i] = '0';
	}
	strnum1[80] = '\0';
	for( i = len2 + 1; i < 80; i++ )
	{
		strnum2[i] = '0';
	}
	strnum2[80] = '\0';
	
	for( i = 0; i <= 80; i++ )
	{
		result[i] = '\0';
	}
	
	for( i = 0; i < 80; i++ )
	{
		result[i] = ((strnum1[i] - '0') + (strnum2[i] - '0') + over) % 10 + '0';
		if( (strnum1[i] - '0') + (strnum2[i] - '0') + over > 9 )
		{
			over = 1;
		}
		else
		{
			over = 0;
		}
	}
	
	if( over == 1 )
	{
		strcpy( result, "overflow" );
	}
	else
	{
		rev( result );
	}
}

int main(void)
{
	int n;
	char strnum[2][128];
	char result[128];
	char* resultp;
	int i;
	
	scanf( "%d", &n );
	for( i = 0; i < n; i++ )
	{
		scanf( "%s%s", strnum[0], strnum[1] );
		add( strnum[0], strnum[1], result );
		resultp = result;
		if( strcmp( result, "overflow" ) != 0 )
		{
			for(; *resultp == '0'; resultp++ );
		}
		printf( "%s\n", resultp );
	}
	
	return (0);
}