#include <iostream>
#include <queue>
#include <stack>
#include <vector>
#include <stdio.h>
#include <algorithm>
#include <string>
#include <cstring>
#include <cmath>
#include <complex>
#include <map>
#include <climits>
using namespace std;

#define reep(i,a,b) for(int i=(a);i<(b);++i)
#define rep(i,n) reep((i),0,(n))
#define ALL(v) (v).begin(),(v).end()
#define PB push_back
#define EPS 1e-8
#define F first
#define S second
#define mkp make_pair

static const double PI=6*asin(0.5);
typedef long long ll;
typedef complex<double> CP;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vint;
static const int INF=1<<24;

struct S{
	ll a;
	ll b;
	ll c;
};

bool operator <(S x,S y){
	if(x.b==y.b&&x.c==y.c){
		return x.a>y.a;
	}
	else if(x.b==y.b){
		return x.c<y.c;
	}
	return x.b>y.b;
}


int main(){
	ll M,T,P,R;
	while(cin>>M>>T>>P>>R,M||T||P||R){
		vector<S> v(T);
		ll fal[T][P];
		rep(i,T){
			rep(j,P){
				fal[i][j]=0;
			}
		}
		rep(i,T){
			v[i].a=i;
			v[i].b=v[i].c=0;
		}
		rep(i,R){
			ll m,t,p,r;
			cin>>m>>t>>p>>r;
			//cout<<m<<" "<<t<<" "<<p<<" "<<r<<endl;
			t--;
			p--;
			if(r){
				fal[t][p]++;
			}
			else{
				v[t].b++;
				v[t].c+=m+fal[t][p]*20;
			}
		}
		sort(ALL(v));
		rep(i,T){
			//cout<<v[i].a+1<<" "<<v[i].b<<" "<<v[i].c<<endl;
		}
		rep(i,T){
			if(!i){
				cout<<v[i].a+1;
			}
			else{
				if(v[i].b==v[i-1].b&&v[i].c==v[i-1].c){
					cout<<"="<<v[i].a+1;
				}
				else cout<<","<<v[i].a+1;
			}
		}
		cout<<endl;
	}
	return 0;
}