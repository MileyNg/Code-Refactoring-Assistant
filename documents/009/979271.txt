#include<stdio.h>

int merge(int arr[], int l, int m, int h);
int merge_sort(int arr[],int low,int high);
int p=0;




int main()
{    
    int i,n;
    scanf("%d",&n);
    int arr[n];
    for(i=0;i<n;i++)
    scanf("%d",&arr[i]);
    merge_sort(arr, 0, n-1);

    for(i = 0; i < n; i++)
        printf("%d ", arr[i]);
        printf("\n%d\n", p);
    return 0;
}

int merge(int arr[], int l, int m, int h)
{
    int arr1[100], arr2[100];
    int n1, n2, i, j, k,f=9999;
    n1 = m - l + 1;   
    n2 = h - m;       

    for(i = 0; i < n1; i++)       
        arr1[i] = arr[l + i];

    for(j = 0; j < n2; j++)     
        arr2[j] = arr[m + j + 1];

    arr1[i] = f;    
    arr2[j] = f;

    i = 0;
    j = 0;

    for(k = l; k <= h; k++)      
    {
        if(arr1[i] <= arr2[j])
            arr[k] = arr1[i++];
        else
            arr[k] = arr2[j++];
            p++;
    }

    return 0;
}


int merge_sort(int arr[],int low,int high)
{
  

    int mid;

    if(low < high) 
    {
        mid = (low + high) / 2;          
        merge_sort(arr, low, mid);       
    
        merge_sort(arr, mid + 1, high); 
              
        merge(arr, low, mid, high);     
    }

    return 0;
}