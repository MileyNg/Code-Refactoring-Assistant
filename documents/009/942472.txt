#include<iostream>
#include<stack>

using namespace std;
   
#define INF 1000000
#define WALL -1

struct S{
	int x,y,t;
};

int main(void){
      
    int fi[63][63]; ///-30~30 -> 1~61 //
	int t,n;
	int x,y;
	int dy[]={ 1, 1, 0,-1,-1, 0};
	int dx[]={ 0, 1, 1, 0,-1,-1};
	int cnt;
	stack<S> s;
	S s1,s2;

	while(1){
		cin>>t>>n;
		if(t==0&&n==0) break;
		for(int i=0;i<63;i++){
			for(int j=0;j<63;j++){
				fi[i][j]=INF;
			}
		}
		for(int i=0;i<63;i++){
			fi[0][i]=WALL;
			fi[62][i]=WALL;
			fi[i][0]=WALL;
			fi[i][62]=WALL;
		}
		for(int i=0;i<n;i++){
			cin>>x>>y;
			fi[y+31][x+31]=WALL;
		}
		cin>>x>>y;
		s1.x=x+31,s1.y=y+31,s1.t=0;
		fi[y+31][x+31]=0;
		cnt=1;
		s.push(s1);
		while(!s.empty()){
			s1=s.top();
			s.pop();
			for(int i=0;i<6;i++){
				if(fi[s1.y][s1.x]+1<fi[s1.y+dy[i]][s1.x+dx[i]]){
					if(fi[s1.y+dy[i]][s1.x+dx[i]]==INF) cnt++;
					fi[s1.y+dy[i]][s1.x+dx[i]]=fi[s1.y][s1.x]+1;
					s2.x=s1.x+dx[i],s2.y=s1.y+dy[i],s2.t=fi[s1.y][s1.x]+1;
					if(s2.t!=t) s.push(s2);
				}
			}
		}
		cout<<cnt<<endl;
	}

    return 0;
}