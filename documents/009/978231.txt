#include <stdio.h>

void sort(int array[], int left, int right)
{
  int tmp_l, tmp_r, pivot;
  int tmp;

  tmp_l = left;
  tmp_r = right;
  pivot = (left + right) / 2;

  while (1) {
    while (array[tmp_l] < array[pivot]) {
      tmp_l++;
    }
    while (array[tmp_r] > array[pivot]) {
      tmp_r--;
    }
    if (tmp_l > tmp_r) {
      break;
    }

    tmp = array[tmp_l];
    array[tmp_l] = array[tmp_r];
    array[tmp_r] = tmp;

    tmp_l++;
    tmp_r--;
  }

  if (left < tmp_r) {
    sort(array, left, tmp_r);
  }
  if (tmp_l < right) {
    sort(array, tmp_l, right);
  }
}

int main(void)
{
  int n;
  int num[1000000];
  int i;

  scanf("%d", &n);
  for (i = 0; i < n; i++) {
    scanf("%d", &num[i]);
  }

  sort(num, 0, n - 1);

  for (i = 0; i < n; i++) {
    if (i != 0) {
      printf(" ");
    }
    printf("%d", num[i]);
  }
  printf("\n");

  return 0;
}