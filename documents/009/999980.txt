#include <iostream>
#include <vector>

using namespace std;

#define N 1000

bool isprime[N];
int main(){
    vector<int> ans(N+1);
    for (int i = 1; i <= 500; i++) {
        for (int j = i; j <= 500; j++) {
            if (i==j) continue;
            int tmp = 0;
            for (int k = i; k <= j; k++) {
                tmp += k;
            }
            if (tmp <= N) {
                ans[tmp] += 1;
            }
        }
    }
    int n;
    while (cin >> n, n) {
        cout << ans[n] << endl;
    }
    /*
    for (int i = 0; i < N; i++) { isprime[i] = 1;}
    isprime[0] = isprime[1] = 0;
    isprime[2] = 1;
    for (int i = 2; i < N; i++) {
        if (!isprime[i]) continue;
        for (int j = 2*i; j < N; j += i) {
            isprime[j] = 0;
        }
    }
    vector<int> plist;
    for (int i = 2; i < N; i++) {
        if (isprime[i]) plist.push_back(i);
    }

    int n;
    while (cin >> n, n) {
        int res = 0;
        if (n%2) res++;
        vector<int> pn;
        while (n>=2) {
            for (int i = 0; i < plist.size(); i++) {
                if (!(n % plist[i])) { 
                    n /= plist[i]; 
                    pn.push_back(plist[i]);
                    i = 0;
                }
            }
        }
        int oddn = 0;
        for (int i = 0; i < pn.size(); i++) {
            if (pn[i]%2) oddn++;
        }
    }
    */
    return 0;
}