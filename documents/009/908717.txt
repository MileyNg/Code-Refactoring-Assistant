#include <iostream>

class MyFigure
{
public:
    MyFigure(){};
    virtual ~MyFigure(){};
    
    virtual double Area() = 0;
    virtual double Periphery() = 0;
};

class MyRectangle : public MyFigure
{
public:
    MyRectangle(double width, double height);
    virtual ~MyRectangle();
    
    double Area();
    double Periphery();
    
protected:
    double m_width;
    double m_height;
};

MyRectangle::MyRectangle(double width, double height)
    :m_width(width)
    ,m_height(height)
{
}

MyRectangle::~MyRectangle()
{
}


double MyRectangle::Area()
{
    return m_width * m_height;
}

double MyRectangle::Periphery()
{
    return m_width*2 + m_height*2;
}

int main(int argc, const char * argv[])
{
    // insert code here...
    if(argc < 3)
    {
        std::cout<<"Bad arguments!\n";
        return -1;
    }

    int width = atoi(argv[1]);
    int height = atoi(argv[2]);
    
    MyRectangle rect(width, height);
    int area = rect.Area();
    int periphery = rect.Periphery();
    
    std::cout<<area << " " << periphery << std::endl;
    
    return 0;
}