#include <bits/stdc++.h>
using namespace std;

vector<int> merge(vector<int> A, vector<int> B){
  vector<int> result;
  while(A.size() > 0 || B.size() > 0){
    if(A.size() > 0 && B.size() > 0){
      if(A[0] <= B[0]){
	result.push_back(A[0]);
	A.erase(A.begin());
      }
      else{
	result.push_back(B[0]);
	B.erase(B.begin());
      }      
    }
    else if(A.size() > 0){
      result.push_back(A[0]);
      A.erase(A.begin());
    }
    else if(B.size() > 0){
      result.push_back(B[0]);
      B.erase(B.begin());
    }
  }
  return result;
}

vector<int> merge_sort(vector<int> A){
  int mid = (int)A.size() / 2;
  if(A.size() == 0) return vector<int>();
  if(A.size() == 1) return A;

  vector<int> left = merge_sort( vector<int>(A.begin(), A.begin()+mid ));
  vector<int> right = merge_sort( vector<int>(A.begin()+mid, A.end() ));
  return merge(left, right);
}

int main(){
  int n;
  cin >> n;
  vector<int> A(n);
  for(int i = 0 ; i < n ; i++) cin >> A[i];
  
  A = merge_sort(A);  
  
  for(int i = 0 ; i < n ; i++){
    cout << A[i];
    if(i == n-1) cout << endl;
    else cout << ' ';
  }
  
  return 0;
}