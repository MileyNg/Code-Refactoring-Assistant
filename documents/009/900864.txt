#include <iostream>
#include <vector>

using namespace std;

void solve()
{
	int N;
	while(cin >> N, N)
	{
		int W, H;
		cin >> W >> H;
		vector< vector<int> > dp(H + 1, vector<int>(W + 1));
		for(int i = 0; i < N; ++i)
		{
			int x, y;
			cin >> x >> y;
			dp[y][x] = 1;
		}
		for(int i = 1; i <= H; ++i)
		{
			for(int j = 1; j <= W; ++j)
			{
				dp[i][j] += dp[i][j - 1];
			}
		}
		for(int i = 1; i <= W; ++i)
		{
			for(int j = 1; j <= H; ++j)
			{
				dp[j][i] += dp[j - 1][i];
			}
		}

		int S, T;
		cin >> S >> T;
		int max_val = 0;
		for(int i = T; i <= H; ++i)
		{
			for(int j = S; j <= W; ++j)
			{
				max_val = max(max_val, dp[i][j] - dp[i - T][j] - dp[i][j - S] + dp[i - T][j - S]);
			}
		}
		cout << max_val << endl;
	}
}

int main()
{
	solve();
	return(0);
}