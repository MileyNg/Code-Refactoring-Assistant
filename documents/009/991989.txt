#include <iostream>
#include <vector>
#include <algorithm>

#define N_MAX (246912)

std::vector<int> primes;

void get_primes(void) {
  std::vector<bool> v(N_MAX + 1);
  for (int i = 0; i <= N_MAX; ++i) {
    v[i] = true;
  }
  v[0] = false; v[1] = false;
  for (int i = 2; i < N_MAX; ++i) {
    if (v[i]) {
      primes.push_back(i);
      for (int j = i * 2; j < N_MAX; j += i) {
        v[j] = false;
      }
    }
  }
}

int main(int argc, char const* argv[])
{
  get_primes();
  int n_primes = primes.size();
  while (true) {
    int n;
    std::cin >> n;
    if (n == 0)
      break;
    if (n == 1) {
      std::cout << 1 << std::endl;
      continue;
    }
    int cnt = 0;
    for (int i = 0; i < n_primes; ++i) {
      if (n < primes[i] && primes[i] <= (2 * n))
        ++cnt;
    }
    std::cout << cnt << std::endl;
  }
  return 0;
}