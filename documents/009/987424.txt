#include<stdio.h>
#include<string.h>
#include<iostream>
#include<queue>
#include<string>
#define lld long long
using namespace std;
int n, i, j, k, v;
int a[2000], dp[3][311000], b[2000];
int ok(int x)
{
    for(int i = 1; i <= (1<<20); i <<= 1)
        if (x == i) return 1;
    return 0;
}
int work[2000];
int main(){
    while(~scanf("%d", &n)){
        if (!n) break;
        for(i = 0; i < n; i++)
            scanf("%d", &a[i]);
        memset(work,0,sizeof(work));
        int ans = 1;
        for(i = 0;i < n; i++){
            if (work[i]) continue;
            int cnt = 0;
            for(j = 0; j < n; j++)
                if (a[j] % a[i] == 0 && ok(a[j] / a[i]))
                b[++cnt] = a[j] / a[i];
            for(k = 1; k <= 19; k++){
                memset(dp,-1,sizeof(dp));
                dp[0][0] = 0;
                int len = (1 << (k - 1));
                for(j = 1; j <= cnt; j++)
                for(v = b[j]; v <= len; v++)
                    if ((((b[j]-1) & (v-b[j])))==0)
                    if (dp[!(j % 2)][v - b[j]] != -1)
                    dp[j % 2][v] = max(dp[j % 2][v], dp[!(j % 2)][v - b[j]] + 1);
                ans = max(ans, dp[0][len]);
                ans = max(ans, dp[1][len]);
            }
            for(j = 0; j < n; j++)
                if (a[j] == a[i]) work[j] = 1;
        }
        cout<<ans<<endl;
    }
}