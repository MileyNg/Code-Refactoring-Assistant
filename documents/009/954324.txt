#include <cstdio>
#include <cstring>
#include <cassert>
#include <functional>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <vector>
#include <map>
#include <iterator>
#include <queue>
#include <utility>

using namespace std;
typedef long long Long;

int N;
bool Free[51][31];

bool input() {
    cin >> N;
    if (N == 0) return false;
    memset(Free, 0, sizeof(Free));
    for (int i = 0; i < N; i++) {
        int Count; cin >> Count;
        for (int j = 0; j < Count; j++) {
            int F; cin >> F;
            Free[F][i] = true;
        }
    }
    return true;
}

void solve() {
    Long dp[31][N];
    memset(dp, 0, sizeof(dp));
    for (int i = 0; i < N; i++) dp[0][i] |= (1LL << i);
    for (int i = 1; i <= 30; i++) {
        for (int j = 0; j < N; j++) {
            dp[i][j] = dp[i - 1][j];
        }
        Long bit = 0;
        for (int j = 0; j < N; j++) {
            if (Free[i][j]) bit |= dp[i][j];
        }
        if (bit == (1LL << N) - 1) {
            cout << i << endl;
            return;
        }
        for (int j = 0; j < N; j++) {
            if (Free[i][j]) dp[i][j] = bit;
        }
    }
    cout << -1 << endl;
}

int main() {
    while (input()) {
        solve();
    }
    return 0;
}