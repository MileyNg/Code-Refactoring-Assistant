#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int INF = (int)1e9;
int G[100][100];

int main() {
  ios::sync_with_stdio(false);
  int V, E; cin >> V >> E;

  for(int i = 0; i < V; i++)
    for(int j = 0; j < V; j++)
      G[i][j] = INF;

  for(int i = 0; i < V; i++)
    G[i][i] = 0;

  for(int i = 0; i < E; i++) {
    int from, to, cost;
    cin >> from >> to >> cost;
    G[from][to] = cost;
  }

  for(int k = 0; k < V; k++)
    for(int i = 0; i < V; i++)
      for(int j = 0; j < V; j++)
        G[i][j] = min(G[i][j], G[i][k] + G[k][j]);

  bool negative_loop = false;
  for(int i = 0; i < V; i++)
    if(G[i][i] < 0) negative_loop = true;

  if(negative_loop) {
    cout << "NEGATIVE CYCLE" << endl;
  }
  else {
    for(int i = 0; i < V; i++) {
      for(int j = 0; j < V; j++) {
        if(G[i][j] == INF) cout << "INF";
        else cout << G[i][j];

        cout << " \n"[j + 1 == V];
      }
    }
  }
}